{"title": "微信小程序开发中 var that =this的用法 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>开发中，var that =this的声明很常见。举个例子，代码如下！</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>示例代码1</h4><pre class=\"prettyprint hljs groovy\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//index.js  </span>\r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>  Page({  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">3</span>   \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">4</span>   <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">data:</span> {  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">5</span>    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">toastHidden:</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>   },  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">7</span>   \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">8</span>   <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">loadData:</span> function () {  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">9</span>      var that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//这里声明了that；将this存在that里面  </span>\r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>     wx.request({  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">11</span>       <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">url:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'test.php'</span>,  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12</span>       <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">data:</span> {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">a:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'a'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">b:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'b'</span>},  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">13</span>       <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">header:</span> {  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">14</span>        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'content-type'</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'application/json'</span>  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">15</span>       },  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">16</span>       success(res) {  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">17</span>           that.setData({ <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">toastHidden:</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span> }) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//这里使用了that，这样就可以获取Page({})对象  </span>\r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">18</span>        },  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">19</span>      })  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>    }  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">21</span>  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">22</span>  })</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在代码中第9行声明了var that =this；第17行使用了that。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果不声明var that =this，且that改成this，代码如下！</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>示例代码2</p><pre class=\"prettyprint hljs groovy\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//index.js  </span>\r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>   Page({  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">3</span>  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">4</span>    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">data:</span> {  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">5</span>     <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">toastHidden:</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>   },  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">7</span>  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">8</span>    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">loadData:</span> function () {  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">9</span>      wx.request({  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>      <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">url:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'test.php'</span>,  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">11</span>      <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">data:</span> {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">a:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'a'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">b:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'b'</span>},  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12</span>      <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">header:</span> {  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">13</span>       <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'content-type'</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'application/json'</span>  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">14</span>      },  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">15</span>      success(res) {  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">16</span>        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({ <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">toastHidden:</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span> })  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">17</span>       },  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">18</span>      })  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">19</span>   }  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>  \r\n<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">21</span>  })</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>此时运行代码就会报以下错误！</p><p><a href=\"data/attachment/portal/202002/06/115357lzmejt7gkeeti4t9.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/06/115357lzmejt7gkeeti4t9.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>从报错中得知setData这个属性读不到，为何读不到？这跟this关键字的作用域有关！</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>this作用域分析：</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1.在Page({})里面，this关键字指代Page({})整个对象</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2.因此可以通过this关键字访问或者重新设置Page({})里data的变量</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>3.然而在loadData函数中使用了wx.request({})API这个方法导致在wx.request({})里没办法使用this来获取Page({})对象</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>4.虽然在wx.request({})里没法使用this获取Page({})对象，但是可以在wx.request({})外面先把this存在某个变量中，所以就有了var that =this 这个声明。此时that指代Page({})整个对象，这样子就可以在wx.request({})里使用that访问或者重新设置Page({})里data的变量</p> </td>", "pub_time": "2020-2-6 00:52", "author": "Rolan"}
{"title": "源码级别高度定制小程序vant弹窗组件 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>作为从事前端开发的你肯定见过不少的弹框组件，你可曾有想过要自己实现一个弹框组件库，又或者想完全定制化的使用各种标准UI框架中的弹框组件呢？</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>今天这篇文章将会带着你解析这一系列疑问，以vant-weapp组件库为例，从开发标准的弹窗组件使用到高度定制复合自我审美的弹窗，再到完全研究清楚vant-weapp框架弹窗组件部分源码。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>一、vant-weapp弹窗组件介绍</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>vant-weapp组件库是有赞团队开发的 <strong style=\"text-indent: 0px;\">一款灵活简洁且美观的<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>UI组件库</strong> ，此文将以这个组件库的用法为标准，下文提及的弹框组件均指的是此组件库中的弹框。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>弹框分类</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>vant-weapp中弹框主要分为**两大类：弹出层Popup和对话框Dialog，**弹出层一般是带有背景遮罩层和内容展示区域用于在不跳转页面情况下进行详情的展示作用，对话框多数用于带有详情展示的同时还带有希望用户确认等操作。如下图所示，图左为典型的Dialog，图右为典型的Popup。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134106qcy2yz82zjw8p6up.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134106qcy2yz82zjw8p6up.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>注册小程序组件</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在使用弹框组件之前记得在小程序的app.json文件中先注册组件，详细介绍见 <a target=\"_blank\" href=\"https://youzan.github.io/vant-weapp/#/quickstart#yin-ru-zu-jian\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">快速上手</a> ，例如注册van-popup组件代码如下：</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>// app.json\r\n<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"usingComponents\"</span>: {\r\n  <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-popup\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"path/to/@vant/weapp/dist/popup/index\"</span>\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在项目中实际使用如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134106pb77adgdw842f2qf.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134106pb77adgdw842f2qf.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在本文后续分析van-dialog源码中会发现在dialog的index.json中也定义过van-popup组件，但是我们要直接实行van-popup组件必须在小程序的配置文件app.json中按照上图方式进行定义，微信小程序官网说明过 <strong style=\"text-indent: 0px;\">自定义组件内部的引入组件只在该组件内生效</strong></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>注册完组件之后，就可以直接在小程序页面中使用这里注册的自定义组件，组件名称为这里 <strong style=\"text-indent: 0px;\">key</strong> ，例如：。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>二、Popup基本用法</h2><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>常见用法</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最常见的用法就是直接使用van-popup组件，通过组件的show属性来控制其是否展示，组件内部嵌套的其他组件或标签是popup组件的内容，如下所示：</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// wxml</span>\r\n&lt;button bindtap=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"showPopup\"</span>&gt;展示弹出层&lt;/button&gt;\r\n&lt;van-popup\r\n\tshow=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{ show }}\"</span>\r\n\tposition=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"top\"</span>\r\n\tbind:close=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onClose\"</span>\r\n  closeable\r\n&gt;内容&lt;/van-popup&gt;\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// js</span>\r\nPage({\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n    show: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n  },\r\n  showPopup() {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({ show: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span> });\r\n  },\r\n  onClose() {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({ show: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span> });\r\n  }\r\n});\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>重点属性分析</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>van-popup组件可以通过position属性的五个值： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>center、top、right、bottom、left</code> 来快捷的控制是从哪个位置弹出，例如：上例中的弹框从上往下弹出</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以通过round属性来控制弹窗内容是否显示圆角，closeable可以决定是否显示关闭弹框的图标按钮，例如：上例中的弹窗将不显示圆角，同时显示关闭按钮</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>各种基本的弹窗形式如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134106gaafashhaxft3ttz.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134106gaafashhaxft3ttz.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>三、Dialog对话框基本用法</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>对话框则是在popup弹出层的基础上添加了额外的内置的标题，快速确定按钮等组件，用于消息提示、消息确认等场景，下面看看其常见用法。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>常规用法——带标题</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最常规的用法就是直接使用van-dialog组件，通过组件的show属性来控制其是否展示，组件内部嵌套的其他组件或标签是dialog组件的内容，如下所示：</p><pre class=\"prettyprint hljs verilog\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// wxml</span>\r\n&lt;van-dialog\r\n  title=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"标题\"</span>\r\n\tmessage=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"代码是写出来给人看的，附带能在机器上运行\"</span>\r\n  show=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{ show }}\"</span>\r\n  confirm-button-open-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getUserInfo\"</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bind</span>:close=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onClose\"</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bind</span>:getuserinfo=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getUserInfo\"</span>\r\n&gt;\r\n  &lt;image src=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://img.yzcdn.cn/1.jpg\"</span> /&gt;\r\n&lt;/van-dialog&gt;\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// js</span>\r\nPage({\r\n  data: {\r\n    show: true\r\n  },\r\n  getUserInfo(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>) {\r\n    console<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.log</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span><span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.detail</span>);\r\n  },\r\n  onClose() {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span><span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.setData</span>({ close: false });\r\n  }\r\n});\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>常规用法——无标题</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>直接使用van-dialog组件，通过组件的show属性来控制其是否展示，组件内部嵌套的其他组件或标签是dialog组件的内容，不使用use-title-slot且不传递title属性，如下所示：</p><pre class=\"prettyprint hljs verilog\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// wxml</span>\r\n&lt;van-dialog\r\n  show=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{ show }}\"</span>\r\n  confirm-button-open-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getUserInfo\"</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bind</span>:close=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onClose\"</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bind</span>:getuserinfo=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getUserInfo\"</span>\r\n&gt;\r\n  &lt;view <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"message\"</span>&gt;代码是写出来给人看的，附带能在机器上运行&lt;/view&gt;\r\n&lt;/van-dialog&gt;\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// js</span>\r\nPage({\r\n  data: {\r\n    show: true\r\n  },\r\n  getUserInfo(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>) {\r\n    console<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.log</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span><span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.detail</span>);\r\n  },\r\n  onClose() {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span><span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.setData</span>({ close: false });\r\n  }\r\n});\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>上述两种用法中的use-slot属性表示使用默认的slot（即van-dialog嵌套的wxml内容，比如此处的 <view>...）来作为内容输出，bind:getuserinfo等是使用的微信开发能力（即在点击确定按钮时候对调用微信平台API获取到对应的信息，此处是获取用户个人身份信息）</view></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>函数式调用——confirm</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最常规的另一种用法就是直接使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Dialog、Dialog.alert、Dialog.confirm</code> 的方法快速打开弹窗组件，关闭弹框组件则通过 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Dialog.close</code> ，取消弹框的加载状态则使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Dialog.stopLoading</code>，组件内部嵌套的其他组件或标签是dialog组件的内容，如下所示：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// wxml</span>\r\n&lt;van-dialog id=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-dialog\"</span>&gt;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> Dialog <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'path/to/@vant/weapp/dist/dialog/dialog'</span>;\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// js</span>\r\nDialog.alert({\r\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"标题\"</span>\r\n  message: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'代码是写出来给人看的，附带能在机器上运行'</span>\r\n}).then(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// on close</span>\r\n});\r\n\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里使用函数调用一定要注意在使用van-dialog的页面的wxml中一定需要写这个来使用组件，下文在分析dialog的源码中会讲到（卖个关子），或者你可以先猜一猜:blush::blush:</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>上面三种van-dialog的常规使用方法的效果如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134106sixx7nk4fekua3u4.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134106sixx7nk4fekua3u4.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>四、Dialog进阶用法</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下面将会提供几个作者在实战中写出的Dialog对话框组件的实战用法</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用use-title-slot定制标题</h2><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-dialog</span>\r\n  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-dialog\"</span>\r\n  <span class=\"hljs-attr\">show</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ dialogShow }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">message</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"资质原件拍照或扫描可以不加盖公章，复印件需盖章\\n\\n如是三证合一，则无需提供税务登记证、组织机构代码证\"</span>\r\n  <span class=\"hljs-attr\">message-align</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"left\"</span>\r\n  <span class=\"hljs-attr\">confirm-button-text</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"知道了\"</span>\r\n  <span class=\"hljs-attr\">confirm-button-color</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#EE712F\"</span>\r\n  <span class=\"hljs-attr\">use-title-slot</span>\r\n&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"title\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\" merchant-dialog__title\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"merchant-dialog__title-text\"</span>&gt;</span>开户前，请准备以下资料<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"cross\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"40rpx\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"merchant-dialog__title-icon\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"closeDialog\"</span> /&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-dialog</span>&gt;</span>\r\n// 样式部分的代码此处省略\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>触发弹框显示</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>handleButtonClick1: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"></span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n  \t<span class=\"hljs-attr\">dialogShow</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n  })\r\n},\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>此例子如要使用了如下特性：</p><pre class=\"hljs sql\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">use</span>-title-slot\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">confirm</span>-button-<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">text</span>、<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">confirm</span>-button-color\r\nvan-icon\r\n</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>对应的效果如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134107g99ra99n5d6venaq.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134107g99ra99n5d6venaq.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用use-slot定制提示内容</h2><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-dialog</span>\r\n  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-dialog-2\"</span>\r\n  <span class=\"hljs-attr\">use-slot</span>\r\n  <span class=\"hljs-attr\">use-title-slot</span>\r\n&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"title\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"padding-bottom: 10px;\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"close\"</span> <span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#fff\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"30\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"closeDialog2\"</span> /&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"image\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://tva1.sinaimg.cn/large/0082zybply1gbylbcwm44j30rs13bdsg.jpg\"</span> <span class=\"hljs-attr\">mode</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"aspectFit\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-dialog</span>&gt;</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过触发弹框显示</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">handleButtonClick2</span>: function () {\r\n  Dialog({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">selector</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#van-dialog-2'</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">showConfirmButton</span>: false,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">closeOnClickOverlay</span>: false,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">className</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'dialog2'</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'260px'</span>\r\n  })\r\n},\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>此例子如要使用了如下特性：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>use-slot</code> 表示使用默认的slot来内容来渲染到弹框主体内容位置</li><li style=\"line-height: 1.7em; list-style-type: disc;\">渲染的内容为一张图片，以此来 <strong>实现幕帘curtain效果</strong></li><li style=\"line-height: 1.7em; list-style-type: disc;\">使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>className</code> 这个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>externalClasses</code> 来用页面样式控制组件内部样式</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>对应效果如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134107s9u7nut39dwtmtpw.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134107s9u7nut39dwtmtpw.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用css变量定义主题</h2><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-dialog</span>\r\n  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-dialog-3\"</span>\r\n  <span class=\"hljs-attr\">use-title-slot</span>\r\n&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"title\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"color: #000;\"</span>&gt;</span>提示<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>为了给你推荐更合适的漫展～<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>请开启定位权限～<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-dialog</span>&gt;</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过触发弹框显示</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">handleButtonClick3</span>: function () {\r\n  Dialog({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">selector</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#van-dialog-3'</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">showCancelButton</span>: true,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">cancelButtonTrext</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'取消'</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">confirmButtonText</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'去设置'</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">cancelButtonColor</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#C46B85'</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">confirmButtonColor</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#C46B85'</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">message</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'为了给你推荐更合适的漫展～\\n请开启定位权限～'</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">confirmButtonOpenType</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'openSetting'</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'260px'</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">className</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'dialog3'</span>\r\n  })\r\n},\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>外部样式类</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.dialog-index--dialog3</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">--dialog-background-color</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">rgba</span>(255,255,255,0.8);\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">--popup-background-color</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">rgba</span>(255,255,255,0.8);\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">--button-default-background-color</span>: transparent;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#666</span>;\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>此例子如要使用了如下特性：</p><pre class=\"hljs lua\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>cancelButtonColor、confirmButtonColor\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">--dialog-background-color</span>\r\n</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>对应效果如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134107ui6pi38ijpi4i3zi.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134107ui6pi38ijpi4i3zi.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>五、开发实际场景中的弹窗组件</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果你仔细看过上面中的三种自定义方式的实现代码应该也可以根据UI需求实现自己的弹窗交互效果；这里我已经基于前面提到的三种用法来开发了几个实际场景中的弹框组件：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">实现幕帘curtain效果</li><li style=\"line-height: 1.7em; list-style-type: disc;\">实现操作权限提示</li><li style=\"line-height: 1.7em; list-style-type: disc;\">提示应用升级</li><li style=\"line-height: 1.7em; list-style-type: disc;\">应用使用提示</li></ul><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134107h49n45i9919lin9h.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134107h49n45i9919lin9h.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这部分的可以直接去看源码 <a target=\"_blank\" href=\"https://github.com/JohnieXu/vant-weapp\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">github.com/JohnieXu/va…</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>也可以扫码这个小程序二维码查看效果</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134107fer94ttuebrurri9.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134107fer94ttuebrurri9.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>六、源码分析的前置条件</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在看完上面几种炫酷的弹框效果后，我们还是按照惯例研究下如此强大的弹框组件的源码。在研究弹框部分源码之前有必有分析一下一套完整UI框架所需要注意的框架级别的整体架构</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>如何使用less工程化处理样式</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>处理样式是所有UI框架比不可忽略的核心逻辑之一，在vant-weapp中对样式的处理主要分为以下三部分；源码对应结构如下图所示，使用less的mixins复用实现主题变量控制、公共样式抽离等。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134108lm0w949moqy37vhe.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134108lm0w949moqy37vhe.jpg\"></a></p></figure><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>主题变量</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在var.less文件定义了框架所用到的全部的样式控制相关的变量，其中与弹框相关的部分源码如下：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// Dialog</span>\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-width:</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">320px</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-small-screen-width:</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">90%</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-font-size:</span> <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@font-size-lg</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-border-radius:</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">16px</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-background-color:</span> <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@white</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-header-font-weight:</span> <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@font-weight-bold</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-header-line-height:</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">24px</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-header-padding-top:</span> <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@padding-lg</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-header-isolated-padding:</span> <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@padding-lg</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-message-padding:</span> <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@padding-lg</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-message-font-size:</span> <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@font-size-md</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-message-line-height:</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20px</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-message-max-height:</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60vh</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-has-title-message-text-color:</span> <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@gray-7</span>;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@dialog-has-title-message-padding-top:</span> <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@padding-sm</span>;\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>源码： <a target=\"_blank\" href=\"https://github.com/youzan/vant-weapp/blob/dev/packages/common/style/var.less\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">var.less</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>此文件中的最终会转换成 <strong style=\"text-indent: 0px;\">css变量</strong> ，并非像antd、iview等网页端框架中的样式处理那样编译成变量指向的值。根据css变量作用域的特性，可以在自定义组件的外部样式类中局部覆盖样式变量来改变组件内部的样式。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>通用样式</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>像清除浮动、文字省略、1像素边框等通用的样式类的处理在mixin文件夹下</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>清除浮动</h4><pre class=\"prettyprint hljs scss\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.clearfix</span>() {\r\n  &amp;::after {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: table;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">clear</span>: both;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">content</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>;\r\n  }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用常见的after伪类来实现清除浮动</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>文件省略</h4><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.multi-ellipsis</span>(<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@lines</span>) {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: -webkit-box;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">overflow</span>: hidden;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-overflow</span>: ellipsis;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">-webkit-line-clamp</span>: <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@lines</span>;\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* autoprefixer: ignore next */</span>\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">-webkit-box-orient</span>: vertical;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.ellipsis</span>() {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">overflow</span>: hidden;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">white-space</span>: nowrap;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-overflow</span>: ellipsis;\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用less的函数封装了两个处理文字省略方法：单行省略、多行省略</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>BEM命名</h3><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>如何工程化的注册自定义组件</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序官方提供了 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/component.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">Component构造方法</a> 注册自定义组件，为了结合typescript给自定义组件提供更灵活强大的组件注册器对Component进行了下面的功能封装处理</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>封装通用组件构造方法</h3><pre class=\"prettyprint hljs gradle\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>function VantComponent&lt;Data, Props, Methods&gt;(\r\n  vantOptions: VantComponentOptions&lt;\r\n    Data,\r\n    Props,\r\n    Methods,\r\n    CombinedComponentInstance&lt;Data, Props, Methods&gt;\r\n  &gt; = {}\r\n): <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">void</span> {\r\n  const <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">any</span> = {};\r\n  mapKeys(vantOptions, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>, {\r\n    data: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'data'</span>,\r\n    props: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'properties'</span>,\r\n    mixins: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'behaviors'</span>,\r\n    methods: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'methods'</span>,\r\n    beforeCreate: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'created'</span>,\r\n    created: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'attached'</span>,\r\n    mounted: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'ready'</span>,\r\n    relations: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'relations'</span>,\r\n    destroyed: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'detached'</span>,\r\n    classes: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'externalClasses'</span>\r\n  });\r\n  const { relation } = vantOptions;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (relation) {\r\n    makeRelation(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>, vantOptions, relation);\r\n  }\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 给所有组件添加默认外部样式类custom-class</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>.externalClasses = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>.externalClasses || [];\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>.externalClasses.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">push</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'custom-class'</span>);\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 给所有组件添加默认behaviors</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>.behaviors = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>.behaviors || [];\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>.behaviors.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">push</span>(basic);\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// map field to form-field behavior</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (vantOptions.field) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>.behaviors.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">push</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx://form-field'</span>);\r\n  }\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 默认启用多slot支持、组件中允许全局样式修改</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span> = {\r\n    multipleSlots: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">true</span>,\r\n    addGlobalClass: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">true</span>\r\n  };\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 最终使用官网构造方法构造组件</span>\r\n  Component(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>);\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>源码： <a target=\"_blank\" href=\"https://github.com/youzan/vant-weapp/blob/dev/packages/common/component.ts\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">component.ts</a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>behaviors复用共享逻辑</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>behaviors</code> 是微信小程序官方用于组件复用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>data、methods</code> 等属性方法的一种方式，和vue中的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>mixins</code> 小作用一致，vant-weapp中定义的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>mixins</code> 如下图所示:</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134108wwcwmwc2cyj42bhj.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134108wwcwmwc2cyj42bhj.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其中basic是所有自定义组件都复用的一个mxin，给所有自定义的组件提供了三个方法： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>$emit</code>、 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>set</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getRect</code> 。</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>$emit</code> 封装了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>triggerEvent</code> 方法；</li><li style=\"line-height: 1.7em; list-style-type: disc;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>set</code> 封装 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>setData</code> 方法为Promise形式；</li><li style=\"line-height: 1.7em; list-style-type: disc;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getRect</code> 采用Promise方法用查找对应节点的boundingClientRect。</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>源码如下：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// basic.ts</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> basic = Behavior({\r\n  <span class=\"hljs-attr\">methods</span>: {\r\n    $emit(...args) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.triggerEvent(...args);\r\n    },\r\n    set(data: object, <span class=\"hljs-attr\">callback</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Function</span>) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData(data, callback);\r\n\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Promise</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">resolve</span> =&gt;</span> wx.nextTick(resolve));\r\n    },\r\n    getRect(selector: string, <span class=\"hljs-attr\">all</span>: boolean) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Promise</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">resolve</span> =&gt;</span> {\r\n        wx.createSelectorQuery()\r\n          .in(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>)[all ? <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'selectAll'</span> : <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'select'</span>](selector)\r\n          .boundingClientRect(<span class=\"hljs-function\"><span class=\"hljs-params\">rect</span> =&gt;</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (all &amp;&amp; <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Array</span>.isArray(rect) &amp;&amp; rect.length) {\r\n              resolve(rect);\r\n            }\r\n\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!all &amp;&amp; rect) {\r\n              resolve(rect);\r\n            }\r\n          })\r\n          .exec();\r\n      });\r\n    }\r\n  }\r\n});\r\n\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>源码： <a target=\"_blank\" href=\"https://github.com/youzan/vant-weapp/blob/dev/packages/mixins/basic.ts\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">basic.ts</a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>生命周期命名</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其实生命周期如何命名到不是很重要，vant-weapp对命名进行了转换主要基于以下两个原因：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><strong>开发效率</strong> ：vant-weapp源自适用于vue的UI组件库—— <a target=\"_blank\" href=\"https://github.com/youzan/vant\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">vant</a> ，命名统一转换便于现有框架的逻辑复用</li><li style=\"line-height: 1.7em; list-style-type: disc;\"><strong>使用成本</strong> ：生命周期命名向主流MVVM框架靠近减轻使用者的学习成本、框架维护成本</li></ul><pre class=\"prettyprint hljs scala\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>function mapKeys(source: <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">object</span>, <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">target</span></span>: <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">object</span>, <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">map</span></span>: <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">object</span>) </span>{\r\n  <span class=\"hljs-type\" style=\"color: rgb(136, 0, 0);\">Object</span>.keys(map).forEach(key =&gt; {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (source[key]) {\r\n      target[map[key]] = source[key];\r\n    }\r\n  });\r\n}\r\nmapKeys(vantOptions, options, {\r\n  data: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'dat</span>a',\r\n  props: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'propertie</span>s',\r\n  mixins: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'behavior</span>s',\r\n  methods: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'method</span>s',\r\n  beforeCreate: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'create</span>d',\r\n  created: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'attache</span>d',\r\n  mounted: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'read</span>y',\r\n  relations: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'relation</span>s',\r\n  destroyed: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'detache</span>d',\r\n  classes: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'externalClasse</span>s'\r\n});\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>源码： <a target=\"_blank\" href=\"https://github.com/youzan/vant-weapp/blob/dev/packages/common/component.ts#L24\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">component.ts#L24</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>mapKeys</code> 方法对 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>VantComponent</code> 中传入的生命周期函数进行了转换，转换名生命周期名称与微信小程序一致</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>自定义组件的样式隔离</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序自定义组件默认样式作用域的范围是为当前组件，也就是说组件文件夹下的wxss中的样式只对该文件夹下的wxml生效（除去标签名、ID选择器）</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这种以组件为单位进行样式隔离的模式类似于React框架中处理的组件样式的库 <a target=\"_blank\" href=\"https://github.com/styled-components/styled-components\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">styled-components</a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>组件间样式共享</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>要在组件之前共享样式或者让自定义组件接受外部样式，可行方案有如下几种：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>| styleIsolation属性配置 |</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">page-isolated 表示在这个页面禁用 app.wxss ，同时，页面的 wxss 不会影响到其他自定义组件；</li><li style=\"line-height: 1.7em; list-style-type: disc;\">page-apply-shared 表示在这个页面禁用 app.wxss ，同时，页面 wxss 样式不会影响到其他自定义组件，但设为 shared 的自定义组件会影响到页面；</li><li style=\"line-height: 1.7em; list-style-type: disc;\">page-shared 表示在这个页面禁用 app.wxss ，同时，页面 wxss 样式会影响到其他设为 apply-shared 或 shared 的自定义组件，也会受到设为 shared 的自定义组件的影响。 | styleIsolation 选项从基础库版本 2.6.5 开始支持 | | --- | --- | --- | | addGlobalClass属性配置 | 表示页面 wxss 样式将影响到自定义组件，但自定义组件 wxss 中指定的样式不会影响页面 |</li><li style=\"line-height: 1.7em; list-style-type: disc;\">小程序基础库版本 2.2.3 以上支持</li><li style=\"line-height: 1.7em; list-style-type: disc;\">等价于styleIsolation: apply-shared</li><li style=\"line-height: 1.7em; list-style-type: disc;\"><strong>vant-weapp中使用的是此方案</strong> ： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>addGlobalClass: 'true'</code> ，默认的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>styleIsolation: 'shared'</code> 不生效 | | externalClasses外部样式类 | 组件的使用者可以指定这个样式类对应的外部样式名 ，对应样式名的样式在组件内部生效 |</li><li style=\"line-height: 1.7em; list-style-type: disc;\">基础库 1.9.90 开始支持</li><li style=\"line-height: 1.7em; list-style-type: disc;\">vant-weapp中也支持此方式</li><li style=\"line-height: 1.7em; list-style-type: disc;\"><strong>推荐使用此方式来自定义vant-weapp的样式</strong> | | class=\"~blue-text\"引用父组件样式 | 即使启用了样式隔离 isolated ，组件仍然可以在局部引用组件所在页面的样式或父组件的样式 | 基础库 2.9.2 开始支持 |</li></ul><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用总结</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用vant-weapp组件库的使用者最佳的自定义组件样式的方式是： 采用外部样式类+CSS变量，在无相关CSS变量时才用自己的样式+ <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>!important</code>  确保样式优先级 ，在自定义组件中使用vant-weapp的组件时候的注意事项参照 <a target=\"_blank\" href=\"https://youzan.github.io/vant-weapp/#/custom-style\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">样式覆盖</a> 。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>自定义组件通信方案</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>自定义组件通信主要包括 <strong style=\"text-indent: 0px;\">组件参数传递</strong> 和 <strong style=\"text-indent: 0px;\">事件监听</strong> ，这两个功能都是微信小程序官网提供的；参数传递是由父传到子的单向传递，而事件监听则是相应原生事件或者自定义事件。自定义事件用于对组件的事件进行封装，自定义事件机制如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134108ecb3xmqgxqbjdvjf.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134108ecb3xmqgxqbjdvjf.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里在van-dialog组件使用位置监听bindclick事件，最终这个事件会在van-dialog组件内部的button的tap时被触发，后面源码分析中的自定义组件的自定义事件全部采用的此种模式。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>七、Popup弹出层组件源码分析</h2><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>组件部分源码结构</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>popup组件部分源码结构如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134108wwcwmwc2cyj42bhj.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134108wwcwmwc2cyj42bhj.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>组件的命名规范与微信小程序自定义组件的规范相符合（README.md为组件的使用说明文档，用于生成官网的组件文档说明）。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>popup组件的配置文件标识当前的index为组件，通过 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>using-components</code> 引入了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>van-icon</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>van-overlay</code> 组件，在对应的wxml中可以直接使用。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>组件主要逻辑</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>弹出层组件主要分类 <strong style=\"text-indent: 0px;\">遮盖层</strong> 和 <strong style=\"text-indent: 0px;\">内容层</strong> ，内容层嵌套在遮盖层内部来确保视觉上覆盖在遮盖层之上。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>遮盖层及事件</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>遮盖层通过overlay、overlayStyle等组件属性来控制其是否显示以及遮盖层的样式等，遮盖的事件有 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>onClickOverlay</code> ，通过$emit触发组件的自定义事件close。</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>onClickOverlay() {\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.$emit(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'click-overlay'</span>);\r\n\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.closeOnClickOverlay) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.$emit(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'close'</span>);\r\n  }\r\n}\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>关闭按钮及事件</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过closable属性决定是否显示默认的关闭按钮，也可以通过关闭图标相关属性配置更改按钮样式，关闭按钮的事件有onClickCloseIcon，通过$emit触发组件的自定义事件close。</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>onClickCloseIcon() {\r\n  this.$emit(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'close'</span>);\r\n},\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>内容分发</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>接受一个默认的slot，其位置根据传入的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>position</code> 参数不同有 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>top、right、bottom、left、center</code> 五种，根据这五种位置参数有对应的五种不同的弹出位置和动画</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>过渡动画</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用transform来实现动画效果，根据 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>position</code> 参数的五种情况有五种默认动画</p><pre class=\"prettyprint hljs scss\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// popup/index.less</span>\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-bottom-enter</span>,\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-bottom-leave-to</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transform</span>: translate3d(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>);\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-top-enter</span>,\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-top-leave-to</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transform</span>: translate3d(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, -<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>);\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-left-enter</span>,\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-left-leave-to</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transform</span>: translate3d(-<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>, -<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50%</span>, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>);\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-right-enter</span>,\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-right-leave-to</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transform</span>: translate3d(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>, -<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50%</span>, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>);\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>同时暴露了外部样式类可以用来自定义动画，这里动画阶段划分和vue相同，分类： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>enter、enter-active、enter-to、leave、leave-active、leave-to</code></p><pre class=\"prettyprint hljs scala\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// popup/index.ts</span>\r\n<span class=\"hljs-type\" style=\"color: rgb(136, 0, 0);\">VantComponent</span>({\r\n  classes: [\r\n    <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'enter</span>-<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>',</span>\r\n    <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'enter</span>-active-<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>',</span>\r\n    <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'enter</span>-to-<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>',</span>\r\n    <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'leave</span>-<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>',</span>\r\n    <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'leave</span>-active-<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>',</span>\r\n    <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'leave</span>-to-<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>'</span>\r\n  ],\r\n  ...\r\n}\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>八、Dialog对话框组件源码分析</h2><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>组件部分源码结构</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>dialog组件部分源码结构如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134108lm0w949moqy37vhe.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134108lm0w949moqy37vhe.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>结构同popup组件，不同点在于index.json使用了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>van-popup、van-button</code> 组件，以及多了dialog.ts这个暴露API函数调用方法的文件。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>组件布局结构</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>dialog组件整体基于popup组件，在其默认slot中添加了顶部标题的slot和按钮组元素，大致结构如下</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/26/134108bprrnszegy4apxc4.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134108bprrnszegy4apxc4.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>源码结构：</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\">// dialog/index.wxml\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-popup</span>\r\n  <span class=\"hljs-attr\">show</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ show }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">...</span>\r\n&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>\r\n    <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ title || useTitleSlot  }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-dialog__header </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ message || useSlot ? '' : 'van-dialog--isolated' }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  &gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">slot</span> <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ useTitleSlot }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"title\"</span> /&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">block</span> <span class=\"hljs-attr\">wx:elif</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ title }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span> </span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ title }</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">block</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">slot</span> <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ useSlot }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> /&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>\r\n    <span class=\"hljs-attr\">wx:elif</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ message }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-dialog__message </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ title ? 'van-dialog__message--has-title' : '' }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">} </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ messageAlign ? 'van-dialog__message--' + messageAlign : '' }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  &gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-dialog__message-text\"</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ message }</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-hairline--top van-dialog__footer\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-button</span>\r\n      <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ showCancelButton }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n      <span class=\"hljs-attr\">...</span>\r\n    &gt;</span>\r\n      </span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ cancelButtonText }</span><span class=\"xml\">}\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-button</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-button</span>\r\n      <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ showConfirmButton }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n      <span class=\"hljs-attr\">...</span>\r\n    &gt;</span>\r\n      </span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ confirmButtonText }</span><span class=\"xml\">}\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-button</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-popup</span>&gt;</span>\r\n复制代码</span></pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>函数式调用实现</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在前面中通过Dialog函数调用来打开弹出框组件，实现函数式调用的核心思路主要是： 通过selectComponent(selector)方法查找（类似于查找DOM、Vue中查找组件实例）对页面中定义渲染好的dialog组件，手动更新其组件实例的数据。 ** Dialog方法定义如下：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> Dialog: Dialog = <span class=\"hljs-function\"><span class=\"hljs-params\">options</span> =&gt;</span> {\r\n  options = {\r\n    ...Dialog.currentOptions,\r\n    ...options\r\n  };\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> context = options.context || getContext();\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> dialog = context.selectComponent(options.selector);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">delete</span> options.context;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">delete</span> options.selector;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (dialog) {\r\n      dialog.setData({\r\n        <span class=\"hljs-attr\">onCancel</span>: reject,\r\n        <span class=\"hljs-attr\">onConfirm</span>: resolve,\r\n        ...options\r\n      });\r\n      queue.push(dialog);\r\n    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.warn(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'未找到 van-dialog 节点，请确认 selector 及 context 是否正确'</span>);\r\n    }\r\n  });\r\n};\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>**</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>函数式调用时候根据传入的options配置去更新找到的组件实例上的属性</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由微信小程序自定义组件限制不能更新slot，slot需要用组件嵌套来传入</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>函数式调用中的options会有默认值强制覆盖掉van-dialog组件属性处传入的非id等其他属性，即函数调用的时通过组件传入的属性无效</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>**</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Dialog.confirm</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>确认弹窗</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>调用方法</h4><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Dialog</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.confirm</span>({\r\n\t<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">selector</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#van-dialog'</span>,\r\n\ttitle: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'提示'</span>,\r\n\tmessage: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'这里放置提示内容'</span>\r\n})\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现方式</h4><pre class=\"prettyprint hljs yaml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>Dialog.confirm = options =<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">&gt;\r\n  Dialog({\r\n</span><span class=\"hljs-attr\">    showCancelButton:</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n    ...options\r\n  });\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>调用Dialog时候默认执行定了显示取消按钮，其他无区别</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Dialog.close</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>关闭弹窗</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>调用方法</h4><pre class=\"hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Dialog</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.close</span>()\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现方式</h4><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>Dialog.close = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n  queue.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">dialog</span> =&gt;</span> {\r\n    dialog.close();\r\n  });\r\n  queue = [];\r\n};\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>遍历内部缓存的所有调用Dialog方法找到的van-dialog组件实例，执行其close方法</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Dialog.setDefaultOptions</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>更改对话框默认配置</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>调用方法</h4><pre class=\"hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Dialog</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.setDefaultOptions</span>(options)\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现方式</h4><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Object</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.assign</span>(<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Dialog</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.currentOptions</span>, <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>);\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过Object.assign将传入的默认配置合并到内部Dialog.currentOptions配置上</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Dialog.resetDefaultOptions</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>恢复对话框默认配置</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>调用方法</h4><pre class=\"hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Dialog</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.resetDefaultOptions</span>()\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现方式</h4><pre class=\"prettyprint hljs coffeescript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>Dialog.resetDefaultOptions = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n  Dialog.currentOptions = { ...Dialog.defaultOptions };\r\n};\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>恢复Dialog.currentOptions配置为Dialog.defaultOptions</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>总结</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>本文讲解了vant-weapp组件库中的弹框组件的基本用法、进阶用法、定制主题、自定义内容等用法，同时还更进一步的研究了vant-weapp组件中的popup组件、dialog组件的实现。也只有彻底弄懂了UI框架的封装思路我们才能更进一步的修改框架来定制化更复杂更贴合项目要求的各种组件，本文按照 <strong style=\"text-indent: 0px;\">由实用到进阶再到研究源码</strong> 的思路为各位研究框架源码提供另一种方法。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>下一步将会在vant-weapp弹框组件之上封装一系列实战的案例，期待你的关注与收藏。</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>若此文对你有一点点帮助请点个赞鼓励下作者，毕竟原创不易:)</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首发自语雀： <a target=\"_blank\" href=\"https://www.yuque.com/johniexu/frontend/gcwh2v\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">www.yuque.com/johniexu/fr…</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>作者博客地址： <a target=\"_blank\" href=\"https://blog.lessing.online/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">blog.lessing.online/</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>作者github： <a target=\"_blank\" href=\"https://github.com/johniexu\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">github.com/johniexu</a></p> </td>", "pub_time": "2020-2-26 00:33", "author": "Rolan"}
{"title": "小程序-日历签到 ", "content": "<td id=\"article_content\"> \n                     \n                    <div><p>看小效果哈</p>\r\n<p></p><figure><p><a href=\"data/attachment/portal/202002/26/134530pfjozmujcu5fjnoj.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/26/134530pfjozmujcu5fjnoj.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<p>首先，我们要获取的无非就是每一个格子里面的数据。</p>\r\n<p>先获取月，然后点击月切换到另一个月，到了边界线的时候到了上/下年即可。</p>\r\n<p>那么，怎么获取月的数据呢，可以看到月第一天都是1开始，然后xx天，比如1月31天，我们把它枚举出来。</p>\r\n<p>但是月份受到年份影响，所以计算是否闰年就完成了。</p>\r\n<p>上代码<br>\r\n<strong>获取这个月的7*5列表</strong></p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\"><span class=\"hljs-built_in\">let</span> getMothList = (year, month) =&gt; {\r\n    var star = new Date(Date.UTC(year, month - 1, 1)).getDay()\r\n    <span class=\"hljs-built_in\">let</span> mn = getMothNum(year)[month - 1]\r\n    var res = []\r\n    var row = []\r\n    new Array(35)\r\n        .fill(<span class=\"hljs-string\">''</span>)\r\n        .map((_, i) =&gt; i - star + 1)\r\n        .map(e =&gt; \r\n            (e &gt; 0 &amp;&amp; e &lt;= mn)\r\n            ? ({\r\n                date: `<span class=\"hljs-variable\">${year}</span>/<span class=\"hljs-variable\">${month}</span>/<span class=\"hljs-variable\">${e}</span>`,\r\n                number: e \r\n            })\r\n            : (null)\r\n        )\r\n        .forEach((item, i) =&gt; {\r\n            row.push(JSON.parse(JSON.stringify(item)))\r\n            <span class=\"hljs-keyword\">if</span>((i + 1) % 7 == 0){\r\n                res.push(row)\r\n                row = []\r\n            }\r\n        })\r\n    <span class=\"hljs-built_in\">return</span> res\r\n}\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>然后获取月</p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">var getMaxY = y =&gt;  Boolean(\r\n\ty % 4 ==0 &amp;&amp; y % 100 != 0 || y % 400==0\r\n)\r\nvar getAugNum = n =&gt; getMaxY(n) ? 29 : 28\r\n// --获取年对应的月份\r\nvar getMothNum = y =&gt; ([ 31, getAugNum(y), 31, 30,  31, 30, 31,31, 30, 31, 30, 31 ])\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>我上面js就这些了（还差上下月切换的没说哈）</p>\r\n<p>但是少了中文的月份，有需要的这个可以再匹配</p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">var mothZh = [<span class=\"hljs-string\">'一'</span>,<span class=\"hljs-string\">'二'</span>,<span class=\"hljs-string\">'三'</span>,<span class=\"hljs-string\">'四'</span>,<span class=\"hljs-string\">'五'</span>,<span class=\"hljs-string\">'六'</span>,<span class=\"hljs-string\">'七'</span>,<span class=\"hljs-string\">'八'</span>,<span class=\"hljs-string\">'九'</span>,<span class=\"hljs-string\">'十'</span>,<span class=\"hljs-string\">'十一'</span>,<span class=\"hljs-string\">'十二'</span>].map(e =&gt; e + <span class=\"hljs-string\">'月'</span>)\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>然后就是上下月月份了</p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">\r\n  up(e){\r\n    var data = e.currentTarget.dataset\r\n    <span class=\"hljs-keyword\">if</span>(data.data == <span class=\"hljs-string\">'上'</span>){\r\n      <span class=\"hljs-keyword\">if</span>(this.data.dateM &gt; 1){\r\n        var dateM = this.data.dateM\r\n        var dateY = this.data.dateY\r\n        this.setDate(dateY, dateM - 1)\r\n      }<span class=\"hljs-keyword\">else</span>{\r\n        var dateY = this.data.dateY\r\n        this.setDate(dateY - 1, 12)\r\n      }\r\n    }\r\n  },\r\n  down(e){\r\n    var data = e.currentTarget.dataset\r\n    <span class=\"hljs-keyword\">if</span>(data.data == <span class=\"hljs-string\">'下'</span>){\r\n      <span class=\"hljs-keyword\">if</span>(this.data.dateM &lt; 12){\r\n        var dateM = this.data.dateM\r\n        var dateY = this.data.dateY\r\n        this.setDate(dateY, dateM + 1)\r\n      }<span class=\"hljs-keyword\">else</span>{\r\n        var dateY = this.data.dateY\r\n        this.setDate(dateY + 1, 1)\r\n      }\r\n    }\r\n  },\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>上下月操作好了就是更新数据了，更新数据的时候，因为<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>不能在view里面写逻辑，所以我们在mpa里面操作（这是我的业务逻辑，你们不用管他，我之所以放出来是方便大家查看）</p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">  <span class=\"hljs-built_in\">set</span>Date(dateY, dateM){\r\n    var date_list = getMothList(dateY, dateM)\r\n    .map(e =&gt; !e ? e : e.map(day =&gt; {\r\n      var cat_date = this.data.cat_date\r\n      <span class=\"hljs-built_in\">return</span> !day ? day : {\r\n        ...day,\r\n        className: this.data.chckin_list.indexOf(day.date) != -1 ? <span class=\"hljs-string\">'checkin'</span> : <span class=\"hljs-string\">''</span>,\r\n        sign: day.date == [cat_date.y, cat_date.m, cat_date.d].join(<span class=\"hljs-string\">'/'</span>),\r\n        maxToday: +(Date.UTC(day.date.split(<span class=\"hljs-string\">'/'</span>)[0], day.date.split(<span class=\"hljs-string\">'/'</span>)[1] - 1, +(day.date.split(<span class=\"hljs-string\">'/'</span>)[2])))\r\n          &gt; Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()),\r\n      }\r\n    }))\r\n    this.setData(({\r\n      dateY,\r\n      dateM,\r\n      date_list,\r\n    }))\r\n    // 获取月和修改的时候，获取签到列表\r\n    this.setSign(dateY, dateM)\r\n    // console.log(date_list)\r\n  },\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>然后会注意到，这里有一个chckin_list，这个就是要渲染出来的啦。\r\nview</p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">&lt;view class=<span class=\"hljs-string\">\"week\"</span>&gt;\r\n            &lt;view class=<span class=\"hljs-string\">\"flex\"</span> wx:<span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"{{date_list}}\"</span> wx:key=<span class=\"hljs-string\">\"index\"</span> wx:<span class=\"hljs-keyword\">for</span>-item=<span class=\"hljs-string\">\"row\"</span>&gt;\r\n                &lt;view \r\n                class=<span class=\"hljs-string\">\"day {{day.maxToday ? 'maxToday' : ''}}\"</span> \r\n                wx:<span class=\"hljs-keyword\">for</span>=<span class=\"hljs-string\">\"{{row}}\"</span> wx:<span class=\"hljs-keyword\">for</span>-index=<span class=\"hljs-string\">\"row_idx\"</span> wx:<span class=\"hljs-keyword\">for</span>-item=<span class=\"hljs-string\">\"day\"</span> wx:key=<span class=\"hljs-string\">\"row_idx\"</span>\r\n                <span class=\"hljs-built_in\">bind</span>:tap=<span class=\"hljs-string\">\"tapDay\"</span>\r\n                data-day=<span class=\"hljs-string\">\"{{day.date}}\"</span>\r\n                &gt;\r\n                    &lt;block wx:<span class=\"hljs-keyword\">if</span>=<span class=\"hljs-string\">\"{{day}}\"</span>&gt;\r\n                        &lt;text class=<span class=\"hljs-string\">\"block to_day_block  {{day.sign ? 'select_date' : ''}}\"</span> wx:<span class=\"hljs-keyword\">if</span>=<span class=\"hljs-string\">\"{{toDay == day.date}}\"</span>&gt;今&lt;/text&gt;\r\n                        &lt;text class=<span class=\"hljs-string\">\"block  {{day.sign ? 'select_date' : ''}}\"</span> wx:<span class=\"hljs-keyword\">else</span>&gt;{{day.number}}&lt;/text&gt;\r\n                    &lt;/block&gt;\r\n                    &lt;view wx:<span class=\"hljs-keyword\">if</span>=<span class=\"hljs-string\">\"{{day.className}}\"</span> class=<span class=\"hljs-string\">\"{{day.className}}\"</span>&gt;已签&lt;/view&gt;\r\n                &lt;/view&gt;\r\n            &lt;/view&gt;\r\n        &lt;/view&gt;\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>上面是我的业务逻辑，其实只需要if，day就行了，因为除了空的，其他都需要渲染。但是一般业务也有是否签到啊，今天以后的灰色不可点击啊（这里没有不可点击是因为用css禁用点击）</p>\r\n<h3 class=\"heading\" data-id=\"heading-0\">其他</h3>\r\n<p>之所以没放css，大家css还是自己写吧，如果真有需要，在下面评论。</p>\r\n<p>哦， 如果要看效果，去小程序里面搜索，《初九背单词》，点击日历（一个是首页完成今日任务，一个是我的-&gt;背单词天数）</p>\r\n<p>（如果有需要，我可以说下签到后台是怎么做的，nodejs）</p>\r\n<p>--好了--</p>\r\n<p>就这样了，晚安</p></div><br> </td>", "pub_time": "2020-2-26 00:43", "author": "Rolan"}
{"title": "写了一个小程序——无聊也是一种生产力 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>​无聊也是一种生产力，最近不止无聊，还心烦，这种情况我只会做三种事情会比较开心，和某人出去玩、打游戏或者是写代码，前两种由于现实情况没办法实现，我就只能采用第三种方法了，并且这种时候写代码总可以写点自己想做的东西。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>，很久之前写了一个非常简单的，当时就觉得微信小程序原生的语法真是的太复杂限制太多还不好用，尤其像我这种人，做出来的东西真的是丑的要死。这一次当然不会从头来了，果断 GitHub 找一找，不出所料，找到了我想做的东西的模板，甚至更应该说找到了还算不错的项目，Gitter，这是一个号称最漂亮的 GitHub 微信小程序，我表示同意，但是用着用着，发现其实有一点问题，无法满足我的需求：</p><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">他的项目中 README 显示直接宕机了，不能显示 README 了，这个影响有点大，后来我看代码，猜测的原因是他把 markdown 的解析放到了服务器上，服务器挂掉了或者什么其他原因吧。</p></li><li style=\"line-height: 1.7em;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">打开小程序显示的就是 GitHub Trending，这个功能不错，但是在 Trending 中找到感兴趣的项目效率其实还是有点低的，很多时候我进去是看最近最火的现象级的项目是什么，比如 996.ICU，wuhan2020 这种，这个需求没有得到很好的满足。</p></li><li style=\"line-height: 1.7em;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">用这个小程序提 issue 的时候会自动加上一个小尾巴，内容是 Gitter 小程序的二维码，这个功能可以让使用者帮忙推广 小程序，没问题也是不错的方法，但是如果在一个 issue 下反复评论多次出现， 就会有一点重复的感觉。</p></li></ol><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>总的来说，这个小程序是一个很优秀的小程序，作为学习者的我，我要向其看起，针对不能满足需求的部分，那我就自己改写吧，License 是 Apache License 2.0，改写没问题。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里不想写具体的实现代码，如果有兴趣请 <a target=\"_blank\" href=\"https://github.com/renyuzhuo/GitHub-Top\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">点击查看</a> 改写后的项目，这里给出两张最后的截屏效果图吧：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/27/093526d9wy5vlguhjfghgg.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/27/093526d9wy5vlguhjfghgg.jpg\"></a></p></figure><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/27/093526u16goegg916h1pee.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/27/093526u16goegg916h1pee.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>打开小程序，你第一眼看到的可能就是最近最应该知道的一个小程序（选择依据是积极、健康、热点、具有一定进步性，人工审核），本小程序可以查看自己所 Follow 人的活动，如果感兴趣也可以很方便的 star 或 fork，也可以查找 GitHub 所有的项目或用户（Gitter 中本来是有这个支持计划的，但是不知道为什么去掉了，我在近一周的平时使用多次用到了这个功能，还是很实用的），还可以分享给朋友，也支持 在公众号中插入直接跳转到某一个项目，在本篇中前后就有两个例子 ，非常欢迎大家使用，对于小尾巴，我的做法是可选而不是强制，为我宣传，我很感激，但是仅仅作为工具不强迫你。对于 README显示前三千个字符，基本应该可以了解这个项目是用来做什么的了，如果想查看全文可以到 Code 中查看，也是格式化好的，但是这样做就可以放在本地，并且有很好的效率，网络下载成功后几乎不用等待，我认为这样是一个比较好的用户体验。其他的界面我也都做了很多的相应优化，一些小细节，希望可以让你使用起来觉得还不错吧。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>开始这个项目时，由于我对小程序的写法，尤其是 Taro（本项目使用的一个框架）是从完全没听过的状态开始这个项目的，因此参考拷贝了大量的 Gitter 中代码，本项目是对 Gitter 项目的拙劣模仿。特此感谢！Gitter 项目可点击查看： <a target=\"_blank\" href=\"https://github.com/huangjianke/Gitter\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">Gitter</a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>后记：</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>每次闲下来无聊我都会围绕 GitHub 学东西，这一次自我感觉是写关于 GitHub 最成功的一次了，原因也是因为这次时间最长，无聊就是生产力呀！</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>武汉加油！中国加油！</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首发自公众号： <a target=\"_blank\" href=\"https://ai.renyuzhuo.cn/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">RAIS</a></p> </td>", "pub_time": "2020-2-27 00:34", "author": "Rolan"}
{"title": "玩转微信小程序的位置授权 ", "content": "<td id=\"article_content\"> \n                     \n                    <h2 class=\"heading\" data-id=\"heading-0\">背景</h2>\r\n<p>日渐增多的<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>需求，必然会存在形色各异的授权问题。今天就来跟大家一起学习一下如何玩转小程序的<font color=\"red\">位置授权</font></p>\r\n<h2 class=\"heading\" data-id=\"heading-1\">位置授权问题分类</h2>\r\n<ul>\r\n<li>并非必须允许授权：在第一次用户决策完成后都允许用户继续操作（并非完全依赖位置信息）</li>\r\n<li>必须允许授权：只有授权才能使用（依赖位置信息的wx小程序）</li>\r\n</ul>\r\n<h2 class=\"heading\" data-id=\"heading-2\">分类剖析</h2>\r\n<h3 class=\"heading\" data-id=\"heading-3\">1.针对需求分类1的情况，在这里就不多说，直接调用<font color=\"red\">wx.getLocation</font>就可以</h3>\r\n<h3 class=\"heading\" data-id=\"heading-4\">2.只有授权才能继续使用的情况</h3>\r\n<p></p><figure><p><a href=\"data/attachment/portal/202002/27/093928myrxyimce4i44xj4.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/27/093928myrxyimce4i44xj4.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<ul>\r\n<li><font color=\"red\">App</font>:用于描述整体程序，需要对应用添加地理位置授权，代码如下<pre><code class=\"hljs javascript copyable\" lang=\"javascript\">App({\r\n    <span class=\"hljs-attr\">config</span>: {\r\n        <span class=\"hljs-string\">'permission'</span>: {\r\n          <span class=\"hljs-string\">'scope.userLocation'</span>: {\r\n            <span class=\"hljs-string\">'desc'</span>: <span class=\"hljs-string\">'请开启位置授权'</span> <span class=\"hljs-comment\">// 高速公路行驶持续后台定位</span>\r\n          }\r\n        },\r\n    }\r\n})\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre></li>\r\n<li><font color=\"red\">Page</font>: 处理位置信息的页面或者区域</li>\r\n<li><font color=\"red\">wx.getLocation</font>: 不多讲解，是小程序的api，使用方法以及实现效果如下<pre><code class=\"hljs javascript copyable\" lang=\"javascript\"> Page({\r\n     onLoad () {\r\n         wx.getLocation({\r\n             <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>) =&gt;</span> {}, <span class=\"hljs-comment\">// 成功的回调</span>\r\n             fail: <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> {} <span class=\"hljs-comment\">// 失败的回调</span>\r\n         })\r\n     }\r\n })\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre></li>\r\n</ul>\r\n<p></p><figure><p><a href=\"data/attachment/portal/202002/27/093928vrl2xen2p5tylpny.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/27/093928vrl2xen2p5tylpny.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<ul>\r\n<li>\r\n<p><font color=\"red\">$invoke('LocationAuthModal', showModal)</font>: 通过对<font color=\"red\">LocationAuthModal组件</font>中的方法直接调用，在页面中弹出提示弹窗，效果如下（<font color=\"red\">LocationAuthModal组件</font>是我们自定义的弹窗，并且在页面中引用）\r\n</p><figure><p><a href=\"data/attachment/portal/202002/27/093928zo8grdxk9jj7ddxk.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/27/093928zo8grdxk9jj7ddxk.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n</li>\r\n<li>\r\n<p><font color=\"red\">Button(open-type=”openSetting”  bindopensetting=callback)</font>: 小程序<font color=\"red\">基础库2.3.0版本</font>开始，用户发生点击行为后，才可以跳转打开setting页面，管理设置授权信息。在完成设置后，在<font color=\"red\">callback</font>中获取到<font color=\"red\">授权auth</font>进行处理：</p>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\">&lt;button  open-type=\"openSetting\" @opensetting=\"callback\"&gt;设置&lt;/button&gt;\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre></li>\r\n<li>\r\n<p><font color=\"red\">callback</font>: 设置完成后的回调函数</p>\r\n</li>\r\n<li>\r\n<p><font color=\"red\">setting</font>: 小程序的设置</p>\r\n</li>\r\n<li>\r\n<p><font color=\"red\">auth</font>: 设置完成后获取到的设置授权信息</p>\r\n</li>\r\n<li>\r\n<p><font color=\"red\">auth[“scope.userLocation”] = true</font>：开启了位置授权的设置，可以直接通过<font color=\"red\">wx.getLocation</font>拿到位置信息</p>\r\n</li>\r\n<li>\r\n<p><font color=\"red\">else</font>: 仍未开启位置授权，那么根据我们的需求是不能继续让用户使用的，所以会继续执行<font color=\"red\">$invoke('LocationAuthModal', showModal)</font>，强制提醒用户开启位置授权</p>\r\n</li>\r\n<li>\r\n<p><font color=\"red\">suceeCallback</font>: 成功获取位置后的回调函数，用来处理获取到微信知悉后的操作</p>\r\n</li>\r\n</ul>\r\n<h2 class=\"heading\" data-id=\"heading-5\">说明</h2>\r\n<ul>\r\n<li>文档中的部分代码采用微信小程序框架--wepy</li>\r\n<li>开发过程中使用小程序基础库版本为v2.10.1</li></ul> </td>", "pub_time": "2020-2-27 00:52", "author": "Rolan"}
{"title": "控制音频文件播放进度 ", "content": "<td id=\"article_content\"> \n                     \n                    <section powered-by=\"xiumi.us\" style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; text-align: justify; letter-spacing: 1px; background-color: rgb(255, 255, 255); word-wrap: break-word !important; overflow-wrap: break-word !important;'><section style=\"margin: 10px 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; text-align: center; overflow-wrap: break-word !important;\"><section style=\"margin: 0px; padding: 0px 6px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: middle; overflow-wrap: break-word !important;\"><section style=\"margin: 0px; padding: 0px 10px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; border-bottom: 2px solid rgb(95, 156, 239); transform: rotate(0deg); overflow-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 122, 170); font-size: 14px;\">问题描述</span></p></section></section></section></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">在微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>中经常会用到控制文件播放的滑块，通过滑块可控制音频播放进度，下面即用代码实现。</span></p><section powered-by=\"xiumi.us\" style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; text-align: justify; letter-spacing: 1px; background-color: rgb(255, 255, 255); word-wrap: break-word !important; overflow-wrap: break-word !important;'><section style=\"margin: 10px 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; text-align: center; overflow-wrap: break-word !important;\"><section style=\"margin: 0px; padding: 0px 6px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: middle; overflow-wrap: break-word !important;\"><section style=\"margin: 0px; padding: 0px 10px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; border-bottom: 2px solid rgb(95, 156, 239); transform: rotate(0deg); overflow-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 122, 170); font-size: 14px;\">解决方案</span></p></section></section></section></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">首先用.wxml与<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>.wmss</span>代码实现进度条的效果，再通过<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>.js</span>文件控制进度条的进度和进度条的时间显示。</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">.wxml中(播放进度结构的代码)：</span></p><table cellspacing=\"0\" style='margin: 0px 0px 10px; padding: 0px; border-collapse: collapse; width: 677px; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><tbody style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><tr style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><td width=\"568\" valign=\"top\" style=\"margin: 0px; padding: 0px 7px; word-wrap: break-word !important; word-break: break-all; border: 1px solid windowtext; max-width: 100%; box-sizing: border-box !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">&lt;view class=\"content-play-progress\"&gt;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">  &lt;text&gt;{{play.currentTime}}&lt;/text&gt;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">    &lt;view&gt;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">      &lt;slider activeColor=\"#d33a31\" block-size=\"12\" backgroundColor=\"#dadada\" value=\"{{play.percent}}\"/&gt;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">    &lt;/view&gt;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">  &lt;text&gt;{{play.duration}}&lt;/text&gt;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">&lt;/view&gt;</span></p></td></tr></tbody></table><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">在上述代码中，第五行用到了slider组件，其值为播放进度<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>play.percent。</span></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">.wxss中(播放进度样式的代码)<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>:</span></span></p><table cellspacing=\"0\" style='margin: 0px 0px 10px; padding: 0px; border-collapse: collapse; width: 677px; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><tbody style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><tr style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><td width=\"568\" valign=\"top\" style=\"margin: 0px; padding: 0px 7px; word-wrap: break-word !important; word-break: break-all; border: 1px solid windowtext; max-width: 100%; box-sizing: border-box !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">.content-play-progress{</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">  display: flex;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">  align-items: center;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">  margin: 0 35rpx;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">  font-size: 9pt;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">  text-align: center;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">}</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">.content-play-progress&gt;view{</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">  flex: 1;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">}</span></p></td></tr></tbody></table><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">保存上述代码后，运行程序，效果如图：</span></p><p style=\"text-align: center;\"><a href=\"data/attachment/portal/202002/28/110256n6qb5rxq80mgq08d.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/28/110256n6qb5rxq80mgq08d.jpg\"></a></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">图</span> </span>1<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\"> <span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">微信小程序进度条的实现</span></span></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">.js中(控制进度条的进度和时间的代码)<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>:</span></span></p><table cellspacing=\"0\" style='margin: 0px 0px 10px; padding: 0px; border-collapse: collapse; width: 677px; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><tbody style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><tr style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><td width=\"568\" valign=\"top\" style=\"margin: 0px; padding: 0px 7px; word-wrap: break-word !important; word-break: break-all; border: 1px solid windowtext; max-width: 100%; box-sizing: border-box !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">onReady: function(){</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">  this.audioCtx=wx.createInnerAudioContext()</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">  var that=this</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">//播放失败检测</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">this. audioCtx.onError(function(){</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">    console.log(</span>‘<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">播放失败：</span>’<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">+that.audioCtx.src)</span></span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">})</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">//播放完成自动换下一曲</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">this. audioCtx.OnEnded(function(){</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">  that.next()</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">})</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">//自动更新播放进度</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">this. audioCtx.onPlay(function(){</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">this. audioCtx.onTimeUpdate(function(){</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">  that.setData({</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">‘<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">play.duration</span>’<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">: formatTime(that.audioCtx.duration),</span></span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">‘<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">play.currrentTime</span>’<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">: formatTime(that.audioCtx. currrentTime),</span></span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\">‘<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">play.percent</span>’<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">: that.audioCtx. currrentTime /</span></span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">            that.audioCtx.duration*100</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">})</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">})</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">//默认选择第一曲</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\"> </span>T<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">his.setMusic(0)</span></span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">  //格式化时间</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">function formatTime(time){</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">   var minute=Math.floor(time/60)%60;</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">var second=Math.floor(time)%60</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">return (minute&lt;10?</span>’<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">0</span>’<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">+minute:minute)+</span>’<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">:</span>’<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">+</span></span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">     (second&lt;10?</span>’<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">0</span>’<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">+second:second)</span></span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">}</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">})</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">}</span></p></td></tr></tbody></table><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important; text-align: justify;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">上述代码中，通过调用audioCtx的<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>onTimeUpdate()</span>的方法，获取音视频状态信息，并通过<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>formatTime()</span>函数处理时间格式，最后渲染到页面实现实时更新效果，效果如图：</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important; text-align: justify;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\"><br></span></p><p style=\"text-align: center;\"><a href=\"data/attachment/portal/202002/28/110355tt6b9tkp97zp64cp.png\" target=\"_blank\"><img src=\"data/attachment/portal/202002/28/110355tt6b9tkp97zp64cp.png\"></a></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">图</span> </span>2<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\"> <span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">微信小程序进度条的滑动</span></span></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">在slider组件上绑定<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>bindchange</span>事件，可以实现滑动进度条调节音视频文件播放进度，代码示例<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>:</span></span></p><table cellspacing=\"0\" style='margin: 0px 0px 10px; padding: 0px; border-collapse: collapse; width: 677px; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><tbody style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><tr style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><td width=\"568\" valign=\"top\" style=\"margin: 0px; padding: 0px 7px; word-wrap: break-word !important; word-break: break-all; border: 1px solid windowtext; max-width: 100%; box-sizing: border-box !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">&lt;slider bindchange=</span>”<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">sliderChange</span>”<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\"> activeColor=</span>”<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">#d33a31</span>”<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\"> block-size=</span>”<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">12</span>”<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\"> backgroundColor=</span>”<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">#dadada</span>”<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\"> value=</span>”<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">{{play.percent}}</span>”<span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体;\">/ &gt;</span></span></p></td></tr></tbody></table><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">在.js文件中编写<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>sliderChange</span>函数获取用户当前选择的进度，将时间通过<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>audioCtx</span>对象的<span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: \"Times New Roman\";'>seek()</span>方法进行设置，代码示例：</span></p><table cellspacing=\"0\" style='margin: 0px 0px 10px; padding: 0px; border-collapse: collapse; width: 677px; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><tbody style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><tr style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><td width=\"568\" valign=\"top\" style=\"margin: 0px; padding: 0px 7px; word-wrap: break-word !important; word-break: break-all; border: 1px solid windowtext; max-width: 100%; box-sizing: border-box !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">sliderChange: function(e){</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">  var second=e.detail.value* that.audioCtx.duration/100</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">that.audioCtx.seek(secend)</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; clear: both; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-family: 宋体; font-size: 14px;\">},</span></p></td></tr></tbody></table> </td>", "pub_time": "2020-2-28 00:02", "author": "Rolan"}
{"title": "这次一定彻底弄懂DOM事件机制 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>本文首发自 <a href=\"https://blog.lessing.online/\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">JohnieXu's Blog</a> ，转载请注明出处:grin:</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>前言</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在网页端、移动端H5、<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>等各个终端环境的前端开发中随处可见事件的运用，可见事件机制的是前端这一块的重中之重。经过我研读了大量博客文章以及开源框架源码后，这次算是对DOM事件机制有了更新更全面的的认识。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下文主要通过一个例子带你 <strong style=\"text-indent: 0px;\">分析DOM事件的传递、事件处理</strong> ，然后在此基础上再 <strong style=\"text-indent: 0px;\">深入总结对事件监听的优化方案</strong> ，最终总结下DOM事件机制 <strong style=\"text-indent: 0px;\">在开源框架中的实战应用</strong> 。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>一、从实例看事件传递</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以下面这个普通的html文件为例</p><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">&lt;!DOCTYPE html&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"en\"</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"handleClickHtml()\"</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">head</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"UTF-8\"</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">title</span>&gt;</span>Document<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">title</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">head</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">body</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"handleBodyClick()\"</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"div1\"</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"handleClick2()\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"button1\"</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"handleClick1()\"</span>&gt;</span>handleClick1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">script</span>&gt;</span><span class=\"javascript\">\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handleClick1</span>(<span class=\"hljs-params\">e</span>) </span>{\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'click1'</span>)\r\n    }\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handleClick2</span>(<span class=\"hljs-params\">e</span>) </span>{\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'click2'</span>)\r\n    }\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handleBodyClick</span>(<span class=\"hljs-params\">e</span>) </span>{\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'body clicked'</span>)\r\n    }\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handleClickHtml</span>(<span class=\"hljs-params\">e</span>) </span>{\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'html clicked'</span>)\r\n    }\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">document</span>.addEventListener(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'click'</span>, e =&gt; {\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'document clicked'</span>)\r\n    })\r\n  </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">script</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">body</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">html</span>&gt;</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>例子中给 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>document、html、body、div、button</code> 都添加了点击事件，其执行结果如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p style=\"text-align: center;\"><a href=\"data/attachment/portal/202002/28/110832x0lfr2020266zz5u.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/28/110832x0lfr2020266zz5u.jpg\"></a></p><figcaption style=\"margin: auto; text-align: center;\">执行结果</figcaption></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>事件传递</h2><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>事件产生后，从window对象自上而下向目标节点传递，抵达目标节点后会沿着相反方向传递</h4><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p style=\"text-align: center;\"><a href=\"data/attachment/portal/202002/28/110833lc1c3cxgynny1385.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/28/110833lc1c3cxgynny1385.jpg\"></a></p><figcaption style=\"margin: auto; text-align: center;\">DOM事件传递</figcaption></figure><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>事件传递路径如何确定？</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由鼠标、键盘、触摸屏、窗口缩放、图片加载、节点焦点变化等触发事件，每个触发的事件都有一个target——事件目标，根据target往html根节点遍历就可以确定节点嵌套层级关系，从而确定此事件的传递路径。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>事件传递路径由浏览器、webview来确定</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>事件传递为何要来回走两遍？</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一个事件来回走两遍是便于事件响应时机的控制（下文的事件冒泡与事件捕获的应用中有体现），同时也存在事件冒泡的浏览器历史原因（与IE、Netscape有关，不赘述）。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>事件响应</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>事件在从自上而下的传递过程中会 <strong style=\"text-indent: 0px;\">判断当前node节点是否绑定对应事件的监听器</strong> ，若有则执行响应监听器的事件处理程序（也就是绑定的事件要执行的逻辑），这里的执行就是所谓的事件响应。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>事件的响应过于与事件的类型是捕获事件、冒泡事件有关，同时是否组件冒泡还会影响该事件的后续传递过程，具体执行流程总结成如下图所示：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p style=\"text-align: center;\"><a href=\"data/attachment/portal/202002/28/110833iqw7rzjogrwjgr7g.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/28/110833iqw7rzjogrwjgr7g.jpg\"></a></p><figcaption style=\"margin: auto; text-align: center;\">事件响应逻辑</figcaption></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>事件捕获与冒泡</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>根据事件传递中的两种传递路径分别分为： <strong style=\"text-indent: 0px;\">由上至下——事件捕获阶段，由下至上——事件冒泡阶段</strong> ，指的是一个事件由window（上图并未标出window）到target之间的传递的过程。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以通过组织事件冒泡让事件不再继续完成由下至上的过程，这会让target的父节点绑定冒泡阶段的事件监听器不响应事件。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以通过指定事件在捕获阶段执行。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>:chestnut:冒泡的应用</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>看下面这个例子，可以通过 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>stopPropagation</code> 来阻止事件继续往上冒泡， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>window、document、html</code> 上添加的点击事件均不会生效</p><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 省略了部分代码 --&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"div1\"</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"button1\"</span>&gt;</span>button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">script</span>&gt;</span><span class=\"javascript\">\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> div1 = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">document</span>.getElementById(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'div1'</span>)\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> button1 = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">document</span>.getElementById(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'button1'</span>)\r\n  div1.addEventListener(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'click'</span>, (e) =&gt; {\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(e.currentTarget)\r\n  }, <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>)\r\n  button1.addEventListener(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'click'</span>, (e) =&gt; {\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(e.currentTarget)\r\n    e.stopPropagation() <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 关键代码：组织了click事件继续往上冒泡</span>\r\n  }, <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>)\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'><span style=\"line-height: 26px; font-style: italic;\">// 以下是监听html、document的点击事件</span> <span style=\"line-height: 26px;\"><span style=\"line-height: 26px;\">function</span> <span style=\"line-height: 26px;\">handleClickHtml</span>(<span style=\"line-height: 26px;\">e</span>) </span>{ <span style=\"line-height: 26px;\">console</span>.log(<span style=\"line-height: 26px;\">'html clicked'</span>) } <span style=\"line-height: 26px;\">document</span>.addEventListener(<span style=\"line-height: 26px;\">'click'</span>, e =&gt; { <span style=\"line-height: 26px;\">console</span>.log(<span style=\"line-height: 26px;\">'document clicked'</span>) }) <span style=\"font-weight: normal; line-height: 26px;\">&lt;/<span style=\"line-height: 26px;\">script</span>&gt;</span> 复制代码</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>点击button的打印结果如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p style=\"text-align: center;\"><a href=\"data/attachment/portal/202002/28/110833lde557ddxce0t6uo.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/28/110833lde557ddxce0t6uo.jpg\"></a></p><figcaption style=\"margin: auto; text-align: center;\">执行结果</figcaption></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>addEventListener需要用attachEvent进行兼容性处理，第三个参数默认值为false表示在事件冒泡阶段响应事件</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>:chestnut:捕获的应用</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>还是上面这个例子，只更改div1部分的事件监听，的第三个参数为true来开启事件捕获</p><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 省略了部分代码 --&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"div1\"</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"button1\"</span>&gt;</span>button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">script</span>&gt;</span><span class=\"javascript\">\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> div1 = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">document</span>.getElementById(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'div1'</span>)\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> button1 = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">document</span>.getElementById(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'button1'</span>)\r\n  div1.addEventListener(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'click'</span>, (e) =&gt; {\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(e.currentTarget)\r\n  }, <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// true：表示div1在事件的捕获阶段响应事件</span>\r\n  button1.addEventListener(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'click'</span>, (e) =&gt; {\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(e.currentTarget)\r\n    e.stopPropagation() <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 组织事件冒泡</span>\r\n  }, <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>)\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'><span style=\"line-height: 26px; font-style: italic;\">// 以下是监听html、document的点击事件</span> <span style=\"line-height: 26px;\"><span style=\"line-height: 26px;\">function</span> <span style=\"line-height: 26px;\">handleClickHtml</span>(<span style=\"line-height: 26px;\">e</span>) </span>{ <span style=\"line-height: 26px;\">console</span>.log(<span style=\"line-height: 26px;\">'html clicked'</span>) } <span style=\"line-height: 26px;\">document</span>.addEventListener(<span style=\"line-height: 26px;\">'click'</span>, e =&gt; { <span style=\"line-height: 26px;\">console</span>.log(<span style=\"line-height: 26px;\">'document clicked'</span>) }) <span style=\"font-weight: normal; line-height: 26px;\">&lt;/<span style=\"line-height: 26px;\">script</span>&gt;</span> 复制代码</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>点击button的打印结果如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p style=\"text-align: center;\"><a href=\"data/attachment/portal/202002/28/110833xndj0z0drlc0d9lz.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/28/110833xndj0z0drlc0d9lz.jpg\"></a></p><figcaption style=\"margin: auto; text-align: center;\">执行结果</figcaption></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>依次执行了div1和button1绑定的点击事件，注意这里两者的 <strong style=\"text-indent: 0px;\">执行顺序</strong> 很关键。事件在捕获阶段遇到div1节点时执行打印，然后在button处（处于目标阶段）执行打印，然后事件被阻止冒泡不再往上传递。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>二、事件性能优化</h2><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>大批量事件监听性能问题</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>考虑以下场景：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>有个一个长消息列表实时接受新的消息，滚动到底部时加载更多消息，点击消息可进入回话窗口页面，消息左滑消息此条消息</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>问题：</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>如何给此消息列表添加左滑事件？</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>抽象来看这个问题就是如何高效的给大批量（甚至是无限量）节点添加事件，这里暂时不考虑vue、react等框架</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>性能问题原因</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>每注册一个事件监听监听都需要使用一定内存，同时在dom节点多了之后事件经过的捕获、冒泡阶段要处理事件传递也就慢了</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>事件委托</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>父节点嵌套的子节点的触发的事件会通过事件冒泡到达父节点，事件处理程序不直接绑定到子节点，统一由公共父节点进行事件监听。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>e.target表示触发事件的元素，通过e.target可以判断具体响应那个元素的事件 e.currentTarget表示事件绑定的元素，在事件委托情况下指向同一个元素</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p style=\"text-align: center;\"><a href=\"data/attachment/portal/202002/28/110833w6fyujqw2auffydt.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/28/110833w6fyujqw2auffydt.jpg\"></a></p><figcaption style=\"margin: auto; text-align: center;\">事件委托</figcaption></figure><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>采用事件委托改造本文例子</h3><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 省略了部分代码 --&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"div1\"</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"button1\"</span>&gt;</span>button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">script</span>&gt;</span><span class=\"javascript\">\r\n  <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">document</span>.addEventListener(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'click'</span>, e =&gt; {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// e.target：触发事件的元素</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// e.currentTarget：事件监听器绑定的元素</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// console.log(e.target, e.currentTarget)</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (e.target.id === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'button1'</span>) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'button1 clicked'</span>)\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (e.target.id === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'div1'</span>) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'div1 clicked'</span>)\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (e.target.tagName === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'HTML'</span>) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'html clicked'</span>)\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (e.target.tagName === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'BODY'</span>) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> cosnole.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'body clicked'</span>)\r\n    }\r\n  })\r\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">script</span>&gt;</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>依次点击 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>html、div1、button1</code> 会依次打印结果：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p style=\"text-align: center;\"><a href=\"data/attachment/portal/202002/28/110833p55551199o55lbla.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/28/110833p55551199o55lbla.jpg\"></a></p><figcaption style=\"margin: auto; text-align: center;\">执行结果</figcaption></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>虚拟滚动</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>上面事件委托可以解决大批量节点事件监听的性能问题，但是DOM节点量过大导致界面滚动不流畅的问题没解决。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>虚拟滚动是指在列表滚动事件中动态计算出当前窗口中能够显示的列表节点，其前后窗口不显示的节点各用一个div进行占位处理，并调整占位div的样式确模拟的列表样式与原始列表无异处。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>虚拟滚动已经是一个完美解决长列表渲染性能的方案，针对react、vue均有对应库实现，此处不再赘述</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>React事件代理</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>事件委托也叫事件代理，在react中的合成事件则是完全采用了事件代理</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>基于react16的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ant-design-pro</code> 项目的事件绑定截图如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p style=\"text-align: center;\"><a href=\"data/attachment/portal/202002/28/110834zlnkah16lnqs1l61.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/28/110834zlnkah16lnqs1l61.jpg\"></a></p><figcaption style=\"margin: auto; text-align: center;\">React事件代理</figcaption></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>直接通过onClick绑定的事件通过react处理最终会统一绑定到document上，正是使用的事件委托。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>三、实战中的应用</h2><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序中阻止事件冒泡阻止弹窗滚动穿透</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最新版微信小程序中绑定事件有两种类型： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>bind:methodName、catch:methodName、mut-bind:methodName、mut-catch:methodName</code> ，其中区别最大的是前两者。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>methodName表示移动端事件名，例如：tap、touchmove等</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>bind:methodName</code> <strong style=\"text-indent: 0px;\">采用冒泡绑定事件，</strong> <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>catch:methodName</code> **采用冒泡绑定事件并阻止冒泡</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>vant-weapp中防止滚动穿透</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实现思路： 弹框采用一层遮罩层overlay遮盖，遮罩层宽高设为窗口宽高同大小，采用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>catch:touchmove</code> 绑定该层的touchmove事件为空函数防止其冒泡 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>给overlay组件外层绑定touchmove为空函数并阻止冒泡：</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\">// overlay/index.wxml\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-transition</span>\r\n  <span class=\"hljs-attr\">show</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ show }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">custom-class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-overlay\"</span>\r\n  <span class=\"hljs-attr\">custom-style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"z-index: </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ zIndex }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}; </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ customStyle }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">duration</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ duration }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">bind:tap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onClick\"</span>\r\n  <span class=\"hljs-attr\">catch:touchmove</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"noop\"</span>\r\n  /*\r\n   * 通过<span class=\"hljs-attr\">catch:touchmove</span>来阻止冒泡至<span class=\"hljs-attr\">overlay</span>层的事件继续往上冒泡，\r\n   * 实现内层嵌套的内容可以响应<span class=\"hljs-attr\">touchmove</span>事件而外层（页面）滚动事件不响应），\r\n   * 以此来解决滚动事件穿透\r\n  */\r\n&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">slot</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">slot</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-transition</span>&gt;</span>\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>overlay组件外层fixed定位固定宽高防止滚动：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// overlay/index.less</span>\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-overlay</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: fixed;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n  <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.theme</span>(background-color, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'@overlay-background-color'</span>);\r\n}\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>移动端H5框架中事件冒泡阻止弹窗滚动穿透</h2><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>vant中防止滚动穿透</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实现思路：与vant-weapp小程序框架中相似， 弹框采用一层遮罩层overlay遮盖，遮罩层宽高设为窗口宽高同大小，采用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>@touchmove</code> 绑定该层的touchmove事件，在事件中用event.stopPropagation阻止事件冒泡 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>给overlay组件外层绑定touchmove事件阻止冒泡：</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\">return (\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transition</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-fade\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span>\r\n      <span class=\"hljs-attr\">vShow</span>=</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{props.show}</span><span class=\"xml\">\r\n      <span class=\"hljs-attr\">style</span>=</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{style}</span><span class=\"xml\">\r\n      <span class=\"hljs-attr\">class</span>=</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{[bem(), props.className]}</span><span class=\"xml\">\r\n      <span class=\"hljs-attr\">onTouchmove</span>=</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{preventTouchMove}</span><span class=\"xml\">\r\n      </span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{...inherit(ctx, true)}</span><span class=\"xml\"><span class=\"hljs-tag\">\r\n    /&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transition</span>&gt;</span>\r\n);\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>const preventTouchMove(e: Event): void = () =&amp;gt; { event.stopPropagation(); } &lt;span&gt;复制代码&lt;/span&gt;</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>overlay组件外层fixed定位固定宽高防止滚动：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-overlay</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: fixed;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n  <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.theme</span>(background-color, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'@overlay-background-color'</span>);\r\n}\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>参考文章</h2><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Events\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">MDN-事件参考</a></p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><a href=\"https://blog.csdn.net/howgod/article/details/97615209\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">浪里行舟-DOM事件机制</a></p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><a href=\"https://blog.csdn.net/huangpin815/article/details/69787924\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">CSDN-事件冒泡（IE事件流），事件捕获和DOM事件流</a></p></li></ul><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>写在最后</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>既然看到这里不妨点个赞鼓励下作者呗 :)</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>作者博客： <a href=\"https://blog.lessing.online/\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">blog.lessing.online/</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>作者github： <a href=\"https://github.com/johniexu\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">github.com/johniexu</a></p> </td>", "pub_time": "2020-2-28 00:32", "author": "Rolan"}
{"title": "微信小程序的自动化测试框架 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信发布了<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的自动化测试框架Minium，提供了多种运行验证方式，其特点：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">支持一套脚本，iOS &amp; Android &amp; 模拟器，三端运行</li><li style=\"line-height: 1.7em; list-style-type: disc;\">提供丰富的页面跳转方式，看不到也能去得到</li><li style=\"line-height: 1.7em; list-style-type: disc;\">可以获取和设置小程序页面数据，让测试不止点点点</li><li style=\"line-height: 1.7em; list-style-type: disc;\">可以直接触发小程序元素绑定事件</li><li style=\"line-height: 1.7em; list-style-type: disc;\">支持往 AppSerive 注入代码片段</li><li style=\"line-height: 1.7em; list-style-type: disc;\">可以调用部分 wx 对象上的接口</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>官方地址如下： <a href=\"https://git.weixin.qq.com/minitest/minium-doc/tree/master\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://git.weixin.qq.com/min...</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>minium 是为小程序专门开发的自动化框架, 提供了 Python 和 JavaScript 版本。使用 minium 可以进行小程序 UI 自动化测试, 但是 minium 的功能不止于仅仅是 UI 自动化, 甚至可以使用 minium 来进行函数的 mock, 可以直接跳转到小程序某个页面并设置页面数据, 做针对性的全面测试, 这些都得益于我们开放了部分小程序 API 的能力。除此之外，小程序有部分组件使用了系统原生的组件，对于这部分的组件，我们也基于 uiautomator 和 wda 做了补充。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>环境依赖</h2><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">Python 3.x</li><li style=\"line-height: 1.7em; list-style-type: disc;\">微信公共库版本 &gt;= 2.7.3</li><li style=\"line-height: 1.7em; list-style-type: disc;\">下载并安装稳定版微信开发者工具，工具下载地址： <a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://developers.weixin.qq....</a></li><li style=\"line-height: 1.7em; list-style-type: disc;\">如果要测Android，请下载微信测试包，下载地址： <a href=\"http://dldir1.qq.com/weixin/android/wechat_0x2700069A_1460.apk\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">http://dldir1.qq.com/weixin/a...</a></li></ul><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>文档使用</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>Minium的文档是采用Nodejs编写的，因此想看文档还需要安装NodeJs的环境，如果你不知道怎么安装请自行查找。文档的安装：</p><pre class=\"hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">npm</span> i docsify-cli -g</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后checkout文档项目：</p><pre class=\"hljs awk\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>git clone https:<span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//gi</span>t.weixin.qq.com<span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">/minitest/mi</span>nium-doc</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>安装依赖：</p><pre class=\"hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">cd</span> minium-doc\r\nnpm install</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>本地部署：</p><pre class=\"hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">docsify</span> serve .</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后通过浏览器访问 <a href=\"http://localhost/\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">http://localhost</a> :3000 即可以查看了。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>框架依赖运行环境部署</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先你要先下载框架压缩包： <a href=\"https://git.weixin.qq.com/minitest/minium-doc/raw/master/minium/Python/dist/minium-0.0.2.zip\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://git.weixin.qq.com/min...</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>接下来，你要打开微信开发者工具的安全模式</p><p><a href=\"data/attachment/portal/202002/05/093947au44zqe8r0ju5ee8.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093947au44zqe8r0ju5ee8.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后安装Minium:</p><pre class=\"hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">pip3</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">install</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">minium-0</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.0</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.2</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.zip</span></pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先你要通过命令行启动开发者工具提供了命令行</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>命令行</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过命令行调用安装完成的工具可执行文件，完成登录、预览、上传、自动化测试等操作。调用返回码为 0 时代表正常，为 -1 时错误。</p><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">命令行工具所在位置：</p><pre class=\"prettyprint hljs http\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">macOS</span>: &lt;安装路径&gt;/Contents/MacOS/cli\r\n\r\n<span class=\"http\">   <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Windows</span>: &lt;安装路径&gt;/cli.bat</span></pre><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">命令行启动工具</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">-o</span>, <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">--open</span> <span class=\"hljs-selector-attr\" style=\"color: rgb(188, 96, 96);\">[projectpath]</span>: 打开工具，如果不带 <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">projectpath</span>，只是打开工具。如果带 <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">project</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">path</span>，则打开路径中的项目，每次执行都会自动编译刷新，并且自动打开模拟器和调试器。<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">projectpath</span> 不能是相对路径。项目路径中必须含正确格式的 <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">project</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.config</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.json</span> 且其中有 <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">appid</span> 和 <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">projectname</span> 字段。</pre><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">示例：</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\"># 打开工具</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">cli -o</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\"># 打开路径 /Users/username/demo 下的项目</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">cli -o /Users/username/demo</p></div><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>输入如下命令：</p><pre class=\"prettyprint hljs vbnet\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>path/<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">to</span>/cli --<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">auto</span> /miniprogram/project/path --<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">auto</span>-port <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">9420</span>\r\n\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\"># path/to/cli 是命令行工具所在位置：</span>\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\"># macOS: &lt;安装路径&gt;/Contents/MacOS/cli</span>\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\"># Windows: &lt;安装路径&gt;/cli.bat windows版本在安装之后默认会把cli加入到系统路径，可以先测试cli命令是否可用，如果可用，path/to/cli可以直接用cli替换</span>\r\n\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\"># /miniprogram/project/path 是小程序工程的路径( Windows下面用 \\\\ 代替 \\ )</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>特别说明：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">1、这里的--auto-port请填写 9420，不是开发者工具安全模式的端口</li><li style=\"line-height: 1.7em; list-style-type: disc;\">2、请确保开发者工具登陆的微信号具备被测小程序的开发者权限</li><li style=\"line-height: 1.7em; list-style-type: disc;\">3、如果没有Open project with automation enabled success的输出，否则请检查IDE版本（开发者工具调试基础库版本 &gt;= 2.7.3），或者检查命令行参数</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>关注我，关注测试</p> </td>", "pub_time": "2020-2-5 00:52", "author": "Rolan"}
{"title": "小程序如何写动态标签 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>web开发中，尤其使用react开发项目时，我们可以很方便的动态定义标签(jsx)</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>const props = {\r\n  id: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>,\r\n  className: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>,\r\n  data-a: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>\r\n}\r\n&lt;button {...props} /&gt;\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>动态配置标签的好处一是所有逻辑在JS端控制，二是使得我们的模板非常规范，方便后续维护更新，碎片模板可以很好的控制，三是我们可以根据使用场景很方便的配置props的属性，这样在html结构输出的时候能够得到比较干净的结构</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的开发中，却不能实现类似的功能，导致我们的动态标签通常非常的冗余，多余的属性全部展示在结构生成后</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以button为例，我们知道button在小程序中有非常多的属性</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/06/111709xuy78j8eslz7y07s.png\" target=\"_blank\"><img src=\"data/attachment/portal/202002/06/111709xuy78j8eslz7y07s.png\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如上所示，这里只是列举了一部分的属性</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>动态模板</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们的button动态模板写下来应该是这样的</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>配置</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Page</span>({\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">option</span>: {\r\n      ...\r\n    }\r\n  }\r\n})\r\n复制代码</pre><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>\r\n  <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{option.size || '<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span>'}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{option.type || '<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span>'}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">plain</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{option.plain || false}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{option.value || '按钮'}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">...</span>\r\n  <span class=\"hljs-attr\">...</span>\r\n/&gt;</span>\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>调试工具的输出结构</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;button bindtap=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span> size=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span> type=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span> plain=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span> disabled=<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">open</span>-typ=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span> hover-<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>='' .... /&gt;</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以看到调试工具中输出的结构就会变得非常冗余，降低了开发效率，这种冗余的模板输出搞久了会吐的好吧。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以使用模板语法区分不同场景的button，我知道会有很多这样的声音，但那不是动态模板。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>解决问题</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>那要如何解决输出结构不冗余呢，说了这么多终于到了重点，其实真的只是一个很小的技巧，我的开发经历告诉我这是有效的，你也可以试试，将默认值统统换成 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>''</code> ，改版后的模板如下</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>\r\n  <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{option.size || ''}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{option.type || ''}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">plain</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{option.plain || ''}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{option.value || '按钮'}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n  <span class=\"hljs-attr\">...</span>\r\n  <span class=\"hljs-attr\">...</span>\r\n/&gt;</span>\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这时你得到的模板就是一段漂亮的结构</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;button <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">value</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'按钮'</span> /&gt;\r\n复制代码</pre> </td>", "pub_time": "2020-2-6 00:14", "author": "Rolan"}
{"title": "微信小程序开发系列教程第七章：编辑名片页面开发 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222226vuwl9uwgwf94u9l2.jpg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"><span style=\"text-indent: 2em;\">编辑名片有两条路径，分为新增名片流程与修改名片流程。</span></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">用户手填新增名片流程：</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222226ihu1g6ge8dyp6erf.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222227mnaktzhr32vh22ml.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222227gk7zirqmg4mtq5nd.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">首先跳转到我们的新增名片页面 1 需要传递用户的当前 userId，wx.navigateTo 带值跳转。Manual 为 true 设置用户走的是新增路线。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222227b5fvfmebyb9mef5f.png\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">新增名片页面 1 基本布局如下：</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222228d1orjncj4aazhxx0.png\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">取到 userId。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222228hffm0qspkp4pqe0k.png\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">使用微信自带的 input 组件验证也非常好用，如 maxLength 属性，可以限制用户输入长度，如我这的姓名长度是最大 5 位，直接数字 5 即可。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222228ki55ir05rrib6ijq.png\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">也可以自定义一些验证效果，具体可以根据需求进行一些验证配置，取到用户输入的值，进行操作。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222228c1abm2zq39axb2qm.png\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">这里绑定了自带的模态框提示组件。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222229gsr28zrulrtoe2rb.png\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">其中 modalHidden2 是模态框开关。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">另外 proptText 是需要提示的内容。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">即使很多输入框也支持数据动态改变，非常方便。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222229jx9kj9y87i0jcbc0.png\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">实际效果，非常快捷，比以前省去很多事情，编写<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>，发现最大的好处可能就是我们不必去考虑一系列兼容性问题。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222229gmmkgxzfgmrryr0g.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">最后还有个头像上传图片，测试了下目前上传到后台服务器还有点问题，应该是内测版本不太完善导致吧。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222229p8xgy88wm68n8awf.png\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">设置的直接是背景图片。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222230hclvazggcv7ycayg.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">提交表单与跳转。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">提交表单使用的是自带的 bindsubmit 事件组件，在 button 组件上添加 formType=”submit” 即可，还有点需注意的是使用表单提交功能时 input 需加上 name 属性，这个传递方式是以键值对的形式传递的。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222230zdkly9cqvrklrqlk.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">这时候跳转到编辑页 2 页面，这个页面是根据用户填写的手机号码识别到匹配的公司，页面非常简单，一个数据循环而已，单选框日后可能还需要美化一下。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222230m0sdy5xx5ze5og44.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">同样也是一些数据绑定以及验证效果。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222230o79w8rizoo5aar5w.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">实际渲染效果可以看到。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222231iqsfotjhbpjip0sq.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">这个和第一个编辑页面逻辑基本不相上下，一些基本验证与提交，这里就讲到前面两步骤即可，编辑页面3也是同理，这里不再过多啰嗦。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">修改名片流程效果图与需求，修改名片是一次性把以前填写的个人信息全部渲染出来，供用户来改动：</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222231vosl55855jel7b55.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">名片图片模块，上传图片暂时还有点问题，这里就是模仿了个跳转组件，比较建议需要跳转的页面还是使用 wx.navigateTo 控制好一点，wx.navigateTo 提供了给我们不同的 3 个跳转路由，封装的都很好，而且跳转页面很多牵连到传值之类的，可以达到统一管理也可以避免一些看不到的 bug 吧，总之还是根据业务需求来定：</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222231ccny6r35cbscccv7.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">姓名手机必填模块：</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222231rdxxwq909x39jzri.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">个人信息模块，直接循环（block）出来：</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222231pnqbgi1sn2bui6p3.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">Onload 时我们请求必填与选填数据：<br>* requiredGroup 必填中文信息<br>* notRequiredGroup 选题中文信息<br>* requiredGroupEn 必填英文信息<br>* notRequiredGroupEn 选题英文信息</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><blockquote style=\"padding: 0px; margin: 0px; quotes: none; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; font-size: 18px; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"><p style=\"margin: 26px 0px; padding: 0px; font-size: 14px; text-indent: 2em;\"></p><p style=\"margin: 26px 0px; padding: 0px; font-size: 14px; text-indent: 2em;\"></p><p style=\"margin: 26px 0px; padding: 0px; font-size: 14px; text-indent: 2em;\">```<br>//请求名片对应的公司的中文信息的属性组数据，分为必填和选填<br>//选题项变量以 no 开头<br>requester.getOfflineCardInfoGroupFields(userId, cardId,<br>function (res) {<br>//debugger<br>var userName = res.card.userName;<br>var mobile = res.card.mobile;<br>var requiredGroup = res.requiredGroupCh;<br>var notRequiredGroup = res.notRequiredGroupCh;<br>var requiredGroupEn = res.requiredGroupEn;<br>var notRequiredGroupEn = res.notRequiredGroupEn;<br>var reqLen = requiredGroup.fields.length;<br>var nreqLen = notRequiredGroup.fields.length;<br>var reqLenEn = requiredGroupEn.fields.length;<br>var nreqLenEn = notRequiredGroupEn.fields.length;<br>self.setData({<br>userName: userName,<br>mobile: mobile,<br>requireFields: requiredGroup.fields,<br>notRequireFields: notRequiredGroup.fields,<br>requireFieldsEn: requiredGroupEn.fields,<br>notRequireFieldsEn: notRequiredGroupEn.fields,<br>l1: reqLen,<br>l2: nreqLen + reqLen,<br>l3: reqLenEn + nreqLen + reqLen<br>});<br>self.forceUpdate();<br>}, function (code, msg) {<br>console.info(\"code=\" + code + \"&amp;msg=\" + msg);<br>});<br>```</p><p style=\"margin: 26px 0px; padding: 0px; font-size: 14px; text-indent: 2em;\"></p><p style=\"margin: 26px 0px; padding: 0px; font-size: 14px; text-indent: 2em;\"></p></blockquote><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">中英文信息必填与选填渲染：</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222232zz87hhvcbw8jhvvb.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">这里表单提交数据转换有点复杂（大家根据业务需求来做，不必花时间研究这里的方法），获取的是数组，按照后台需要的数据格式进行转换传递过去。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222232ztn89zenfe896e8f.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">今天再回去理下首页 A、B、C 定点跳转功能实现方法。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222232zi0bt8y310fify7w.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">首先是右边小索引布局以及数据绑定，数据绑定和名片夹列表上的字母一样，该字母下面有名片则渲染出来，没有则不需要渲染，id同样是当前字母与右边显示的内容一样：</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222232auvkk2yz62ug1881.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">数据 sort，和 group.name 数据一样：</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222233s1xipu6u1tp6udz1.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">这里是因为 # 不支持设为 id（就是 id=”#”），故而进行了一个转化。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222233plomvdzrz9r4rb4h.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">点击事件：获取到当前 ID，以及绑定数据 toView 为当前 ID。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222233w5y5w1848wyp85wu.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">首先名片列表，名片上的字母索引都在 scroll-view 里面，这个 scroll-view 必须设置好固定的高度，设置成 100% 与 100vh 是无效的，y 轴的滚动开关打开，scroll-into-view 需要跳转到它子元素的 id 上。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222233mm618fffpc8z7ph6.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">可以看下：</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222234s1gv0llnrxr415ix.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">这个 group.name==sortmsg，等于就是 A==A,B==B 同理。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222234tgh78h7secgssgcj.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222234coxof1vef25qivz5.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">在这里如顶部有些菜单栏的话，你就要注意好布局了，不然会出现向下偏移这个菜单栏的高度，其实你只要和字母索引同级下即可避免此问题（这里的顶部菜单以模板分离出去了，分离模板的时候需注意下，需要在这里绑定模板的一些数据会出现失效，具体没有继续深入研究下去）。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222234ud9k6pnxxx66d2kx.jpeg\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\">跳转功能基本实现（ohter 就是 # 底部）。</p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"margin: 26px 0px; padding: 0px; text-indent: 2em; color: rgb(64, 64, 64); font-family: 'Microsoft Yahei'; line-height: 32px; text-align: justify; background-color: rgb(255, 255, 255);\"></p><p style=\"text-align: center;\"><img src=\"data/attachment/portal/201610/12/222234ngaacnouu2que17c.jpeg\"></p> </td>", "pub_time": "2016-10-12 22:14", "author": "admin"}
{"title": "微信小程序周边配套的实现 ", "content": "<td id=\"article_content\"> \n                     \n                    <h3 data-anchor-id=\"qft4\" id=\"一-需求分析\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>一 需求分析：</h3><p data-anchor-id=\"pzma\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>以该小区为中心，实现周边配套的检索，切换不同种类的检索条件，刷新页面，并以气泡的方式显示出来，效果如下~</p><p><a href=\"data/attachment/portal/201910/24/095453ga2czv32ja2ntjc3.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201910/24/095453ga2czv32ja2ntjc3.jpg\"></a></p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"0z5p\" id=\"二-实现方式\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>二 实现方式：</h3><p data-anchor-id=\"5b5k\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>底部我是用的vant组件的tabbar来实现切换显示 <br>下载微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>JavaScriptSDK <br>引入SDK，并且实例化API核心类</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"585h\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">QQMapWX</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">require</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'../../../libs/qqmap-wx-jssdk.js'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> app </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> getApp</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// 实例化API核心类</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> qqmapsdk </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">QQMapWX</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  key</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> app</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">globalData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">map_key </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// 必填</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当切换底部标签时，获取要搜索的关键字，调用接口，实现搜索</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// 事件触发，调用接口</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  nearby_search</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> _this </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// 调用接口</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    qqmapsdk</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">search</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      keyword</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> _this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">kewWord</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//搜索关键词</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      location</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        latitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> _this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">lat</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        longitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> _this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">lng</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//设置周边搜索中心点</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      success</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//搜索成功后的回调</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> mks </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[]</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//在此将小区的位置坐标点加载出来</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        mks</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">push</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          latitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> _this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">lat</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          longitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> _this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">lng</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">for</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> i </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> i </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">length</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> i</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">++)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          mks</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">push</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// 获取返回结果，放到mks数组中</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            title</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">i</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">].</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">title</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">i</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">].</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            latitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">i</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">].</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">location</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">lat</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            longitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">i</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">].</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">location</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">lng</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            iconPath</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> _this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">img</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//图标路径</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            width</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">24</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            height</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">28</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            callout </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              color </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"#fff\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              padding </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">8</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              content</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">i</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">].</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">title</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              borderRadius </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">5</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              bgColor</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"#3072f6\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              fontSize </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">12</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        _this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">setData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//设置markers属性，将搜索结果显示在地图中</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          markers</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> mks</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      fail</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      complete</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li></ol></pre><p data-anchor-id=\"eu2s\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>到这里基本上就实现了周边配套的需求，现在你需要做的不过是，规整一下整体逻辑和交互，当点击图标会出现气泡框，具体气泡的显示方式参照微信小程序的map组件即可</p><p data-anchor-id=\"c021\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>作者：DevinZ <br></p> </td>", "pub_time": "2019-10-24 00:50", "author": "Rolan"}
{"title": "写给小程序开发者的“一大堆”建议 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>从工作到现在，我已经累计写了超过6个<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>，总结以及探索到了许多便于开发的解决方案，在这里分享给大家。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>编码规范</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>缘由</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>编码规范应放在首位。当一个项目需要多个人同时进行编码时，编码规范尤为重要，当我看见我编写的代码里被其他人写的其他风格的代码“污染”了时，那感觉像吃了屎一样。这就是为什么我要求团队有一个统一的代码规范，这会极大地提升代码的可读性，以及协同开发的开发效率。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>不过现实是，即便开发之前已经订好了规范，总有人在不经意间去在项目里“大展拳脚”，体现自己的独特性，这个时候就需要代码review了。在国外，开发工作并不是最繁琐的，最繁琐的是代码review，Google、Microsoft这些建立在代码上的“帝国”都有一套成熟完善的代码review机制，这足以说明对于建立在代码上的“帝国”而言，编码规范在某种程度上就相当于法律，严酷的惩罚将每个开发人员的“邪念”压制住，这是我们应该了解和学习的。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>规范</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>文件命名：文件及文件夹统一使用下划线命名，比如\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>goods_detail.wxml</code> ，不使用中横线的原因是其严重影响可读性。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>组件命名：组件统一使用首字母驼峰命名，比如\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>NavBar.wxml</code> ，使用首字母驼峰的原因是组件在页面中是一类特殊元素，需要明显的标识让它与其他便签或方法区别开来。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>变量命名：变量统一使用下划线命名，比如\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>goods_coupon</code> ，对于方法内的特殊私有变量，使用下划线开头，比如\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>const _that = this</code> ，对于系统级别的变量，采用大写下划线命名，比如\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>MAX_VALUE</code> 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>方法命名：方法统一使用驼峰命名，比如\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>GetUserInfo</code> ，私有方法使用下划线开头的驼峰命名，比如\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>_onClose</code> ，在wxs文件中定义的全局方法使用大写的下划线命名，比如：\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>FORMAT_PRICE</code> 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其他：在js文件中，省略语句后面分号，提升可读性。对于使用次数不超过两次的值，不单独设置变量。在方法中，对于不同类型的语句，使用空行分隔，便于阅读。CSS属性排列顺序为：绝对定位&gt;flex定位&gt;float定位&gt;width/height&gt;padding/margin&gt;border&gt;background&gt;font相关&gt;特殊属性。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>更多内容请参照这篇文章：大前端团队代码规范</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>借助wxss-cli在小程序中使用less</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>安装</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>win\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>npm i wxss-cli -g</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>mac\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>sudo npm i wxss-cli -g</code></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用终端（CMD）进入到项目目录，执行\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wxss .</code> ，\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>.</code> 表示当前目录。即可看到less文件将被编译成同名的wxss文件。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用CSS原生变量</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>场景</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>有时候我们与一些不适用less进行开发的小伙伴进行协同，需要统一变量，这个时候CSS原生变量就派上了用场。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>定义</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>app.wxss</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">page</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">--color_main</span>:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#333333</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">--color_sub</span>:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#555555</span>;\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>index.wxss</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>@<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../app.wxss'</span>;\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.section</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.title</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>:<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">var</span>(--color_main);\r\n}\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.section</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.content</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>:<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">var</span>(--color_sub);\r\n}\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用defineProperty定义app.globalData 构建全局数据中心</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>缘由</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>有时，我们会遇到一些很特殊的需求，比如需要在自定义的tabbar上与页面进行交互，而微信的自定义tabbar又没法使用triggerEvent（在页面里不需要引用tabbar），这个时候就需要借助\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>const app = getApp()</code> 来实现类似于数据中心的功能。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>现在的需求是，进入到购物车页面，选择完商品之后需要在tabbar上显示总的价格，然后点击tabbar上的付款按钮。那我们首先得拿到实时的购物车选中商品的数据，也就是做我们得监听购物车选中了哪些商品，同时在tabbar里面做出响应，这个时候，熟悉JS的同学就会想到defineProperty这个方法，它允许我们定义一个变量，同时提供get、set等钩子函数，类似于C#中的getter、setter方法。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先我们在app里定义这个变量，同时构建这个“数据中心”所需的“基础设施”：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>app.js</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>App({\r\n    <span class=\"hljs-attr\">globalData</span>:{\r\n        <span class=\"hljs-attr\">orders</span>:[]\r\n    },\r\n    \r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// watcher start</span>\r\n    watchCallBack: {},\r\n    <span class=\"hljs-attr\">watchingKeys</span>: [],\r\n    initWatcher () {\r\n    \t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.globalData$ = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.assign({}, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.globalData)\r\n    },\r\n    setGlobalData (obj) {\r\n    \t<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.keys(obj).map(<span class=\"hljs-function\">(<span class=\"hljs-params\">key</span>) =&gt;</span> {\r\n    \t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.globalData[key] = obj[key]\r\n    \t})\r\n    },\r\n    watch$ (key, cb) {\r\n    \t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.watchCallBack = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.assign({}, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.watchCallBack, {\r\n    \t\t[key]: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.watchCallBack[key] || []\r\n    \t})\r\n    \r\n    \t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.watchCallBack[key].push(cb)\r\n    \r\n    \t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.watchingKeys.find(<span class=\"hljs-function\">(<span class=\"hljs-params\">x</span>) =&gt;</span> x === key)) {\r\n    \t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>\r\n    \t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.watchingKeys.push(key)\r\n    \t\t<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.defineProperty(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.globalData, key, {\r\n    \t\t\t<span class=\"hljs-attr\">configurable</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n    \t\t\t<span class=\"hljs-attr\">enumerable</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n    \t\t\t<span class=\"hljs-attr\">set</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">val</span>)</span>{\r\n    \t\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> old = that.globalData$[key]\r\n    \t\t\t\tthat.globalData$[key] = val\r\n    \t\t\t\tthat.watchCallBack[key].map(<span class=\"hljs-function\">(<span class=\"hljs-params\">func</span>) =&gt;</span> func(val, old))\r\n    \t\t\t},\r\n    \t\t\t<span class=\"hljs-attr\">get</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"></span>)</span>{\r\n    \t\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> that.globalData$[key]\r\n    \t\t\t}\r\n    \t\t})\r\n    \t}\r\n    },\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// watcher end</span>\r\n    \r\n)\r\n\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>cart.js</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>onChangeOrders() {\r\n    const _that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>\r\n    \r\n\tapp.setGlobalData({\r\n\t\torders: _that.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.orders\r\n\t})\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>tabbar.js</p><pre class=\"prettyprint hljs coffeescript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>watchOrders () {\r\n\tconst _that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>\r\n\r\n\tapp.watch$(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'orders'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">(new_val)</span> =&gt;</span> {\r\n\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (new_val.length) {\r\n\t\t\t_that.setData({\r\n\t\t\t\torders: new_val\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n},\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>了解更多请看这篇文章：\t<a target=\"_blank\" href=\"https://www.cnblogs.com/BestMePeng/p/xcx_watch_globaldata.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">50行代码监听watch小程序的globalData</a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用wxs文件定义模板filter</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>缘由</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>写过Vue的同学知道，在Vue里有一个特别方便的东西，就是filter，它可以很方便地处理模板变量，尤其是在循环数组时，但小程序并没有直接提供相关功能，其实我们可以借助小程序的wxs来实现（目前wxs对ES6的支持有限，许多高级特性都无法使用，比如Object、Array）。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>app.wxs</p><pre class=\"prettyprint hljs typescript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">module</span>.exports = {\r\n\tFORMAT_PRICE: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">price</span>)</span>{\r\n\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> value = (price / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100</span>).toFixed(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>)\r\n\r\n\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> value\r\n\t},\r\n\tFORMAT_ORDER_NUMBER: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">number</span></span>)</span>{\r\n\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> value = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">number</span>.slice(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12</span>)\r\n\r\n\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> value\r\n\t},\r\n\tFORMAT_JSON_TO_STRING: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">string</span></span>)</span>{\r\n\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">JSON</span>.parse(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">string</span>)\r\n\t}\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>cart.wxml</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wxs</span>\r\n      <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../app.wxs\"</span>\r\n      <span class=\"hljs-attr\">module</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"app\"</span>\r\n/&gt;</span>\r\n\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"price\"</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{app.FORMAT_PRICE(item.price)}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n复制代码</span></pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用atom.css配合vs code插件IntelliSense for CSS class names in HTML快速出页面</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>缘由</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于小程序体积限制（2M），在小程序中基本上无法使用那种大而全UI框架，而这个时候CSS框架似乎是更好的选择，这里推荐使用\t<a target=\"_blank\" href=\"https://github.com/MatrixAge/atom.css\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">atom.css</a> 。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>安装</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>npm i @verts/atom.css --save</code></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后复制里面的\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>atom-miniapp.min.wxss</code> 文件到项目目录即可。如果要在less中使用，将\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>atom-miniapp.min.wxss</code> 更改为\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>atom-miniapp.min.less</code> 即可。配合vscode使用时需要安装\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>IntelliSense for CSS class names in HTML</code> ，并将atom.css项目文件夹引入到vscode中，让上述插件将atom.css的所有class缓存到vscode中（wxss 插件无法识别，故无法缓存）。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>效果</h4><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用async包装wx.request 简单实现拦截器的功能</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>request.js</p><pre class=\"prettyprint hljs dart\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> request = (url, method, data, header) =&gt; {\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> Promise((resolve, reject) =&gt; {\r\n\t\twx.request({\r\n\t\t\turl: url,\r\n\t\t\tmethod: method,\r\n\t\t\tdata: data,\r\n\t\t\theader: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.assign(\r\n\t\t\t\t{ token: wx.getStorageSync(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'token'</span>) },\r\n\t\t\t\theader\r\n\t\t\t),\r\n\t\t\tsuccess (res) {\r\n\t\t\t    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//拦截器相关逻辑</span>\r\n\t\t\t    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(res.code===<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'200'</span>){\r\n\t\t\t        resolve(res.data)\r\n\t\t\t    }\r\n\t\t\t},\r\n\t\t\tfail (error) {\r\n\t\t\t\treject(error)\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span> = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (url, data) =&gt; {\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> request(url, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'get'</span>, data)\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> post = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (url, data, header) =&gt; {\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> request(url, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'post'</span>, data, header)\r\n}\r\n\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用</h4><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> API <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../../utils/api'</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> { get } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../../utils/request'</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> Service_getGoodsDetail = <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> get(API.API_getGoodsDetail, data)\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>集中管理api接口</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>缘由</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在项目进行的过程中，由于需求随时会产生变化，所以接口也可能会变化，这个时候就需要统一管理和配置接口，并保持接口的“无状态”，便于后期开发和维护。API命名格式为：\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>API_[methodtype][Someone][Do][Something]</code></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>api.js</p><pre class=\"prettyprint hljs verilog\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//线上地址</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// const API_BASE_URL = 'https://api.***.com'</span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//测试地址</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> API_BASE_URL = 'https:<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//test.***.com'</span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//开发地址</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// const API_BASE_URL = 'http://***:8080'</span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//登录</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> API_postUserLogin = API_BASE_URL + '<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/***/</span>login'\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取 用户信息</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> API_getUserInfo = API_BASE_URL + '<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/***/</span>userInfo'\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> API = {\r\n    API_postUserLogin,\r\n    API_getUserInfo,\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> API\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用mark对长列表做事件代理</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>缘由</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>过去我们使用Jquery，很容易通过on方法实现列表中的子项的操作进行代理操作，我们称之为事件委托。但在小程序中如何实现这一点呢？除了使用\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>data</code> -，小程序提供给了我们一个比\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>data-</code> 更加好用的方案——mark。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>coupon.wxml</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>\r\n    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"coupon_items w_100 border_box flex flex_column\"</span>\r\n    <span class=\"hljs-attr\">catchtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onSelectCoupon\"</span>\r\n&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>\r\n          <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"coupon_item w_100 border_box flex relative\"</span>\r\n          <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{coupon_list}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n          <span class=\"hljs-attr\">wx:key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n          <span class=\"hljs-attr\">mark:index</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n    &gt;</span>\r\n        ***\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>coupon.js</p><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>onSelectCoupon(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">e</span>){\r\n    const _that = this\r\n    const { <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">index</span> } = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">e</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">mark</span>\r\n    \r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">index</span>){\r\n        _that.setData(\r\n            {\r\n                select_coupon_index:<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">index</span>\r\n            }\r\n        )\r\n    }\r\n}\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>在setData之前对目标数据进行复杂操作</h3><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>const _that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>\r\nconst { index } = e.detail\r\n\r\n_that.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.coupon_list[index].selected = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n_that.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.coupon_list[index].text_style = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'bold'</span>\r\n\r\n_that.setData(\r\n    {\r\n        coupon_list:_that.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.coupon_list\r\n    }\r\n)\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用recycle-view进行长列表渲染优化</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>缘由</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>之前做过一个新闻+购物的小程序，由于首页滚动列表的图片内容比较多，滚动加载很多条之后就会出现卡顿甚至直接卡出微信的情况，后来通过使用一些第三方的长列表优化插件优化了一下，至少不会直接卡出微信了，微信现在有一个官方的长列表优化方案，那就是revcycle-view，使用recycle-view能够极大地节省内存，同时提升用户体验，在angular7中，该功能已被集成到angular官方sdk中，而在react中，也有着很多虚拟滚动的方案，Facebook的Instagram Web端的PWA应用很多地方都用到了虚拟滚动。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>index.wxml</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">recycle-view</span>\r\n            <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"chosen\"</span>\r\n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"chosen w_100 border_box flex justify_between flex_wrap\"</span>\r\n            <span class=\"hljs-attr\">batch</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{batchSetRecycleData}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n            <span class=\"hljs-attr\">scroll-y</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{true}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n            <span class=\"hljs-attr\">scroll-with-animation</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{true}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n            <span class=\"hljs-attr\">lower-threshold</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{100}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n            <span class=\"hljs-attr\">bindscrolltolower</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onScrollToLower\"</span>\r\n            <span class=\"hljs-attr\">enable-back-to-top</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{true}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n            <span class=\"hljs-attr\">scroll-top</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{scroll_top}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n            <span class=\"hljs-attr\">bindscroll</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onScroll\"</span>\r\n      &gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>\r\n          <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"w_100 border_box flex flex_column\"</span>\r\n          <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"before\"</span>\r\n    &gt;</span>\r\n        ***\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"goods_card_items w_100 border_box flex justify_between flex_wrap\"</span>&gt;</span>\r\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">recycle-item</span>\r\n                <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"goods_card_wrap\"</span>\r\n                <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{recycleList}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n                <span class=\"hljs-attr\">wx:key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.__index__}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n          &gt;</span>\r\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">GoodsCard</span>\r\n                      <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"goods_card\"</span>\r\n                      <span class=\"hljs-attr\">goods_id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.goods_id}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n                &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">GoodsCard</span>&gt;</span>\r\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">recycle-item</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">recycle-view</span>&gt;</span>\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>index.js</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>data:{}\r\nrecycle_view_context:{},\r\ncreateRecycleView () {\r\n\tconst _that = this\r\n\r\n\tconst ctx = createRecycleContext({\r\n\t\tid: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'chosen'</span>,\r\n\t\tdataKey: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'recycleList'</span>,\r\n\t\tpage: _that,\r\n\t\titemSize: {\r\n\t\t\twidth: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'100%'</span>,\r\n\t\t\theight: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">350</span>\r\n\t\t}\r\n\t})\r\n\r\n\t_that.recycle_view_context = ctx\r\n},\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>追加数据</p><pre class=\"prettyprint hljs coffeescript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>getGoodsData () {\r\n\tconst _that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>\r\n\r\n\tService_getGoodsData.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">(res)</span> =&gt;</span> {\r\n\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.data) {\r\n\t\t\t_that.recycle_view_context.append(res.data.goods_list)\r\n\t\t}\r\n\t})\r\n},\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用watch来实现dialog动效</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>缘由</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>之前写一个商城的时候，研究淘宝的商品属性选择弹窗的动效是一个什么过程，然后如何实现。过程如下：点击选择属性/购买/加入购物车按钮 =&gt; 蒙版层占满整个屏幕，然后渐渐显现出来，与此同时，下方的窗口从底部渐渐滑出。OK，其实这个过程很简单，点击按钮的时候，弹窗（占满整个屏幕）其实以及出现了，但是要等待蒙版层的背景颜色从transparent变为rgba(0, 0, 0, 0.6)，同时也在等待弹窗内容从transform:translate(-100%)变为transform:translate(0)。这个时候需要用到小程序官方开源的一个插件：\t<a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/extended/utils/computed.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">miniprogram-computed</a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>Dialog.wxml</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>\r\n      <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"fixed_wrap\"</span>\r\n      <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{is_show}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n      <span class=\"hljs-attr\">catchtouchmove</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onStopPageScroll\"</span>\r\n&gt;</span>\r\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"dialog_wrap\"</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>\r\n                  <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"mask\"</span>\r\n                  <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"background-color: </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{bg_modal}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n                  <span class=\"hljs-attr\">catchtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onClose\"</span>\r\n            &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>\r\n                  <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"dialog_absolute_wrap\"</span>\r\n                  <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"transform:</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{position_dialog}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n            &gt;</span>\r\n                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>\r\n                        <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"dialog\"</span>\r\n                        <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"background-color: </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{is_show_bg?'white':'transparent'}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n                  &gt;</span>\r\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>\r\n                              <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"img_close\"</span>\r\n                              <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../../assets/images/icon_close.svg\"</span>\r\n                              <span class=\"hljs-attr\">mode</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"widthFix\"</span>\r\n                              <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onClose\"</span>\r\n                              <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{is_show_close}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>\r\n                        &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">slot</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">slot</span>&gt;</span>\r\n                  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>dialog.js</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> computedBehavior <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'miniprogram-computed'</span>\r\n\r\nComponent({\r\n\t<span class=\"hljs-attr\">behaviors</span>: [\r\n\t\tcomputedBehavior\r\n\t],\r\n\t<span class=\"hljs-attr\">properties</span>: {\r\n\t\t<span class=\"hljs-attr\">id</span>: {\r\n\t\t\t<span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>\r\n\t\t},\r\n\t\t<span class=\"hljs-attr\">is_show_dialog</span>: {\r\n\t\t\t<span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Boolean</span>,\r\n\t\t\t<span class=\"hljs-attr\">value</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n\t\t},\r\n\t\t<span class=\"hljs-attr\">is_show_close</span>: {\r\n\t\t\t<span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Boolean</span>,\r\n\t\t\t<span class=\"hljs-attr\">value</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n\t\t},\r\n\t\t<span class=\"hljs-attr\">is_show_bg</span>: {\r\n\t\t\t<span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Boolean</span>,\r\n\t\t\t<span class=\"hljs-attr\">value</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n\t\t}\r\n\t},\r\n\t<span class=\"hljs-attr\">data</span>: {\r\n\t\t<span class=\"hljs-attr\">is_show</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>,\r\n\t\t<span class=\"hljs-attr\">bg_modal</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'transparent'</span>,\r\n\t\t<span class=\"hljs-attr\">position_dialog</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'translateY(120%)'</span>\r\n\t},\r\n\t<span class=\"hljs-attr\">watch</span>: {\r\n\t\t<span class=\"hljs-attr\">is_show_dialog</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">new_val</span>)</span>{\r\n\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> _that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>\r\n\r\n\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (new_val) {\r\n\t\t\t\t_that.setData({\r\n\t\t\t\t\t<span class=\"hljs-attr\">is_show</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n\t\t\t\t})\r\n\r\n\t\t\t\tsetTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n\t\t\t\t\t_that.setData({\r\n\t\t\t\t\t\t<span class=\"hljs-attr\">bg_modal</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'rgba(0, 0, 0, 0.6)'</span>,\r\n\t\t\t\t\t\t<span class=\"hljs-attr\">position_dialog</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'translateY(0)'</span>\r\n\t\t\t\t\t})\r\n\t\t\t\t}, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>)\r\n\t\t\t}\r\n\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n\t\t\t\t_that.setData({\r\n\t\t\t\t\t<span class=\"hljs-attr\">bg_modal</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'transparent'</span>,\r\n\t\t\t\t\t<span class=\"hljs-attr\">position_dialog</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'translateY(120%)'</span>\r\n\t\t\t\t})\r\n\r\n\t\t\t\tsetTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n\t\t\t\t\t_that.setData({\r\n\t\t\t\t\t\t<span class=\"hljs-attr\">is_show</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n\t\t\t\t\t})\r\n\t\t\t\t}, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">300</span>)\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t<span class=\"hljs-attr\">methods</span>: {\r\n\t\tonClose () {\r\n\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> _that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>\r\n\r\n\t\t\t_that.setData({ <span class=\"hljs-attr\">is_show_dialog</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span> })\r\n\t\t},\r\n\t\tonTapDialog (e) {\r\n\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> _that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>\r\n\r\n\t\t\t_that.triggerEvent(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'OnBottomDialog'</span>, { <span class=\"hljs-attr\">id</span>: _that.data.id, <span class=\"hljs-attr\">event</span>: e })\r\n\t\t},\r\n\t\tonStopPageScroll () {}\r\n\t}\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>dialog.less</p><pre class=\"prettyprint hljs scss\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>@<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../../theme/vars.less'</span>;\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.fixed_wrap</span> {\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: fixed;\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">z-index</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10000</span>;\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100vw</span>;\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100vh</span>;\r\n     \r\n}\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.dialog_wrap</span> {\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: relative;\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n\r\n      <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.mask</span> {\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transition</span>: all ease <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0.3s</span>;\r\n      }\r\n\r\n      <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.dialog_absolute_wrap</span> {\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transition</span>: all ease <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0.3s</span>;\r\n\r\n            <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.dialog</span> {\r\n                  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: relative;\r\n                  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n                  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">flex-direction</span>: column;\r\n                  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n                  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">box-sizing</span>: border-box;\r\n                  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: white;\r\n                  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-top-left-radius</span>: @radius_normal;\r\n                  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-top-right-radius</span>: @radius_normal;\r\n\r\n                  <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.img_close</span> {\r\n                        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n                        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>rpx;\r\n                        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">right</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>rpx;\r\n                        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">z-index</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>;\r\n                        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">40</span>rpx;\r\n                        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">40</span>rpx;\r\n                        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">padding</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>rpx;\r\n                        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">opacity</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0.3</span>;\r\n                  }\r\n            }\r\n      }\r\n}\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>自定义顶部NavBar</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>缘由</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>现在有很多商城app都会有在顶部NavBar上放各种“东西”比如搜索框的需求，但是NavBar上的胶囊又没办法自定义，这就导致NavBar上的搜索框或是其他元素会与胶囊错位，看起来效果很差，详情可看“网易严选小程序”，但是其实是有办法做到顶部NavBar完美布局的，这里就要用到一个获取胶囊定位以及尺寸的api\t<a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/api/ui/menu/wx.getMenuButtonBoundingClientRect.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">wx.getMenuButtonBoundingClientRect()</a> ，通过这个api，然后使用\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>res.statusBarHeight</code> 这个变量，我们可以做很多事情。不过经过测试，目前已知在小米的一些型号的全面屏手机上，高度会有略微的偏移，需要做一定的适配。</p><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>wx.getSystemInfo({\r\n\tsuccess(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>){\r\n\t    console.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.statusBarHeight)\r\n\t},\r\n})\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>具体实现我就不写了，等有时间抽空把组件重构一次后再分享给大家，下面写部分关键代码：</p><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>//获取设备顶部 状态栏高度 和 顶部标题栏高度\r\nexport const GetDeviceBarHeight = () =&gt; {\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> statusBarHeight\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> titleBarHeight\r\n\r\n\twx.getSystemInfo({\r\n\t\tsuccess(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>){\r\n\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> totalTopHeight = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">68</span>\r\n\r\n\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.model.indexOf(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'iPhone X'</span>) !== -<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>) {\r\n\t\t\t\ttotalTopHeight = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">88</span>\r\n\t\t\t}\r\n\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.model.indexOf(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'iPhone'</span>) !== -<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>) {\r\n\t\t\t\ttotalTopHeight = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">64</span>\r\n\t\t\t}\r\n\r\n\t\t\tstatusBarHeight = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.statusBarHeight\r\n\t\t\ttitleBarHeight = totalTopHeight - <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.statusBarHeight\r\n\t\t},\r\n\t\tfailure () {\r\n\t\t\tstatusBarHeight = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n\t\t\ttitleBarHeight = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n\t\t}\r\n\t})\r\n\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n\t\tstatusBarHeigh<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> statusBarHeight,\r\n\t\ttitleBarHeigh<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> titleBarHeight\r\n\t}\r\n}\r\n\r\ndat<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">a:</span> {\r\n        statusBarHeigh<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> app.globalData.statusBarHeight + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'px'</span>,\r\n\t\ttitleBarHeigh<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> app.globalData.titleBarHeight + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'px'</span>,\r\n\t\tnavigationBarHeigh<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> app.globalData.statusBarHeight + <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">44</span> + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'px'</span>,\r\n\r\n\t\theigh<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>,\r\n\t\ttop: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n},\r\n\r\n//动态设定 顶部操作按钮的高度和位置\r\nsetOptionsHeight () {\r\n\tconst _that = this\r\n\tconst { top, height } = wx.getMenuButtonBoundingClientRect()\r\n\r\n\t_that.setData({\r\n\t\theigh<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> height - <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>,\r\n\t\ttop: top + <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>\r\n\t})\r\n}\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序分包加载</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>但小程序的大小超过2M之后可以采用分包加载的方式加载页面，具体使用方式看官方文档\t<a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/subpackages/basic.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">小程序分包加载</a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>最后</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>后续我会写一些单独的小程序组件并开源出来，不同于有赞的小程序库，他们提供的是一辆长得像淘宝的“改装车”，而我开源出来的是一些，跟谁都长的不像，想怎么改就怎么改的“改装车零件”。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我在github开源了一个\t<a target=\"_blank\" href=\"https://github.com/MatrixAge/wxapp-tutorial\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">小程序开发手册</a> ，后续更多内容将在这个开源项目上更新，大家可以分享给开发小程序的同事，让他们少踩一点坑，大家少加一点班。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>周末愉快。</p> </td>", "pub_time": "2019-11-5 00:46", "author": "Rolan"}
{"title": "【微信小程序】图片压缩-纯质量压缩，非长宽裁剪压缩 ", "content": "<td id=\"article_content\"> \n                     \n                    <blockquote style='box-sizing: border-box; padding: 10px 20px; margin: 0px 0px 1.5em; font-size: 15px; border-left: 2px solid rgb(0, 154, 97); background: rgb(246, 246, 246); color: rgb(85, 85, 85); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif;'><strong style=\"box-sizing: border-box;\">原理</strong>：利用canvas来实现，将图片绘制到canvas上，然后canvas转图片时，微信提供的一个方法wx.canvasToTempFilePath(Object object, Object this)，此方式可以指定生成图片的质量，下图是从官方API截的图：</blockquote><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span></p><p><a href=\"data/attachment/portal/201911/13/102021fyv36x5795ns44n5.png\" target=\"_blank\"><img src=\"data/attachment/portal/201911/13/102021fyv36x5795ns44n5.png\"></a></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>其中quality可以指定图片的质量，quality的值越小，图片越模糊，通过此方法可以实现图片的压缩</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><strong style=\"box-sizing: border-box;\">注意</strong>：</p><pre class=\"hljs css\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>1<span class=\"hljs-selector-class\" style=\"box-sizing: border-box;\">.quality</span>设置只对<span class=\"hljs-selector-tag\" style=\"box-sizing: border-box; font-weight: bold;\">jpg</span>格式的图片有效，使用时要将<span class=\"hljs-selector-tag\" style=\"box-sizing: border-box; font-weight: bold;\">fileType</span>设置为“<span class=\"hljs-selector-tag\" style=\"box-sizing: border-box; font-weight: bold;\">jpg</span>”， 此举可能会导致其它格式的图片变为<span class=\"hljs-selector-tag\" style=\"box-sizing: border-box; font-weight: bold;\">jpg</span>格式\r\n\r\n2.透明背景的<span class=\"hljs-selector-tag\" style=\"box-sizing: border-box; font-weight: bold;\">png</span>图片，绘制到<span class=\"hljs-selector-tag\" style=\"box-sizing: border-box; font-weight: bold;\">canvas</span>上使用此方式导出的图片是黑色背景，有需求的话是需要<span class=\"hljs-selector-tag\" style=\"box-sizing: border-box; font-weight: bold;\">canvas</span>先设置背景色的，请小伙伴们注意爬坑。</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>有了这个参数，压缩就简单很多了，下面是代码：</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>wxml</p><pre class=\"hljs xml\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n  <span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">button</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">bindtap</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"chooseImage\"</span>&gt;</span>选择图片<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">button</span>&gt;</span>\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">&lt;!-- 展示压缩后的图片 --&gt;</span>\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">style</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"display: flex;justify-content: center;flex-direction: column\"</span>&gt;</span>\r\n  <span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">image</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">width</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"50\"</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">mode</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"widthFix\"</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">src</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"{{imagePath}}\"</span>&gt;</span><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">image</span>&gt;</span>\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">button</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">wx:if</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"{{imagePath.length&gt;0}}\"</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">bindtap</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"save\"</span>&gt;</span>点击下载压缩后的图片<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">button</span>&gt;</span>\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">&lt;!-- 用来渲染的canvas --&gt;</span> \r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">canvas</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">canvas-id</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'attendCanvasId'</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">class</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'myCanvas'</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">style</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'width:{{cWidth}}px;height:{{cHeight}}px;position: fixed;top: -9999px;left: -9999px;'</span>&gt;</span><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">canvas</span>&gt;</span></code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>js</p><pre class=\"hljs javascript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>Page({\r\n  <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">data</span>: {\r\n    <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">imagePath</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">''</span>,\r\n    <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">quality</span>: <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">0.2</span>\r\n  },\r\n  <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">onLoad</span>: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span> (<span class=\"hljs-params\" style=\"box-sizing: border-box;\">options</span>) </span>{\r\n  \r\n  },\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">/**\r\n  * 选项添加图片事件\r\n  */</span>\r\n  chooseImage: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span> (<span class=\"hljs-params\" style=\"box-sizing: border-box;\">e</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">var</span> that = <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>;\r\n    wx.chooseImage({\r\n      <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">sizeType</span>: [<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'compressed'</span>],  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">//可选择原图或压缩后的图片</span>\r\n      sourceType: [<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'album'</span>, <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'camera'</span>], <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">//可选择性开放访问相册、相机</span>\r\n      success: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-params\" style=\"box-sizing: border-box;\">result</span> =&gt;</span> {\r\n        wx.getImageInfo({\r\n          <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">src</span>: result.tempFilePaths[<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">0</span>],\r\n          <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">success</span>: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span> (<span class=\"hljs-params\" style=\"box-sizing: border-box;\">res</span>) </span>{\r\n            that.setData({\r\n              <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">cWidth</span>: res.width,\r\n              <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">cHeight</span>: res.height\r\n            })\r\n            that.getCanvasImg(result.tempFilePaths, res.width, res.height, that.data.quality, <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span> (<span class=\"hljs-params\" style=\"box-sizing: border-box;\">res</span>) </span>{\r\n              that.setData({\r\n                <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">imagePath</span>: res.tempFilePath\r\n              });\r\n            });\r\n          }\r\n        })\r\n      }\r\n    })\r\n  },\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">/**\r\n   * 质量压缩\r\n   */</span>\r\n  getCanvasImg(tempFilePaths, canvasWidth, canvasHeight, quality, callback) {\r\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">var</span> that = <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>; \r\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">const</span> ctx = wx.createCanvasContext(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'attendCanvasId'</span>);\r\n    ctx.clearRect(<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">0</span>, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">0</span>, canvasWidth, canvasHeight);\r\n    ctx.drawImage(tempFilePaths[<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">0</span>], <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">0</span>, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">0</span>, canvasWidth, canvasHeight);\r\n    ctx.draw(<span class=\"hljs-literal\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">false</span>, <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span> (<span class=\"hljs-params\" style=\"box-sizing: border-box;\"></span>) </span>{\r\n      wx.canvasToTempFilePath({\r\n        <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">canvasId</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'attendCanvasId'</span>,\r\n        <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">fileType</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'jpg'</span>,\r\n        <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">quality</span>: quality,\r\n        <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">success</span>: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; color: rgb(153, 0, 0); font-weight: bold;\">success</span>(<span class=\"hljs-params\" style=\"box-sizing: border-box;\">res</span>) </span>{\r\n          callback &amp;&amp; callback(res)\r\n        }, <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">fail</span>: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span> (<span class=\"hljs-params\" style=\"box-sizing: border-box;\">e</span>) </span>{\r\n          wx.showToast({\r\n            <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">title</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'图片上传失败，请重新上传！'</span>,\r\n            <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">icon</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'none'</span>\r\n          })\r\n        }\r\n      });\r\n    });\r\n  },\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">/**\r\n   * 图片保存到相册\r\n   */</span>\r\n  save(e) {\r\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">let</span> that = <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>;\r\n    wx.saveImageToPhotosAlbum({\r\n      <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">filePath</span>: that.data.imagePath,\r\n      <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">success</span>: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span> (<span class=\"hljs-params\" style=\"box-sizing: border-box;\">res</span>) </span>{\r\n        <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'图片已保存'</span>);\r\n      },\r\n      <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">fail</span>: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span> (<span class=\"hljs-params\" style=\"box-sizing: border-box;\">res</span>) </span>{\r\n        <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'保存失败'</span>);\r\n      }\r\n    })\r\n  },\r\n})</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><strong style=\"box-sizing: border-box;\">注意点</strong>：</p><ol style='box-sizing: border-box; margin: 1.5em 0px 1.5em 3em; padding-left: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box; margin: 0.3em 0px;\">注意设置canvas-id='attendCanvasId'</li><li style=\"box-sizing: border-box; margin: 0.3em 0px;\">canvas要离屏渲染，就是移出屏幕之外，但是元素还是显示的，position: fixed;top: -9999px;left: -9999px; 不能使用 display: none; 这样是获取不到canvas元素的。</li></ol><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><strong style=\"box-sizing: border-box;\">最后</strong></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>h5页面中也有提供这样的方法</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span></p><p><a href=\"data/attachment/portal/201911/13/102021e3338e4jjz0aoj80.png\" target=\"_blank\"><img src=\"data/attachment/portal/201911/13/102021e3338e4jjz0aoj80.png\"></a></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>例如这样子：</p><pre class=\"hljs typescript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">let</span> canvas = <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">document</span>.createElement(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'canvas'</span>);\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">let</span> ctx = canvas.getContext(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'2d'</span>);\r\nctx.drawImage(imagePath, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">0</span>, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">0</span>, w, h);\r\ncanvas.toDataURL(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'image/jpeg'</span>, quality);</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>需要的小伙伴也可以自己研究研究哈...</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><a href=\"https://github.com/orangleLi/orangleLi.github.io/tree/master/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/demo/pages/pictureCompression\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px; border-bottom: 1px solid rgba(0, 154, 97, 0.25); padding-bottom: 1px;\">源码-欢迎star</a></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>感谢</p><p style='box-sizing: border-box; margin: 1.5em 0px 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>ok, 结束，  </p> </td>", "pub_time": "2019-11-13 00:17", "author": "Rolan"}
{"title": "在腾讯Q3财报中站C位的品牌小程序，BAT态度大不同！ ", "content": "<td id=\"article_content\"> \n                     \n                    <section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">昨天，腾讯2019年Q3财报如“约”而至。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">其中，<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>数据格外亮眼，不仅日活跃用户超过3亿，商业化也表现强劲，中长尾小程序日均商业交易笔数同比增加超过一倍。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">值得注意的是，这组数据中，“品牌”二字尤其“夺目”，财报显示：</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><ul class=\"list-paddingleft-2\" style=\"margin: 0px; padding: 0px 0px 0px 2.2em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">品牌自营类小程序数量同比增长1倍以上；</span></p></li><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">8%的品牌自营类小程序交易额同比增长100倍以上、56%的品牌自营类小程序交易额同比增长50%以上，在头部领跑下，中腰部正在崛起；</span></p></li><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">超过1亿人次访问品牌自营类小程序。</span></p></li></ul><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">这一定程度上说明了越来越多的品牌选择了微信小程序作为重要阵地。因此，要让用户在众多品牌中一眼就能发现自己，品牌曝光是首要环节。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">对于企业而言，如果没做好品牌曝光，自家品牌就会淹没在“芸芸众生”之中，而这一局面，在搜索场景下尤为突出。比如，用户输入一个关键词，结果“数不胜数”，无论用户看多少眼，也不一定会注意到。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">于是，BAT三巨头接踵而至地基于自家搜索推出一个能力：品牌主页。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">直白点说，“品牌主页”就是：在搜索结果页中，将企业各类信息与服务放在一起整体展示，比如企业认证信息、小程序、服务等等，入口更直接。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">微信“品牌主页”叫作品牌官方区，于去年4月基于搜一搜推出，在公众号后台便可开通；相比之下，支付宝与百度则慢了好几拍，都是最近才推出小程序能力，前者叫品牌直达，后者称百度品牌名片。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095735y1hxgrkxpkxqacak.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095735y1hxgrkxpkxqacak.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">虽然叫法不同（以下统称时，称为“品牌主页”），但其目的是一致的，都是为了帮助企业更好地建立品牌效应、将服务充分触达用户，从而提升收益。</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">但BAT三平台的属性不同，“品牌主页”的能力开放程度、玩法等也有所差异，并非都能满足所有企业的需求，企业们在选择上也就“不知所云”。对此，晓程序观察（yinghoo-tech）就来一次测评与PK，帮助企业们选择适合自己的“品牌主页”。</span></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" text-align:=\"\" justify background-color:=\"\" rgb word-wrap:=\"\" break-word=\"\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 10px 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: middle; width: 101.547px;\"><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; border-top: 1px dashed rgb(126, 127, 141);\"></section></section></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: middle; width: 135.391px;\"><section powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; font-size: 15px;\"><section style=\"margin: 0px 0px -0.9em; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; overflow: hidden;\"><section style=\"margin: 0px 0px -0.5em 0.25em; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 1.76em; height: 0.5em; border-left: 1px solid rgb(245, 242, 242); border-right: 1px solid rgb(245, 242, 242); transform: skew(-45deg);\"></section><section style=\"margin: 0px 0px 0px 0.5em; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 1.8em; height: 1.8em; background-color: rgb(218, 219, 224);\"></section><section class=\"\" style=\"margin: -0.88em 0px 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 1.2em; height: 1.2em; line-height: 1.2em; background-color: rgb(245, 242, 242); color: rgb(97, 99, 104); font-size: 23px; font-family: Optima-Regular, PingFangTC-light;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">1</strong></p></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; transform: rotate(-45deg);\"><section style=\"margin: 0.4em 0px 0px 2em; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 0.68em; border-bottom: 1px solid rgb(245, 242, 242);\"></section></section></section></section></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: middle; width: 101.547px; box-shadow: rgb(0, 0, 0) 0px 0px 0px;\"><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; border-top: 1px dashed rgb(126, 127, 141);\"></section></section></section></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; background-color: rgb(255, 255, 255); text-align: center; font-size: 18px; letter-spacing: 2px; line-height: 1.75; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">流量曝光：微信品牌官方区完胜？</strong></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" text-align:=\"\" justify background-color:=\"\" rgb word-wrap:=\"\" break-word=\"\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">既然“品牌主页”是用来帮助企业更好地触达用户，对于企业与品牌而言，最关心的还是流量，比如：</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><ul class=\"list-paddingleft-2\" style=\"margin: 0px; padding: 0px 0px 0px 2.2em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">用户输入哪些关键词，才能直达“品牌主页”？</span></p></li><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\">如果品牌名称输入错误，“品牌主页”能不能显示？</p></li><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\">“品牌主页”在搜索结果中是怎么排序的？</p></li></ul><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">实际上，对于搜索平台来说，这些都是影响流量曝光不可忽略的因素。</span></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" text-align:=\"\" justify background-color:=\"\" rgb word-wrap:=\"\" break-word=\"\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 10px 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center font-size:=\"\" word-wrap:=\"\" break-word=\"\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: top;\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><section style=\"margin: auto; padding: 0px; max-width: 100%; box-sizing: border-box; width: 8px; height: 8px; border-radius: 50%; border-width: 1px; border-style: solid; border-color: rgb(160, 160, 160); word-wrap: break-word !important;\"></section><section style=\"margin: -5px auto 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 22px;\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; height: 20px; transform: rotate(45deg); transform-origin: left center 0px; float: left; border-left: 1px solid rgb(160, 160, 160); border-top-color: rgb(160, 160, 160); border-right-color: rgb(160, 160, 160); border-bottom-color: rgb(160, 160, 160);\"></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; height: 20px; border-left: 1px solid rgb(160, 160, 160); transform: rotate(-45deg); transform-origin: right center 0px; float: right; border-top-color: rgb(160, 160, 160); border-right-color: rgb(160, 160, 160); border-bottom-color: rgb(160, 160, 160);\"></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both;\"></section></section></section><section class=\"\" style=\"margin: -3px 0px 0px; padding: 2px 20px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; border-width: 1px; border-style: solid; border-color: rgb(160, 160, 160); display: inline-block; vertical-align: top; border-radius: 5px; font-size: 15px; font-family: Optima-Regular, PingFangTC-light; line-height: 2; letter-spacing: 2.2px;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">流量曝光第一环：入口</strong></p></section></section></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" text-align:=\"\" justify background-color:=\"\" rgb word-wrap:=\"\" break-word=\"\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">微信：三种样式、三种入口，A级最突出</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">在搜一搜的搜索结果页中，微信品牌官方区的有三种展示样式，如图，依次为A、B、C三种：</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><ul class=\"list-paddingleft-2\" style=\"margin: 0px; padding: 0px 0px 0px 2.2em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">A级与B级的品牌官方区可以添加公众号、小程序、服务和商品；</span></p></li><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">C级样式仅允许将公众号展示。</span></p></li></ul><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095735ger8rjl03n9jbm41.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095735ger8rjl03n9jbm41.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">此外，A级与B级都有品牌详情页，C级样式并没有。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">在众多搜索结果中，A级样式会有一种“鹤立鸡群”的感觉，更容易建立品牌认知，尤其是小程序、公众号、服务、商品等都是卡片形式，入口更加“抢眼”。</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">不过，A级样式并不是所有品牌都能开通的，三种样式各有不同的门槛。如图，要求中包括公众号与官方区点击量、是否有微信认证与商标认证、公众号注册时间等条件。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095736oyjqt2zaty9kqppu.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095736oyjqt2zaty9kqppu.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">值得注意的是，开通A级样式还有推广搜一搜的要求，即品牌主在投放广告时或在自有宣传渠道上，要有“微信搜一搜”搜索框露出。线上线下渠道都可以，比如：电梯间广告、户外大屏广告、易拉宝、门店宣传、自有小程序曝光、公众号文章广告、朋友圈广告等等。 </span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095736nf2fxrf4zf4tdkfb.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095736nf2fxrf4zf4tdkfb.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">支付宝&amp;百度：品牌主页没有特殊展示，入口很“隐蔽</strong><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">”</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">相较于微信官方区，支付宝品牌直达与百度品牌名片的样式则显得尤为“简陋”。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">展示上，支付宝品牌直达与其他搜索结果并无差别，而百度品牌名片本身即是一个小程序。所以，在入口上，支付宝品牌直达与百度品牌名片都不够突出。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095736bgl6c62tozl2l8tl.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095736bgl6c62tozl2l8tl.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">对于企业来说，“品牌主页”的作用，就是为了让用户在众多搜索结果中一眼就能看到自家品牌，而“与众不同”的样式，入口也就更“夺目”，这一点，微信官方区是合格的。</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">从品牌曝光来看，支付宝与百度的“品牌主页”在入口上都没有明显优势。如此看来，微信品牌官方区完胜。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 10px 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center font-size:=\"\" word-wrap:=\"\" break-word=\"\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: top;\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><section style=\"margin: auto; padding: 0px; max-width: 100%; box-sizing: border-box; width: 8px; height: 8px; border-radius: 50%; border-width: 1px; border-style: solid; border-color: rgb(160, 160, 160); word-wrap: break-word !important;\"></section><section style=\"margin: -5px auto 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 22px;\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; height: 20px; transform: rotate(45deg); transform-origin: left center 0px; float: left; border-left: 1px solid rgb(160, 160, 160); border-top-color: rgb(160, 160, 160); border-right-color: rgb(160, 160, 160); border-bottom-color: rgb(160, 160, 160);\"></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; height: 20px; border-left: 1px solid rgb(160, 160, 160); transform: rotate(-45deg); transform-origin: right center 0px; float: right; border-top-color: rgb(160, 160, 160); border-right-color: rgb(160, 160, 160); border-bottom-color: rgb(160, 160, 160);\"></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both;\"></section></section></section><section class=\"\" style=\"margin: -3px 0px 0px; padding: 2px 20px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; border-width: 1px; border-style: solid; border-color: rgb(160, 160, 160); display: inline-block; vertical-align: top; border-radius: 5px; font-size: 15px; font-family: Optima-Regular, PingFangTC-light; line-height: 2; letter-spacing: 2.2px;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">流量曝光第二环：关键词配置</strong></p></section></section></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" text-align:=\"\" justify background-color:=\"\" rgb word-wrap:=\"\" break-word=\"\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">对比完三家“品牌主页”的样式，再来看关键词配置。毕竟，用户输入什么关键词，才能将“品牌主页”搜索出来才是最重要的。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">微信：级别越高，可配置关键词数量越多</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">刚刚提到，微信品牌官方区有A、B、C三种不同级别。所以，可配置的关键词数量也是不一样的，分别为5个、3个、1个。所以，这对企业来说，可操作空间不大，但仍旧需要将与品牌相关的常见关键词都加上。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">比如，开通A级官方区的“同程旅游网”，其相关的关键词有同程旅游、同程、同程艺龙等，但晓程序观察（yinghoo-tech）测试后发现，输入“同程艺龙”，并不会出现“同程旅游网”品牌官方区，说明其没有配置关键词“同程艺龙”。同样的问题，也出现在开通B级官方区的“麦当劳”上，搜索英文名称McDonald，就不会出现其品牌官方区。</span></p><p><a href=\"data/attachment/portal/201911/22/095737njhrllpj1vzly3ip.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095737njhrllpj1vzly3ip.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">支付宝&amp;百度：“关键词要与品牌名称完全一致”</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">支付宝品牌直达与百度品牌名片的关键词完全不用主动配置，但是，对企业、对用户都极其不友好。因为，只有在用户精确搜索品牌词时，搜索结果中才会出现“品牌主页”。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095737rjhuznl6mmhac5cx.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095737rjhuznl6mmhac5cx.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">百度品牌名片更甚，据百度官方介绍，用户需要输入“品牌名+品牌名片”（如齐家网品牌名片），或者输入开发者在后台填写的企业全称。对此，晓程序观察也测试了一番，输入“齐家网”后，在搜索结果中，整个第一页都没有看到“齐家网品牌名片”的身影。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095737htj58wy75xxsl515.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095737htj58wy75xxsl515.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">因此，在“品牌主页”的关键词配置上，微信有一定的运营空间，而百度与支付宝则完全没有。</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 10px 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center font-size:=\"\" word-wrap:=\"\" break-word=\"\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: top;\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><section style=\"margin: auto; padding: 0px; max-width: 100%; box-sizing: border-box; width: 8px; height: 8px; border-radius: 50%; border-width: 1px; border-style: solid; border-color: rgb(160, 160, 160); word-wrap: break-word !important;\"></section><section style=\"margin: -5px auto 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 22px;\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; height: 20px; transform: rotate(45deg); transform-origin: left center 0px; float: left; border-left: 1px solid rgb(160, 160, 160); border-top-color: rgb(160, 160, 160); border-right-color: rgb(160, 160, 160); border-bottom-color: rgb(160, 160, 160);\"></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; height: 20px; border-left: 1px solid rgb(160, 160, 160); transform: rotate(-45deg); transform-origin: right center 0px; float: right; border-top-color: rgb(160, 160, 160); border-right-color: rgb(160, 160, 160); border-bottom-color: rgb(160, 160, 160);\"></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both;\"></section></section></section><section class=\"\" style=\"margin: -3px 0px 0px; padding: 2px 20px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; border-width: 1px; border-style: solid; border-color: rgb(160, 160, 160); display: inline-block; vertical-align: top; border-radius: 5px; font-size: 15px; font-family: Optima-Regular, PingFangTC-light; line-height: 2; letter-spacing: 2.2px;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">流量曝光第三环：搜索排名</strong></p></section></section></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" text-align:=\"\" justify background-color:=\"\" rgb word-wrap:=\"\" break-word=\"\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">对于搜索平台的逻辑来说，决定流量价值的，除了关键词，当然就是搜索结果页排名了。BAT三家“品牌主页”的排名规则，又有什么不一样？</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">微信：“品牌主页”始终占据首位</strong></span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">在搜一搜结果页中，微信官方区始终是以首位展示。比如，输入“同程”后，结果页中排在第一位的便是“同程旅游网”品牌官方区，而后才是文章、公众号、小程序、朋友圈等内容。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095737wuk9noywdpyuy4ny.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095737wuk9noywdpyuy4ny.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">当然前提是，需要针对特定搜索词才能保证官方区首位展示。不同级别的官方区，指定关键词数量也是不一样的。</span></p><p><a href=\"data/attachment/portal/201911/22/095940f8ffhfs8f9l282w2.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095940f8ffhfs8f9l282w2.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">此外，搜索词申请也有一定的要求：</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><ul class=\"list-paddingleft-2\" style=\"margin: 0px; padding: 0px 0px 0px 2.2em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">须为品牌词汇：针对通用词汇，比如汉堡、保险等，不开放置顶申请；</span></p></li><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">须具有品牌独占性：针对非品牌独占词汇，比如阿拉丁等，不开放置顶申请。</span></p></li></ul><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">支付宝：可通过运营手段来提升搜索排名</strong></span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">相比于微信官方区首位展示，支付宝品牌直达的搜索排名则由算法决定。算法维度主要包括：搜索结果中品牌直达的访问和点击用户数、开通品牌直达后搜索带来的增量用户数等，而这些数据都可以利用运营手段来提升。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095738pi2qic2jktcckjaz.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095738pi2qic2jktcckjaz.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">需要注意的是，支付宝品牌直达内包括了小程序、生活号等内容；所以，企业们只需运营品牌直达即可，这样便能同时提升小程序与生活号的排名竞争力。比如，在运营活动中，就可以引导用户“上支付宝搜XXX”，从而改善搜索UV、搜索UV增量数据。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">百度：广告排在品牌主页前面</strong></span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">作为一个搜索引擎平台，百度品牌名片的排名同样根据算法得到，至于逻辑目前还不太清楚。不过，据我们的测试来看，百度品牌名片并不会排在首位，“取而代之”的则是与关键词相关的广告内容。如图，输入“齐家网品牌名片”之后，出现在首位是与齐家网毫无关系的广告内容。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095738hugh6fy89b69gmhe.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095738hugh6fy89b69gmhe.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">综上，<strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">微信官方区首位展示，显然是最能帮助企业实现品牌曝光的。</strong>而支付宝与百度，还需要开发者在运营规范中自行摸索算法。比如，支付宝品牌直达的搜索UV就是其算法中一个很重要的因素。</span></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" text-align:=\"\" justify background-color:=\"\" rgb word-wrap:=\"\" break-word=\"\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 10px 0px; padding: 0px; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: middle; width: 101.547px;\"><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; border-top: 1px dashed rgb(126, 127, 141);\"></section></section></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: middle; width: 135.391px;\"><section powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; font-size: 15px;\"><section style=\"margin: 0px 0px -0.9em; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; overflow: hidden;\"><section style=\"margin: 0px 0px -0.5em 0.25em; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 1.76em; height: 0.5em; border-left: 1px solid rgb(245, 242, 242); border-right: 1px solid rgb(245, 242, 242); transform: skew(-45deg);\"></section><section style=\"margin: 0px 0px 0px 0.5em; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 1.8em; height: 1.8em; background-color: rgb(218, 219, 224);\"></section><section class=\"\" style=\"margin: -0.88em 0px 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 1.2em; height: 1.2em; line-height: 1.2em; background-color: rgb(245, 242, 242); color: rgb(97, 99, 104); font-size: 23px;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em;\">2</p></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; transform: rotate(-45deg);\"><section style=\"margin: 0.4em 0px 0px 2em; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; width: 0.68em; border-bottom: 1px solid rgb(245, 242, 242);\"></section></section></section></section></section><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; display: inline-block; vertical-align: middle; width: 101.547px; box-shadow: rgb(0, 0, 0) 0px 0px 0px;\"><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"><section style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; border-top: 1px dashed rgb(126, 127, 141);\"></section></section></section></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; background-color: rgb(255, 255, 255); text-align: center; font-size: 18px; letter-spacing: 2px; line-height: 1.8; color: rgb(62, 62, 62); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></strong><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">在至关重要的拉新与转化上</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">百度输了？</strong><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></strong></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif text-align:=\"\" justify background-color:=\"\" rgb font-size:=\"\" letter-spacing:=\"\" line-height:=\"\" color:=\"\" word-wrap:=\"\" break-word=\"\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(71, 61, 71); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">对于企业而言，“品牌主页”能带来流量曝光是远远不够的，其更加看重的，仍是拉新与转化。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">这一点，目前只有微信品牌官方区与支付宝品牌直达能够做到。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">事实上，BAT三家“品牌主页”看似差别不大，都可以在“品牌主页”内添加小程序等入口，但在拉新与转化上，百度则略逊一筹。原因是微信与支付宝“品牌主页”具备以下两个能力：</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">1.可在品牌主页内直接添加服务与商品</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">在微信与支付宝的“品牌主页”内，开发者能够配置其小程序的服务或商品。品牌在搜索结果页中就能直接触达用户，转化能力更强。用户点击服务或商品后，落地页都是品牌关联的小程序，比如，在NIKE的微信品牌官方区内，点击商品，进入的就是“Nike耐克”小程序的商品详情页。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095739akuhdn09akkmzeml.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095739akuhdn09akkmzeml.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(71, 61, 71); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">目前，微信品牌官方区最多可在搜索结果页展示4个服务与3个商品；而支付宝品牌直达，仅可添加1-2个小程序服务。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">2.品牌主页可与功能直达打通</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">在微信与支付宝“品牌主页”中，可与“功能直达”打通，也是其一项重要开放能力。（关于BAT三家功能直达，我们此前已有过测评对比，请<a href=\"http://mp.weixin.qq.com/s?__biz=MzA5MTAyNTA4NQ==&amp;mid=2650427164&amp;idx=1&amp;sn=367a16a9e961406017494b9c5d186218&amp;chksm=880c54cebf7bddd85d249c9410ec80000126dad7c5a9854603e5fa2fd45972d0d5062a1255a5&amp;scene=21#wechat_redirect\" target=\"_blank\" data-itemshowtype=\"0\" data-linktype=\"2\" hasload=\"1\" style=\"margin: 0px; padding: 0px; color: rgb(87, 107, 149); text-decoration-line: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">点击阅读</a>）</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">在微信搜一搜中，品牌官方区的服务和商品也会出现在相关搜索结果中，拥有更多曝光；同样，用户在支付宝搜索的关键词与某功能关键词匹配时，便会触发功能直达，小程序内的服务便可直接出现在结果页中。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095739nc9e6b6xvypa5eez.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095739nc9e6b6xvypa5eez.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(71, 61, 71); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">相比之下，百度不仅在搜索结果页没有服务入口，在品牌详情页内也不可添加小程序内某个服务，目前只能起到展示作用。</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p></section><section powered-by=\"xiumi.us\" style=\"margin: 0.5em 0px; padding: 0px 0.5em; max-width: 100%; box-sizing: border-box; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica=\"\" neue sc sans=\"\" gb yahei=\"\" ui arial sans-serif font-size:=\"\" letter-spacing:=\"\" background-color:=\"\" rgb text-align:=\"\" center word-wrap:=\"\" break-word=\"\"><p><a href=\"data/attachment/portal/201911/22/095739h325y55p2y50lv33.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/095739h325y55p2y50lv33.jpg\"></a></p></section><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px 16px; max-width: 100%; box-sizing: border-box; text-align: justify; background-color: rgb(255, 255, 255); font-size: 15px; letter-spacing: 2px; line-height: 1.8; color: rgb(71, 61, 71); font-family: Optima-Regular, PingFangTC-light; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">综上，无论是“品牌主页”样式，还是流量曝光，微信官方区都要更加完善；而支付宝与百度则处于刚刚起步的阶段，尤其是百度品牌名片，并没有将百度的搜索价值利用至最大化。</strong></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;\">那么，企业开发者们，BAT三家“品牌名片”，你们会怎么运营？欢迎留言哦~</span></p></section> </td>", "pub_time": "2019-11-22 00:12", "author": "Rolan"}
{"title": "从0到1开发一个小程序cli脚手架（三） --自定义命令 ", "content": "<td id=\"article_content\"> \n                     \n                    <blockquote><p><br></p><p>本文主要讲述关于如何实现自定义命令\r\ngithub地址：<a target=\"_blank\" href=\"https://github.com/jinxuanzheng01/xdk-cli\" rel=\"nofollow noopener noreferrer\">github.com/jinxuanzhen…</a>\r\n觉得有用的朋友帮忙给项目一个star，谢谢</p>\r\n</blockquote>\r\n<p><strong>系列内容，推荐从第一篇开始阅读：</strong><br><a target=\"_blank\" href=\"https://juejin.im/post/5d2ffb22e51d45777b1a3e6c\" rel=\"\">从0到1开发一个小程序cli脚手架（一）--创建页面/组件模版篇</a><br><a target=\"_blank\" href=\"https://juejin.im/post/5d479ae6f265da03d316a6b6\" rel=\"\">从0到1开发一个小程序cli脚手架（二） --版本发布/管理篇</a><br><a target=\"_blank\" href=\"https://www.yuque.com/jinxuanzheng/gvhmm5/xuf5yb\" rel=\"nofollow noopener noreferrer\">从0到1开发一个小程序cli脚手架（三） --自定义命令</a></p>\r\n<p><a name=\"cmlEH\"></a></p>\r\n<h1 class=\"heading\" data-id=\"heading-0\">背景</h1>\r\n<p>在写不同<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的时候，突然发现每个小程序面临的场景和需求或多或少会有些差异化，比如说程序A会有生成doc的功能，程序B会有开启数据埋点的debug模式等等</p>\r\n<p><strong>为了保证脚手架的通用性</strong>，我们并不能将这些差异化的功能一一实现，这时候就<strong>需要让用户实现自定义了</strong></p>\r\n<p><a name=\"MZbYJ\"></a></p>\r\n<h1 class=\"heading\" data-id=\"heading-1\">准备工作</h1>\r\n<p><strong>最好看过之前的两篇文章并搭建过demo，</strong><br>里面有介绍一些项目的结构，实现思路，第三方包使用相关的东西</p>\r\n<p><a name=\"sI05E\"></a></p>\r\n<h1 class=\"heading\" data-id=\"heading-2\">开始</h1>\r\n<p><a name=\"T9OAy\"></a></p>\r\n<h2 class=\"heading\" data-id=\"heading-3\">梳理大概流程</h2>\r\n<p>这里不多说了，老套路: <strong>config注册方法 -&gt; 脚手架路由读取注册方法 -&gt; 执行回调函数</strong></p>\r\n<p><a name=\"5wXiF\"></a></p>\r\n<h2 class=\"heading\" data-id=\"heading-4\">注册自定义命令</h2>\r\n<p>既然是给开发者在实际项目中进行配置，那么自然<strong>在配置文件 <code>xdk.config.js</code> 文件中动手</strong>了，在配置文件中预留出一个口子，方便我们读取配置文件时获取json，因为开发者<strong>可能会注册多个自定义命令</strong>，我这里<strong>字段类型直接给的数组类型</strong></p>\r\n<p></p><figure><p><a href=\"data/attachment/portal/201911/29/104418lkzaw7gwo8qh9woa.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/104418lkzaw7gwo8qh9woa.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<p>将字段<code>customScripts</code>配置好后，就开<strong>始配置自定义命令</strong>了，首先确定需要的属性</p>\r\n<ul>\r\n<li>[name], 命令名称肯定是要的</li>\r\n<li>[desc], 描述本质上可有可无，不影响功能，但是比较方便记忆</li>\r\n<li>[callback], 输入完命令之后要执行什么(回调函数主体)</li>\r\n</ul>\r\n<p></p><figure><p><a href=\"data/attachment/portal/201911/29/104418krnbqo6tto0n1wg7.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/104418krnbqo6tto0n1wg7.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<p>大概是这个样子，后续我会以生成sass文档为例来写一个自定义命令</p>\r\n<p><a name=\"67MED\"></a></p>\r\n<h2 class=\"heading\" data-id=\"heading-5\">读取配置项</h2>\r\n<p>回到<code>xdk-cli</code>这个项目，找到入口文件<code>index.js</code>，<br>如果看过前面两篇文章，会知道<strong>首先要配置路由</strong>，这里调用第三方包<code>commander</code>来解析命令</p>\r\n<p><a name=\"UEkwP\"></a></p>\r\n<h3 class=\"heading\" data-id=\"heading-6\">配置路由</h3>\r\n<p></p><figure><p><a href=\"data/attachment/portal/201911/29/104419egfrtoytyfofaj4y.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/104419egfrtoytyfofaj4y.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<p>这里先看第一行，我用了前缀 <code>run &lt;cmd&gt;</code> 来解析，也就是说我们使用的时候必须输入<code>xdk-cli run &lt;cmd&gt;</code>，那么为什么不直接<code>xdk-cli &lt;cmd&gt;</code>呢？</p>\r\n<p>主要是为扩展考虑，<strong>避免命名重复导致功能被覆盖</strong>，而且自定义指令本质上只是<code>xdk-cli</code>脚手架诸多功能中的一项，放在第一层级实在有些不合时宜</p>\r\n<p>有些情况下，不太清楚当前项目下的自定义命令都有哪些，可以直接<code>xdk-cli -h</code>查看<br></p><figure><p><a href=\"data/attachment/portal/201911/29/104418kklkr333lzkhfqgg.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/104418kklkr333lzkhfqgg.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<p><a name=\"bnB14\"></a></p>\r\n<h3 class=\"heading\" data-id=\"heading-7\">加装方法</h3>\r\n<p>通过run 命令我们可以准确到达当前的action，接下来要做什么？</p>\r\n<p>自然是<strong>执行自定义命令的回调</strong>，在执行之前我们可以给他<strong>加装一系列方法</strong>，更利于去二次开发，我这里采用的是改变this指向的方法，将当前函数作用于绑定到originPrototype上</p>\r\n<p></p><figure><img alt=\"image.png\" class=\"lazyload inited loaded\" data-src=\"https://user-gold-cdn.xitu.io/2019/11/27/16eaab8e2500cbcd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" data-width=\"559\" data-height=\"109\" src=\"https://user-gold-cdn.xitu.io/2019/11/27/16eaab8e2500cbcd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\"><figcaption></figcaption></figure><p></p>\r\n<p><a name=\"D7rhN\"></a></p>\r\n<h3 class=\"heading\" data-id=\"heading-8\">方法库列表</h3>\r\n<p>我这里道导出了封装好log的开启子进程方法，log方法，还有交互命令行方法，当然也可以导出更多，主要看自己的需求</p>\r\n<p></p><figure><img alt=\"image.png\" class=\"lazyload inited loaded\" data-src=\"https://user-gold-cdn.xitu.io/2019/11/27/16eaab8e18ac2ed0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" data-width=\"419\" data-height=\"320\" src=\"https://user-gold-cdn.xitu.io/2019/11/27/16eaab8e18ac2ed0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\"><figcaption></figcaption></figure><p></p>\r\n<p>到这里为止，这样一套流程就跑通了，下面我写一个小例子</p>\r\n<p><a name=\"JmPGE\"></a></p>\r\n<h1 class=\"heading\" data-id=\"heading-9\">案例：生成sass文档</h1>\r\n<p>可以看到我调用的子进程，和日志都是通过接口公开出来已经在脚手架进行过统一处理的方法，并没有去多做事情<br></p><figure><p><a href=\"data/attachment/portal/201911/29/105208glswxf2nnl61no1n.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/105208glswxf2nnl61no1n.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<p>当然你也可以使用交互命令，让自定义命令更加友好，例如：<br></p><figure><p><a href=\"data/attachment/portal/201911/29/105208f6vocohx2vuw02wb.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/105208f6vocohx2vuw02wb.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<p><a name=\"U2Z44\"></a></p>\r\n<h1 class=\"heading\" data-id=\"heading-10\">配合package.json</h1>\r\n<p>可以在package.json的scripts里注册命令，简化我们的调用<br></p><figure><p><a href=\"data/attachment/portal/201911/29/105208kvgo5bvec1v5tok5.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/105208kvgo5bvec1v5tok5.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<p>直接可以简写为<code>npm start</code></p>\r\n<p><a name=\"WisNS\"></a></p>\r\n<h1 class=\"heading\" data-id=\"heading-11\">最后</h1>\r\n<p>这篇比较简单，基本上只是针对回调方法做了包装与回传，<strong>目标是为了方便让开发者去定制一些功能</strong></p>\r\n<p>到此为止，三篇文章下来整个小程序开发脚手架的大概逻辑和框架已经非常清晰明了，后续的话有可能会针对npm支持, 和npm包的开发模板进行更新，觉得有帮助的同学可以关注下~~<br></p> </td>", "pub_time": "2019-11-29 00:52", "author": "Rolan"}
{"title": "解决小程序渲染复杂长列表，内存不足问题 ", "content": "<td id=\"article_content\"> \n                     \n                    <div><blockquote><p><strong>问题回顾</strong>：我们有一个列表展示页，是无限瀑布流式的，展示的元素我们封装成了单个组件，暂且叫它<code>Item组件</code>。这个瀑布流包含若干个Item组件，并且这个Item组件也比较复杂，包含各种展示样式（根据不同类型，大概有9种吧，反正渲染节点很多），在进行滑动的过程中，item大概加载30-40个以后，就会造成<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>内存不足而退出，蓝瘦香菇......<strong>【干货在最后，小程序代码片段奉上】</strong></p>\r\n</blockquote>\r\n<h3 class=\"heading\" data-id=\"heading-0\">解决思路：</h3>\r\n<p>将超出屏幕一定部分的列表内的组件进行不渲染的处理（也就是用wx:if卸载掉组件），当到达渲染临界点时再开始渲染；保证每次少量的数据展示。</p>\r\n<blockquote>\r\n<p>我们的项目中是保持15条Item，我们是每次分页请求5条，按照前5条，中间5条和后5条来划分，如果不在这个范围，则用一个等高度的骨架代替，并且卸载这些组件</p>\r\n</blockquote>\r\n<h3 class=\"heading\" data-id=\"heading-1\">初期实现方式（后面有更优化的方式）</h3>\r\n<p>使用<a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/api/wxml/IntersectionObserver.html\" rel=\"nofollow noopener noreferrer\">曝光监听</a>，当一个Item曝光时，记录Item高度，并放到数组里面，作为骨架的填充高度，如果已经记录了高度，则不再重复记录；曝光时向外传递一个当前渲染范围的中心值（比如当前Item所属页码，或者当前Item索引），以此进行处理；</p>\r\n<blockquote>\r\n<p><em>这里有一点要注意，如果你的列表item组件比较复杂，需要在ready的时候将记录的高度设置为item最小高度，不然组件重新装载时会有一定的渲染时间，在临界点会造成跳屏</em>【此处已经通过骨架组件解决，可以忽略，只是作为踩坑记录】</p>\r\n</blockquote>\r\n<h3 class=\"heading\" data-id=\"heading-2\">此时优化点</h3>\r\n<ul>\r\n<li>为避免频繁setData和渲染，做了防抖函数，时间是600ms</li>\r\n</ul>\r\n<h3 class=\"heading\" data-id=\"heading-3\">此时缺点</h3>\r\n<ul>\r\n<li>滑动特别快时，会出现白屏，是因为曝光监听是在组件里面，而超快速滚动时，组件没有装载进来，也无法进行曝光监听，所以无法触发，这里考虑用<strong>骨架组件</strong>进行二次监听曝光</li>\r\n</ul>\r\n<h3 class=\"heading\" data-id=\"heading-4\">优化迭代</h3>\r\n<ul>\r\n<li>将骨架组件作为外壳套在Item外面（用<code>slot</code>），并对骨架进行监听曝光，可以解决上面缺点</li>\r\n<li>给骨架组件做一个常规骨架屏样式，而不是纯白色，看起来更优雅</li>\r\n</ul>\r\n<h3 class=\"heading\" data-id=\"heading-5\">继续发现问题</h3>\r\n<p>经过一系列的实践，上面的方案有些问题，其中最麻烦的就是，需要对外传递一个当前index，然后控制前后数据展示；这里对于每个用到<code>skeleton</code>组件的页面来说，都要重复的写一个方法来承接这个index，然后渲染页面对应的数据。</p>\r\n<h3 class=\"heading\" data-id=\"heading-6\">优化</h3>\r\n<p>依然是监听<code>skeleton</code>曝光，这里监听的方案变为出现在屏幕上下<code>n</code>屏的内容块进行展示，此范围外的内容块就卸载掉。</p>\r\n<p>如图所示\r\n</p><figure><p><a href=\"data/attachment/portal/201912/09/100519l0cccs0h4ces9tfq.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/09/100519l0cccs0h4ces9tfq.jpg\"></a></p><figcaption></figcaption></figure><figure><br></figure><p></p>\r\n<h3 class=\"heading\" data-id=\"heading-7\">核心代码</h3>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">     // 修改了监听是否显示内容的方法，改为前后showNum屏高度渲染\r\n     // 监听进入屏幕的范围relativeToViewport({top: xxx, bottom: xxx})\r\n      <span class=\"hljs-built_in\">let</span> info = SystemInfo.getInfo() //获取系统信息\r\n      <span class=\"hljs-built_in\">let</span> { windowHeight = 667 } = info.source.system\r\n      <span class=\"hljs-built_in\">let</span> showNum = 2 //超过屏幕的数量，目前这个设置是上下2屏\r\n      <span class=\"hljs-built_in\">let</span> listItemContainer = this.createIntersectionObserver()\r\n      listItemContainer.relativeToViewport({ top: showNum * windowHeight, bottom: showNum * windowHeight })\r\n        .observe(`<span class=\"hljs-comment\">#list-item-${this.data.skeletonId}`, (res) =&gt; {</span>\r\n        \t// 此处来控制slot展示，详见代码片段\r\n        })\r\n       \r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><h3 class=\"heading\" data-id=\"heading-8\">干货</h3>\r\n<p>话不多说，干货放后面，<a target=\"_blank\" href=\"https://developers.weixin.qq.com/s/GkaFgomR7bdW\" rel=\"nofollow noopener noreferrer\">点击获取代码片段</a></p>\r\n<h3 class=\"heading\" data-id=\"heading-9\">最后，还是尽量减少节点数，优化代码</h3></div> </td>", "pub_time": "2019-12-9 00:12", "author": "Rolan"}
{"title": "小程序 找不到可构建的npm包-解决方法 ", "content": "<td id=\"article_content\"> \n                     \n                    <h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>问题复现：</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>在项目根目录执行</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>npm init -y # 初始化npm</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最近在学习7yue老师的koa课，使用到npm包，出现这个问题，目录结构如下</p><p><a href=\"data/attachment/portal/201912/23/112407arcr6bb8dpf8r0ml.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/112407arcr6bb8dpf8r0ml.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>工具 -&gt; 构建 npm -&gt; '没有找到可以构建的 NPM 包'</p><p><a href=\"data/attachment/portal/201912/23/112425u606eqhqx4qqq6eo.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/112425u606eqhqx4qqq6eo.png\"></a></p><p><a href=\"data/attachment/portal/201912/23/112407yblpbd8it9tsgei9.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/112407yblpbd8it9tsgei9.png\"></a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>查看文档</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>查阅npm 支持| 微信开放文档)有如下说明</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>此处并没有强制要求 node_modules 必须在<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>根目录下（即 project.config.js 中的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>miniprogramRoot</code> 字段），也可以存在于小程序根目录下的各个子目录中。但是不允许 node_modules 在小程序根目录外。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>所以： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>npm包应放在小程序根目录下</code> ，而我搞混了小程序目录和项目根目录</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序根目录(为 /project.config.json 中 miniprogramRoot字段指定)</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>项目根目录(为 / )是两个不同位置</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>原来是我的node-models放错了地方，正确位置应该是**miniprogram**文件夹下</code></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>问题解决</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>cd miniprogram</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>npm init -y</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>npm install lin-ui --production</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>工具 -&gt; 构建 npm</p><p><a href=\"data/attachment/portal/201912/23/112407zwb1y2wcxx3b232o.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/112407zwb1y2wcxx3b232o.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>目录如下，出现了miniprogram_npm</p><p><a href=\"data/attachment/portal/201912/23/112408ollg6ulpfp3fspq6.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/112408ollg6ulpfp3fspq6.png\"></a></p> </td>", "pub_time": "2019-12-23 00:52", "author": "Rolan"}
{"title": "微信小程序长按保存图片 ", "content": "<td id=\"article_content\"> \n                     \n                    <ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">微信浏览器打开h5页面如果是img标签的话，长按会弹出保存图片的选项。但是微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>里面不可以，需要自己写这个功能。</li><li style=\"box-sizing: border-box;\">这个功能有两个点，一个是长按，一个是保存图片到本地。</li></ul><h3 id=\"item-1\" style='box-sizing: border-box; margin: 2.25rem 0px 1rem; line-height: 1.2; font-size: 1.5rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>1. 微信小程序关于图片长按的解释，有两种：</h3><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span></p><p><a href=\"data/attachment/portal/202001/02/094551un0x0prhrxh0bjf6.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/094551un0x0prhrxh0bjf6.png\"></a></p><h4 style='box-sizing: border-box; margin: 2rem 0px 1rem; line-height: 1.2; font-size: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>因此我们选用 bindlongpress 事件</h4><h3 id=\"item-2\" style='box-sizing: border-box; margin: 2.25rem 0px 1rem; line-height: 1.2; font-size: 1.5rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>2. 微信小程序同样提供了保存图片的接口，是wx.saveImageToPhotosAlbum()</h3><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span></p><p><a href=\"data/attachment/portal/202001/02/094551g6z5s56257hnz57e.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/094551g6z5s56257hnz57e.png\"></a></p><h3 id=\"item-3\" style='box-sizing: border-box; margin: 2.25rem 0px 1rem; line-height: 1.2; font-size: 1.5rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>3. 值得说的是，保存的接口，两个需要注意的地方：</h3><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>1、需要先授权，调用 wx.getSetting()方法<br style=\"box-sizing: border-box;\"></p><p><a href=\"data/attachment/portal/202001/02/094551jc5sq21ikt2m2k1i.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/094551jc5sq21ikt2m2k1i.png\"></a></p><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span><br style=\"box-sizing: border-box;\">2、保存的图片路径参数，不支持网络路径，而在我们渲染页面时，用到的图片有很大可能是网络路径，这时候我们需要先把网络路径转为可用的本地路径，wx.getImageInfo()方法可以满足需要</p><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span></p><p><a href=\"data/attachment/portal/202001/02/094550n3an3bahegt8o9hl.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/094550n3an3bahegt8o9hl.png\"></a></p><h3 id=\"item-4\" style='box-sizing: border-box; margin: 2.25rem 0px 1rem; line-height: 1.2; font-size: 1.5rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>4. 最后再走个心吧，毕竟我这么可爱</h3><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>1、长按后直接保存未免潦草了些，考虑到用户体验，加入 wx.showActionSheet()<br style=\"box-sizing: border-box;\">2、如果用户拒绝授权 或者 以前拒绝过授权，这时候也应该给他提示，或者展示再次打开授权的入口<br style=\"box-sizing: border-box;\"><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span></p><p><a href=\"data/attachment/portal/202001/02/094551jc5sq21ikt2m2k1i.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/094551jc5sq21ikt2m2k1i.png\"></a></p><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>将将！然后就可以开始写代码了：</p><pre class=\"hljs django\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-wrap: break-word; word-break: break-word; overflow-wrap: normal; white-space: initial;'><span class=\"xml\" style=\"box-sizing: border-box;\"><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: navy;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">image</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: teal;\">src</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"box-sizing: border-box; color: teal;\">{{url}}</span><span class=\"xml\" style=\"box-sizing: border-box;\"><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: navy;\"><span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: teal;\">data-url</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"box-sizing: border-box; color: teal;\">{{url}}</span><span class=\"xml\" style=\"box-sizing: border-box;\"><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: navy;\"><span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: teal;\">bindlongpress</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"saveImage\"</span>&gt;</span><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: navy;\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">image</span>&gt;</span></span></code></pre><pre class=\"hljs coffeescript\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-wrap: break-word; word-break: normal; overflow-wrap: normal; white-space: inherit;'><span class=\"hljs-regexp\" style=\"box-sizing: border-box; color: rgb(0, 153, 38);\">//</span> 长按保存功能--授权部分\r\nsaveImage (e) {\r\n    let _this = <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">this</span>\r\n    wx.showActionSheet({\r\n        itemList: [<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'保存到相册'</span>],\r\n        success(res) {\r\n            let url = e.currentTarget.dataset.url;\r\n            wx.getSetting({\r\n                success: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(res)</span> =&gt;</span> {\r\n                    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">if</span> (!res.authSetting[<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'scope.writePhotosAlbum'</span>]) {\r\n                        wx.authorize({\r\n                            scope: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'scope.writePhotosAlbum'</span>,\r\n                            success: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-params\" style=\"box-sizing: border-box;\">()</span> =&gt;</span> {\r\n                                <span class=\"hljs-regexp\" style=\"box-sizing: border-box; color: rgb(0, 153, 38);\">//</span> 同意授权\r\n                                _this.saveImgInner(url);\r\n                            },\r\n                            fail: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(res)</span> =&gt;</span> {\r\n                                <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(res);\r\n                                wx.showModal({\r\n                                    title: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'保存失败'</span>,\r\n                                    content: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'请开启访问手机相册权限'</span>,\r\n                                    success(res) {\r\n                                        wx.openSetting()\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n                    } <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">else</span> {\r\n                        <span class=\"hljs-regexp\" style=\"box-sizing: border-box; color: rgb(0, 153, 38);\">//</span> 已经授权了\r\n                        _this.saveImgInner(url);\r\n                    }\r\n                },\r\n                fail: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(res)</span> =&gt;</span> {\r\n                    <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(res);\r\n                }\r\n            })   \r\n        },\r\n        fail(res) {\r\n            <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(res.errMsg)\r\n        }\r\n    })\r\n},\r\n<span class=\"hljs-regexp\" style=\"box-sizing: border-box; color: rgb(0, 153, 38);\">//</span> 长按保存功能--保存部分\r\nsaveImgInner (url) {\r\n    wx.getImageInfo({\r\n        src: url,\r\n        success: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(res)</span> =&gt;</span> {\r\n            let path = res.path;\r\n            wx.saveImageToPhotosAlbum({\r\n                filePath: path,\r\n                success: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(res)</span> =&gt;</span> {\r\n                    <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(res);\r\n                    wx.showToast({\r\n                        title: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'已保存到相册'</span>,\r\n                    })\r\n                },\r\n                fail: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(res)</span> =&gt;</span> {\r\n                    <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(res);\r\n                }\r\n            })\r\n        },\r\n        fail: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(res)</span> =&gt;</span> {\r\n            <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(res);\r\n        }\r\n    })\r\n},</code></pre><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>文章写的比较正序，参考的是这篇倒序文章，喜欢倒序的筒子们可以去看下这篇： <a href=\"https://www.jianshu.com/p/e592e9b28192\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">https://www.jianshu.com/p/e59...</a><br style=\"box-sizing: border-box;\">（虽然很痛恨没有视频效果的文章，可是录好了视频的我 实在找不到上传视频的按钮！我好难！！！）</p> </td>", "pub_time": "2020-1-2 00:43", "author": "Rolan"}
{"title": "小程序wifi能力解读与实践 ", "content": "<td id=\"article_content\"> \n                     \n                    <div><h2 class=\"heading\" data-id=\"heading-0\">背景</h2>\r\n<p><a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>wifi系列接口为系统原生能力。早在2015年，微信就推出了「微信连Wi-Fi」，微信连Wi-Fi是为商家的线下场所提供一套完整和便捷的微信连Wi-Fi的方案。现在已经是一套完整的，便捷的解决方案。顾客通过扫码的方式连接wifi，同时微信还可以向用户下发消息。方案在官方文档已经阐述得很详细，本文就不再赘述。本文重点在于讲解小程序中使用wifi能力遇到的问题和心得。</p>\r\n<p><a target=\"_blank\" href=\"https://developers.weixin.qq.com/doc/offiaccount/WiFi_via_WeChat/Developer_guide.html\" rel=\"nofollow noopener noreferrer\">【微信连wifi】传送门</a></p>\r\n<h2 class=\"heading\" data-id=\"heading-1\">wifi能力解读</h2>\r\n<h3 class=\"heading\" data-id=\"heading-2\">wifi能力简介</h3>\r\n<p>在小程序中，使用wifi模块都需要先调用<code>wx.startWifi()</code>来初始化wifi模块。以下能力的使用均需要在<code>wx.startWifi</code>的<code>success</code>回调中使用。</p>\r\n<h4 class=\"heading\" data-id=\"heading-3\">连接wifi</h4>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">wx.connectWifi({\r\n    SSID: <span class=\"hljs-string\">'mx 的iphone'</span>, // Wi-Fi 设备 SSID\r\n    BSSID: <span class=\"hljs-string\">''</span>, // Wi-Fi 设备 BSSID\r\n    password: <span class=\"hljs-string\">'xxxxxxxx'</span>,\r\n    <span class=\"hljs-function\"><span class=\"hljs-title\">success</span></span>(){},\r\n    <span class=\"hljs-function\"><span class=\"hljs-title\">fail</span></span>(){},\r\n    <span class=\"hljs-function\"><span class=\"hljs-title\">complete</span></span>(){}\r\n})\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p><code>connectWifi</code>为我们提供了直连wifi的能力， 仅 Android 与 iOS 11 以上版本支持，需要基础库1.6.0以上。这个一般是我们使用wifi功能的核心API了。在ios中，会出现系统弹框，询问用户是否要连接wifi，只有用户点击确定，<code>connectWifi</code>才会继续进行，否则就走fail回调了。在安卓（以小米note3为例，Anroid9）中则会出现<code>微信连一连</code>的toast。</p>\r\n<h4 class=\"heading\" data-id=\"heading-4\">获取当前已经连接的wifi</h4>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">wx.getConnectedWifi({\r\n    success(WifiInfo){\r\n        // WifiInfo\r\n    }\r\n})\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>从社区中获取的信息得知：<code>signalStrength</code>表示信号强度，iOS 是系统返回的，取值 0-1，安卓经过转换，取值 0-100。数值与信号强度为正比例关系。</p>\r\n<h4 class=\"heading\" data-id=\"heading-5\">获取wifi列表</h4>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">wx.getWifiList({\r\n    success(e) {\r\n        wx.onGetWifiList((res) {\r\n            // res.wifiList:wifiInfo[]\r\n        })\r\n    }\r\n})\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>获取周围的wifi列表，需要先使用<code>getWifiList</code>后使用<code>onGetWifiList</code>进行监听。<strong>在ios中，getWifiList会跳到ios系统界面</strong>，这是由于ios系统的限制， 目前是无法避免的（其实这么做也无可厚非，wifi信息本来就是敏感的，但是对用户体验有一定的影响）。<strong>在安卓中，getWifiList需要获取用户的位置信息</strong>，因为可以利用小程序嗅探周边Wi-Fi热点来推断用户所在的位置信息。为了确保用户的隐私不受侵犯，自微信android客户端 7.0.4 起，需要先获取用户地理位置（scope.userLocation）。详情请见<a target=\"_blank\" href=\"https://developers.weixin.qq.com/community/develop/doc/0002ec7dc6cd5894957808bd854c01\" rel=\"nofollow noopener noreferrer\">wx.getWifiList接口需获取用户位置信息授权后使用</a></p>\r\n<h4 class=\"heading\" data-id=\"heading-6\">设置AP相关信息</h4>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">wx.onGetWifiList(<span class=\"hljs-keyword\">function</span>(res) {\r\n    wx.setWifiList({\r\n      wifiList: [{\r\n        SSID: res.wifiList[0].SSID,\r\n        BSSID: res.wifiList[0].BSSID,\r\n        password: <span class=\"hljs-string\">'123456'</span>\r\n      }]\r\n    })\r\n})\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><figure><p><a href=\"data/attachment/portal/202001/03/102939ep303ch3q4tcyzqe.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/03/102939ep303ch3q4tcyzqe.jpg\"></a></p><figcaption></figcaption></figure>\r\n这个接口也挺牛逼，ios特有的。通过设置wifiList，我们在系统页可以直接看到已设置的wifi列表，点了就直接连上了。<p></p>\r\n<h4 class=\"heading\" data-id=\"heading-7\">其他</h4>\r\n<ul>\r\n<li><code>wx.stopWifi</code> 关闭wifi模块</li>\r\n<li><code>wx.onWifiConnected(function callback)</code>监听连接上 Wi-Fi 的事件</li>\r\n<li><code>wx.offWifiConnected</code> 取消监听连接上 Wi-Fi 的事件</li>\r\n<li><code>wx.offGetWifiList(function callback)</code> 取消监听获取到 Wi-Fi 列表数据事件。</li>\r\n</ul>\r\n<h3 class=\"heading\" data-id=\"heading-8\">安卓连接wifi</h3>\r\n<p>连接指定 Wi-Fi 接口调用时序：</p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">Android：startWifi —&gt; connectWifi —&gt; onWifiConnected\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>连周边 Wi-Fi 接口调用时序：</p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">Android：startWifi —&gt; getWifiList —&gt; onGetWifiList —&gt; connectWifi —&gt; onWifiConnected\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><h3 class=\"heading\" data-id=\"heading-9\">IOS连接wifi</h3>\r\n<p>连接指定 Wi-Fi 接口调用时序：(与安卓一致)</p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">iOS（仅iOS 11及以上版本支持）：startWifi —&gt; connectWifi —&gt; onWifiConnected\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>连周边 Wi-Fi 接口调用时序：</p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">iOS（iOS 11.0及11.1版本因系统原因暂不支持）：\r\nstartWifi —&gt; getWifiList —&gt; onGetWifiList —&gt; <span class=\"hljs-built_in\">set</span>WifiList —&gt; onWifiConnected\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><h2 class=\"heading\" data-id=\"heading-10\">实践</h2>\r\n<p>笔者在项目中接触到了使用小程序提供的硬件（wifi）能力的场景。利用wifi与socket的能力，我们可以为物联网设备连接wifi。流程如下:</p>\r\n<p></p><figure><p><a href=\"data/attachment/portal/202001/03/102935pcyg8vhcq0tjiyv9.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/03/102935pcyg8vhcq0tjiyv9.jpg\"></a></p><figcaption></figcaption></figure>\r\n刚好在开发者社区找到类似的代码片段：<p></p>\r\n<ul>\r\n<li><a target=\"_blank\" href=\"https://developers.weixin.qq.com/s/tTwof3mJ7Lef\" rel=\"nofollow noopener noreferrer\">小程序跟设备数据传输(websocket);</a></li>\r\n<li><a target=\"_blank\" href=\"https://developers.weixin.qq.com/s/Y1xSo3mF78et\" rel=\"nofollow noopener noreferrer\">小程序跟设备数据传输(udpsocket);</a></li>\r\n</ul>\r\n<blockquote>\r\n<p>wx.request/wx.connectSocket/wx.uploadFile/wx.downloadFile 的 url 参数允许为 <img alt=\"{IP}:\" class=\"equation\" src=\"https://juejin.im/equation?tex=%7BIP%7D%3A\">{PORT}/${PATH} 的格式，当且仅当 IP 与手机 IP 处在同一网段且不与本机 IP 相同（一般来说，就是同一局域网，如连接在同一个 wifi 下）时，请求/连接才会成功。\r\n在这种情况下，不会进行安全域的校验，不要求必须使用 https/wss，也可以使用 http/ws。</p>\r\n</blockquote>\r\n<p>局域网通信中，不会进行安全域校验，因此，无需在mp后台添加安全域域名。</p>\r\n<h2 class=\"heading\" data-id=\"heading-11\">总结</h2>\r\n<p>借助小程序提供的硬件能力(wifi,蓝牙，NFC)，小程序有了更加广阔的场景。比如【摩拜单车】小程序，有的车需要用户开一下蓝牙，小程序提供的操作原生系统的蓝牙功能便为我们赋能。通过小程序，我们也可以实现与物联网设备通信，通过连接设备热点，利用http/wss/udp传输数据。当然，现在wifi能力还是存在着问题，比如兼容问题，可能有部分安卓手机在连接时会莫名其妙的报错。此时需要对着官方提供的errcode查看具体的原因。</p>\r\n<h2 class=\"heading\" data-id=\"heading-12\">踩过的坑</h2>\r\n<ol>\r\n<li>安卓部分机型，已经连接wifi，使用<code>connectWifi</code>重新连接，即使传错密码，还是能连上。<br>\r\nA：这个问题目前还没有解决的办法。</li>\r\n<li>ios在<code>getWifiList</code>会跳到系统设置页，在<code>connectWifi</code>会出现modal确认是否连接。<br>\r\nA：无法避免。ios系统的限制</li>\r\n<li>调试wifi功能时，无法在开发者工具中调试wifi能力。<br>\r\nA: 目前开发者工具无法进行模拟。并且真机调试时，连接设备热点后会报错。（毕竟真机调试时需要能够访问网络，一般设备热点都不具备访问网络的能力）。目前可以通过 <strong>预览+ vconsole</strong>解决，还是比较麻烦。</li>\r\n<li>可以主动断开wifi吗？<br>\r\nA: 从文档上看，没有提供这个能力。但是可以尝试连接一个不存在的wifi。</li>\r\n<li>来自文档的注意事项：</li>\r\n</ol>\r\n<p></p><figure><p><a href=\"data/attachment/portal/202001/03/102935egmgkfzwwzmfkfwo.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/03/102935egmgkfzwwzmfkfwo.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<h2 class=\"heading\" data-id=\"heading-13\">Reference</h2>\r\n<ul>\r\n<li><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/device/wifi.html\" rel=\"nofollow noopener noreferrer\">微信开放文档 - wifi</a></li>\r\n<li><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/ability/mDNS.html\" rel=\"nofollow noopener noreferrer\">微信开放文档 - 局域网通信</a></li>\r\n<li><a target=\"_blank\" href=\"https://developers.weixin.qq.com/community/develop/article/doc/000c2a5e294e4816df88b278a5d813\" rel=\"nofollow noopener noreferrer\">小程序WIFI接口和WebSocket创建局域网数据通讯</a></li></ul></div> </td>", "pub_time": "2020-1-3 00:28", "author": "Rolan"}
{"title": "探索小程序实现 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>随着<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的发展与功能的逐步完善，越来越多的产品需要小程序与 APP 的功能能有一些共性，社区跨平台的解决方案越来越多，比如 taro 等为代表的把一套代码编译成多端运行的机制，本文会使用 Swift 作为原生语言，在 iOS 应用上运行一个小程序 Demo， 使用 Android &amp;&amp; React Native 也可以采用同样的思路实现。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>相关代码仓库： <a href=\"https://github.com/taixw2/rmini\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://github.com/taixw2/rmini</a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>编译层</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>编译的目的是为了抹平小程序的与 H5 的差异，利用 Vue 实现数据绑定，利用 Web Component 实现小程序的组件功能。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>从官网文档中可以看出来，运行一个小程序需要框架（数据绑定渲染）、组件（小程序渲染单元）、api（与原始交互的能力）。</p><p><a href=\"data/attachment/portal/202001/06/103005h1meifootyzmtjew.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103005h1meifootyzmtjew.jpg\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>框架实现</h2><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>转换成单页应用（一种可行的方案）</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>把所有页面打包成一个 js， 再由 js 管理所有的路由和状态，这种方案适合在 web 端运行，并且是单引擎的方案，在模拟原生的右滑返回等效果也会不尽人意。</p><p><a href=\"data/attachment/portal/202001/06/103008nyaiolybnonzpza0.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103008nyaiolybnonzpza0.jpg\"></a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>转换成多页面</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>众所周知，小程序是一个双引擎的框架，上面的方案显然不能达到要求, 双引擎的特点是在运行 javascript 的黑盒子中，无法访问到 DOM &amp;&amp; BOM 等。将所有的逻辑代码在原生的 JavascriptCore 中运行，WebView 中的 Javascript 引擎负责数据绑定，需要解决的难点是 JavascriptCore 中的 setData 怎么通知 WebView 渲染， WebView 的事件怎么执行 JavascriptCore，接着往下看。</p><p><a href=\"data/attachment/portal/202001/06/103004jzz2zjko5psr8o77.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103004jzz2zjko5psr8o77.jpg\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>抹平WXML</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>wxml 是一种类 html 标记语言，他负责所有的渲染规则，包括条件渲染、列表渲染、数据绑定等，与其再实现一种框架，还不如直接利用 Vue 实现同样的功能，再利用各种转换库将 wxml 中的事件转换成 Vue 能够识别的事件，如利用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>post-html</code> 可以做到如下的转换:</p><p><a href=\"data/attachment/portal/202001/06/103006gbkzs0g9djtuxik5.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103006gbkzs0g9djtuxik5.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>每一个事件绑定的方法全都在原生的 JSContext 中运行，所以此时的事件只需要传递给 JSContext 的作用。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>抹平WXSS</h2><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">wxss 作为小程序的样式语言，其余 css 的主要区别就是多了一个 rpx 单位，以下是官网的换算表：</p><p><a href=\"data/attachment/portal/202001/06/103004eovmmeydkapa3qar.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103004eovmmeydkapa3qar.jpg\"></a></p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">根据上表可得知， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>rpx = (750 / 屏幕宽度) * px</code> ;</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">在传统的移动端页面，我们的高清方案，一般需要获取 dpr， 然后修改动态修改 viewport 和 html 上的 font-size，但是小程序的代码因为是放在了设备本地，所以可以在下载小程序页面之后，我们还有一次编译机会，这时就可以把 rpx 根据当前设备的屏幕宽度替换成对应的 px。</p></div><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>还有一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>@import</code> ，则利用 scss 或 less 就可以合并到同一个 css 文件中,</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>而全局样式则可以在构建 WXML 的时候再植入进入</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>抹平组件</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>组件具有独特的功能和自己的渲染规则，比如 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scroll-view</code> 具有 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scroll-x</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scroll-y</code> 等属性控制滚动条。在 HTML5 中有一个重大的功能 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>web-component</code> ，它能够自定义 html 元素，并且能够监控属性的变化，非常适合实现小程序组件。如：（使用了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>lit-element</code> 框架）</p><p><a href=\"data/attachment/portal/202001/06/103006prlqgfk6bujushe1.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103006prlqgfk6bujushe1.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里用了 lit-element 这个框架，能够简化一些操作。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>抹平 Page 和 App</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>App 负责整个应用的生命周期以及存一些全局的数据， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getApp</code> 能获取到 app 的信息。 所以类似的结构可能是这样的：</p><p><a href=\"data/attachment/portal/202001/06/103006wwlw4rnw4yckbnbs.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103006wwlw4rnw4yckbnbs.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getApp</code> 能够直接访问到内部对象，并且在最顶层声明，这样每一个的地方都能访问到 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getApp</code>。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>初始化一个页面都需要是实例化 PageClass, 即使再次进入（不是返回到这个页面）这个页面页需要再次重新实例化，每次实例化都需要关联一个 webviewId, 这个 ID 与原始的 webview 关联，这样每个 PageClass 中的 setData 都能找到对应的 webview 进行再次渲染，所以对应的代码可能是这样的：</p><p><a href=\"data/attachment/portal/202001/06/103005av1lndgd4zl2g1d8.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103005av1lndgd4zl2g1d8.jpg\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>抹平 API</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过 API 能够直接调用原生的功能，比如 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.request</code> ， 如果直接在 webview 中的 JSContext 中运行的话，则可能存在跨域，但是放在原生就不会存在这个问题。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实现JSContext 调用原生代码的功能，需要给 JSContext 中植入一个 JSBridge，如： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>JSBridge.invoke</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>JSBridge.on</code> , invoke 负责同步任务，on 负责异步任务，原生再利用反射（原生的反射真麻烦）调用对应的原生方法，原生可以利用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>while(true)</code> 挂起 JSContext，既可以达到同步和异步的方法。</p><p><a href=\"data/attachment/portal/202001/06/103005da1aahfbqq1qb4q4.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103005da1aahfbqq1qb4q4.jpg\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>打包 Javascript</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>Javascript 代码打包后被放在 JavascriptCore 中运行，唯一与 Webview 中的 JSContext 打交道的只有 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>setData</code> , 先看一下打包流程：</p><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">利用 App.json 构建入口文件</li><li style=\"line-height: 1.7em;\">利用 rollup 等工具将所有 Javascript 打包成一个文件（目前没有分包）</li></ol><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>打包流程及其简单，接下来看一下两个 Javascript 引擎的交互过程。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>打通 JSContext 到 WebView JavascriptCore</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>每次进入一个页面的时候都需要为这个页面的 webview 分配一个 id, 这个 id 至关重要，作为 native 与 JSContext (原生运行 javascript 的上下文对象) 与 webview 交互的唯一标识，JSContext 中需要实例化一个新的 PageClass 关联这个 id， native 中通过 id 保留 webview 的引用。在 JSContext 中植入一个 JSBridge 用于与原生交互，如： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>JSBridge.setData(webviewId, appId, data)</code>, 当 JSBridge 的 setData 被调用后，通过 appId + webviewId 就能找到对应的 webview, 再将 setData 传入 webview 中，在 Vue 接收到 data 后进行渲染， 整个过程如图：</p><p><a href=\"data/attachment/portal/202001/06/103006p2xm7wbl2p22lm92.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103006p2xm7wbl2p22lm92.jpg\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>打通 Webview JavascriptCore 到 JSContext</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>有了前面的铺垫，接下来再看 webview 如何调用 JSContext 的方法， Webview 唯一能与 JSContext 交互的方式只有事件，事件触发后，需要通过某种方式触发 JSContext 中的方法，最后调用 setData 再返回来重新渲染 webview。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>webview 中绑定的方法名众多，如： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>bindtap=\"a\", bindtap=\"b\", bindtap=\"c\"</code> 等，但是可以通过 “抹平 WXML” 的时候最终只保留一个出口，如:</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>v-on:click=\"callClick('a', $event)\"</code> 等，这样 vue 中的 method 只需要实现对应的几个事件便可：</p><p><a href=\"data/attachment/portal/202001/06/103006potva6om3wgptgq3.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/06/103006potva6om3wgptgq3.jpg\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>结尾</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>利用原生作为桥梁，在两个引擎之间通信，webview 中的 JSContext 负责接收渲染通知，以及发送事件到 Native 的 JSContext 中，JSContext 独立运行，所以既访问不到 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>window</code> 对象，也访问不到 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>document</code> 对象。</p> </td>", "pub_time": "2020-1-6 00:15", "author": "Rolan"}
{"title": "微信小程序 接入 腾讯云验证码 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>前言：最近做了一个<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>抽奖的活动，出现了部分用户恶意薅羊毛的现象，因此考虑接入腾讯云的验证码。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其实腾讯的官方文档写的相当清晰： <a href=\"https://cloud.tencent.com/document/product/1110/36844\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://cloud.tencent.com/doc...</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>不想啃文档的筒子们的就往下继续看吧~（虽然大同小异）</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>整体效果</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1、小程序触发验证，跳转到验证码小程序</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2、在验证码小程序内通过验证，并携带参数跳回原来的小程序</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>3、在原来的小程序内，监测携带回的参数，并作后续操作</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>前提条件</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>验证码接入前，需要先在 <a href=\"https://console.cloud.tencent.com/captcha\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">验证码控制台</a> 中注册 AppID 和 AppSecret，注册完成后，您可以在控制台的 <a href=\"https://console.cloud.tencent.com/captcha/detail?appid=2043913615\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">基础配置</a> 中查看 AppID (下文extraData中使用) 以及 AppSecret。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>注意，这里的 appId 和 appSecret 和小程序后台的是不一致的！</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>接入步骤</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1、在你需要的地方，唤起验证码小程序</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先在 app.json 配置 navigateToMiniProgramAppIdList，如下：</p><pre class=\"prettyprint hljs json\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n  <span class=\"hljs-attr\">\"navigateToMiniProgramAppIdList\"</span>: [<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"wx5a3a7366fd07e119\"</span>]\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这个appId是官方文档中直接提供的，搬上去就好。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>假设你的唤起方式是通过一个这样的按钮事件：</p><pre class=\"hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"toTCaptcha\"</span>&gt;</span>验证<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span></pre><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">toTCaptcha</span>: function () {\r\n    wx.navigateToMiniProgram({\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">appId</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx5a3a7366fd07e119'</span>,\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">path</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/pages/captcha/index'</span>,\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">extraData</span>: {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">appId</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'appId'</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//您申请的验证码的 appId</span>\r\n      }\r\n    })\r\n  }</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2、在 app.js 获取验证结果</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于小程序间相互跳转过程中产生的数据仅能在 app.js 中获取到，故需要在 app.js 的 onShow 中添加以下代码，来捕获验证结果 captchaResult</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>App({\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// ...</span>\r\n  onShow: function(options) {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 解决各类回调的兼容问题</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.captchaTicketExpire) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.captchaTicketExpire = {};\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (options.scene === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1038</span> &amp;&amp; options.referrerInfo.appId === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx5a3a7366fd07e119'</span>) {\r\n      const result = options.referrerInfo.extraData;\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (result.ret === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n        const ticket = result.ticket;\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.captchaTicketExpire[ticket]) {\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.captchaResult = result;\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.captchaTicketExpire[ticket] = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>;\r\n        }\r\n      } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 用户关闭了验证码</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 这里可以加上一些验证失败提示</span>\r\n      }\r\n    }\r\n  },\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// ...</span>\r\n});</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>验证结果（captchaResult） 参数说明：</p><p><a href=\"data/attachment/portal/202001/07/092127hwbrxbrmbbp2uybb.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/07/092127hwbrxbrmbbp2uybb.png\"></a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3、将验证结果返回至服务端校验</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在小程序页面的 onShow 阶段，将验证结果及待提交的表单数据一起提交到服务器，进行校验。</p><pre class=\"prettyprint hljs verilog\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// page.js</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> app = getApp()\r\n\r\nPage({\r\n  data: {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// ...</span>\r\n  },\r\n  onShow() {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> captchaResult = app<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.captchaResult</span>;\r\n    app<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.captchaResult</span> = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>; <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 验证码的票据为一次性票据，取完需要置空</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (captchaResult &amp;&amp; captchaResult<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.ret</span> === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 将验证码的结果返回至服务端校验，以及后续的操作</span>\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// const ticket = captchaResult.ticket;</span>\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// const randstr = captchaResult.randstr;</span>\r\n    }\r\n  },\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// ...</span>\r\n});</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>用一个词描述这个开发过程：搬上去！</h4> </td>", "pub_time": "2020-1-7 00:06", "author": "Rolan"}
{"title": "小程序跨页面交互的作用与方法 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>去年年末，微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的分包大小已经到达了 12M 大小,一方面说明小程序的确逐步为开发者放开更大的权限，另一方面也说明了对于某些小程序 8M 的大小已经不够用了。我个人今年也是在开发一个 to B 小程序应用。这里列举一些跨页面交互的场景。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>对于 B 端应用的业务需求来说，小程序开发的复杂度相对比网页开发要复杂一些。一个是双线程的处理机制问题，另一个是页面栈之间交互问题。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>注: 笔者目前只需要开发微信小程序，为了在小程序页面中可以使用 properties behaviors observers 等新功能，已经使用 Component 构造器来构造页面。具体可以参考\t<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/component.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">微信小程序 Component 构造器</a> 。如果你也没有多端开发的需求，建议尝试使用，可以得到不错的体验。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>性能优化类</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>对于小程序在页面中点击触发 wx.navigateTo 跳转其他页面，中间会有一段时间的空白加载期(对于分包出去的页面，空白期则会更长)，但是这是小程序内部机制，没有办法进行优化。我们只能眼睁睁的等待这段没有意思的空白期过去。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当考虑到跳转页面后的第一件事情便是取数逻辑，那么我们是否能够进行优化呢？答案是肯定的。我们没有办法直接在当前页面取得数据之后再进行跳转操作(这样操作更不好)，但是我们却可以利用缓存当前的请求，详情可以参考我之前的博客文章 ——\t<a href=\"https://github.com/wsafight/personBlog/issues/13\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">Promise对象 3 种妙用</a> 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>代码如下:</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> promiseCache = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Map</span>()\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">setCachePromise</span>(<span class=\"hljs-params\">key, promise</span>) </span>{\r\n  promiseCache.set(key, promise)\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">getCachePromise</span>(<span class=\"hljs-params\">key</span>) </span>{\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 根据key获取当前的数据  </span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> promise = promiseCache.get(key)\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 用完删除，目前只做中转用途，也可以添加其他用途</span>\r\n  promiseCache.delete(key)\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> promise  \r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>做一份全局的 Map,然后利用 Map 缓存 promise 对象，在跳转之前代码为:</p><pre class=\"prettyprint hljs objectivec\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 导入 setCachePromise 函数</span>\r\n\r\nComponent({\r\n  methods: {\r\n    getBookData(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">id</span>) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> promise = <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// promise 请求</span>\r\n        setCachePromise(`xxx:${<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">id</span>}`, promise)      \r\n    },  \r\n    handleBookDetailShow(e) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">id</span> = e.detail\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.getBookData(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">id</span>)\r\n       wx.navigateTo({url: `xx/xx/x?<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">id</span>=${<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">id</span>}`})\r\n    }\r\n  }\r\n})</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>而跳转之后的代码也如下所示:</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 导入 getCachePromise 函数</span>\r\n\r\nComponent({\r\n    <span class=\"hljs-attr\">properties</span>: {\r\n      <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Number</span>  \r\n    },\r\n    <span class=\"hljs-attr\">lifetimes</span>: {\r\n      attached () {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> id = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.id  \r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 取得全局缓存的promise</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> bookPromise = getCachePromise(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`xxx:<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${id}</span>`</span>)\r\n        bookPromise.then(<span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>) =&gt;</span> {\r\n          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 业务处理</span>\r\n        }).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">error</span> =&gt;</span> {\r\n          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 错误处理  </span>\r\n        })\r\n      }\r\n    },\r\n    <span class=\"hljs-attr\">methods</span>: {\r\n      getBook() {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 获取数据，以便于 错误处理 上拉刷新 等操作  </span>\r\n      }  \r\n    }\r\n})</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如此便可以同时处理取数和页面加载的逻辑，当然，这个对于页面有耦合性，不利于后续的删除与修改。但考虑如果仅仅加在分包跳转之间可能会有不错的效果。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>想要无侵入式，可以进一步学习研究\t<a href=\"https://wetest.qq.com/lab/view/294.html?from=content_qcloud\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">微信小程序之提高应用速度小技巧</a> 以及\t<a href=\"https://github.com/tvfe/wxpage\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">wxpage</a> 框架，同时考虑到无论是 ToC 还是 ToC 用户，都有可能存在硬件以及网络环境等问题，该优化还是非常值得的。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当然微信小程序为了减少冷启动时间，提供了\t<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/ability/background-fetch.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">周期性更新</a> <a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/ability/pre-fetch.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">数据预拉取</a> 功能。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>注: 上面的 promiseCache 只作为中转的用途，不作为缓存的用途，如果你考虑添加缓存，可以参考我之前的博客文章——\t<a href=\"https://github.com/wsafight/personBlog/issues/2\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">前端 api 请求缓存方案</a> 。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>通知类</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果是 pc 端中进行交互，对于数据的 CRUD。例如在详情页面进行了数据的修改和删除，返回列表时候就直接调取之前存储的列表查询条件再次查询即可，而对于移动端这种下拉滚动的设计，就没有办法直接调用之前的查询条件来进行搜索。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果从列表页面进入详情页面后，在详情页面只会进行添加或者修改操作。然后返回列表页面。此时可以提示用户数据已经进行了修改，请用户自行决定是否进行刷新操作。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如在编辑页面修改了数据:</p><pre class=\"prettyprint hljs cs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> app = getApp()\r\n\r\ncomponent({\r\n  methods: {\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handleSave</span>(<span class=\"hljs-params\"></span>) </span>{\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//...</span>\r\n      app.globalData.xxxChanged = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//...  </span>\r\n    }\r\n  }\r\n})</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>列表界面:</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> app = getApp()\r\n\r\ncomponent({\r\n  <span class=\"hljs-attr\">pageLifetimes</span>: {\r\n    show() {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.confirmThenRefresh()\r\n    }    \r\n  },\r\n  <span class=\"hljs-attr\">methods</span>: {\r\n    confirmThenRefresh() {\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 检查 globalData，如果当前没有进行修改，直接返回 </span>\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(!app.globalData.xxxChanged) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span>\r\n      wx.showModal({\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// ...</span>\r\n        complete: <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 无论确认刷新与否，都把数据置为 false </span>\r\n          app.globalData.xxxChanged = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>  \r\n        }  \r\n      })  \r\n    }\r\n  }  \r\n})</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当然了，我们也可以利用 wx.setStorage 或者 getCurrentPage 获取前面的页面 setData 来进行数据通知,以便用户进行页面刷新。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>订阅发布类</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果仅仅只涉及到修改数据的前提下，我们可以选择让用户进行刷新操作，但是如果针对于删除操作而言，如果用户选择不进行刷新，然后用户又不小心点击到了已经被删除的数据，就会发生错误。所以如果有删除的需求，我们最好在返回列表页面前就进行列表的修改，以免造成错误。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>mitt</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>github 上有很多的 pub/sub 开源库，如果没有什么特定的需求，找到代码量最少的就是\t<a href=\"https://github.com/developit/mitt\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">mitt</a> 这个库了,作者是喜欢开发微型库的\t<a href=\"https://github.com/developit\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">developit</a> 大佬,著名的\t<a href=\"https://preactjs.com/\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">preact</a> 也是出于这位大佬之手。 这里就不做过多的介绍，非常简单。大家可能都能看明白，代码如下(除去 flow 工具的检查):</p><pre class=\"prettyprint hljs fsharp\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>export <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> mitt(all) {\r\n  all = all || Object.create(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">null</span>);\r\n\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n    on(<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>, <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handler</span>) {</span>\r\n      (all[<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>] || </span>(all[<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>] </span>= [])).push(handler);\r\n    },\r\n\r\n    off(<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>, <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handler</span>) {</span>\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (all[<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>]) {</span>\r\n        all[<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>].<span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">splice</span></span>(all[<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>].<span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">indexOf</span></span>(handler) &gt;&gt;&gt; <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>);\r\n      }\r\n    },\r\n    emit(<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>, <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">evt</span>) {</span>\r\n      (all[<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>] || []).<span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">slice</span></span>().map((handler) =&gt; { handler(evt); });\r\n      (all['*'] || []).slice().map((handler) =&gt; { handler(<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>, <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">evt</span>); });</span>\r\n    }\r\n  };\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>仅仅只有3个方法，on emit以及 off。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>只要在多个页面导入 生成的 mitt() 函数生成的对象即可(或者直接放入 app.globalData 中也可)。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>Component({\r\n  <span class=\"hljs-attr\">lifetimes</span>: {\r\n    <span class=\"hljs-attr\">attached</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 页面创建时执行</span>\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> changeData = <span class=\"hljs-function\">(<span class=\"hljs-params\">type, data</span>) =&gt;</span> {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 处理传递过来的类型与数据</span>\r\n      }\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._changed = changeData\r\n      bus.on(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'xxxchanged'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._changed)\r\n    },\r\n    <span class=\"hljs-attr\">detached</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 页面销毁时执行</span>\r\n      bus.off(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'xxxchanged'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._changed)\r\n    }\r\n  }\r\n})</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里mitt可以有多个页面进行绑定事件，如果需求仅仅只涉及到两个页面之间，我们就可以使用 wx.navigateTo 中的 EventChannel (页面间事件信息通道)。可以参考\t<a href=\"https://blog.csdn.net/gongyan12345/article/details/99679847\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">微信小程序wx.navigateTo方法里的events参数使用详情及场景</a> ,该方案的利好在于，传递到下一个页面的参数也可以通过 EventChannel 来通知，以便于解决 properties 传递数据不宜过大的问题。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>注: 一个页面展示很多信息的时候，会造成小程序页面的卡顿以及白屏。小程序官方也有长列表组件\t<a href=\"https://developers.weixin.qq.com/miniprogram/dev/extended/component-plus/recycle-view.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">recycle-view</a> 。有需求的情况下可以自行研究，这个不在这里详述。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>鼓励一下</h2><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">如果你觉得这篇文章不错，希望可以给与我一些鼓励，在我的 github 博客下帮忙 star 一下。</p><a href=\"https://github.com/wsafight/personBlog\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">博客地址</a></div><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>参考文档</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/component.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">微信小程序 Component 构造器</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://wetest.qq.com/lab/view/294.html?from=content_qcloud\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">微信小程序之提高应用速度小技巧</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://github.com/tvfe/wxpage\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">wxpage</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://github.com/developit/mitt\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">mitt</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://github.com/wsafight/personBlog/issues/13\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">Promise对象 3 种妙用</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://github.com/wsafight/personBlog/issues/2\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">前端 api 请求缓存方案</a></p> </td>", "pub_time": "2020-1-7 00:24", "author": "Rolan"}
{"title": "从客户端角度窥探小程序架构 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>自诞生以来。就以一种百家争鸣的姿态展现在开发者的面前。继2017年1月9日微信小程序诞生后，小程序市场又陆续出现了支付宝小程序、头条小程序、百度智能小程序等等，甚至平安内部，也在发展自己的小程序生态。各家都在微信小程序的基础上，面向自己的业务，对架构进行逐步优化调整，但是万变不离其宗，微信小程序终归为小程序鼻祖，也是得益于微信小程序的思想，才造就了如今这百花齐放的业态。说起微信小程序，在体验上的优化，让我很长一段时间认为，这是 Native 层渲染。事实并不完全是，至今不敢相信，webView 的渲染竟能带来如此体验。本篇主要以一个客户端开发者的角度，来对微信小程序、支付宝小程序一探究竟。本篇旨在原理分析，我并未有真实的小程序架构设计经验。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>说到小程序，不得不需要指出另外一个问题，苹果爸爸 <a target=\"_blank\" href=\"https://developer.apple.com/cn/news/?id=09062019b\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">对于 HTML5 app 的更新</a> 的审核问题，目前会有开发者存在这样的疑问，Hybrid 和 H5 是不是要被苹果拒审了呢？其实从更新描述来看，不难发现苹果的主要目的是针对 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>“核心功能未在二进制文件内”</code> 的 App ，实际上小程序无论是在设计理念上，还是核心技术上，都不存在这样的问题，小程序并非App，小程序是以 App 为载体，尽可能的对 web 页面进行优化而生成的产物。还有一点是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>马甲包</code> 日益猖獗，马甲包最后基本都转化成为了条款内描述的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>“现金Bocai、彩票抽奖和慈善捐款”</code> 类型，所以苹果想要尽可能的禁止它。而且从微信小程序开发文档来看，微信小程序是典型的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>技术推动产品的结果</code> 。关于RN类技术，更不存在这样的问题了，RN本质为 JS 通过 JSCore 调用 Native 组件。实际上它的核心仍然在 Native 端，当然对 code push 我还尚存疑问。关于 RN 的动态更新上，从 <a target=\"_blank\" href=\"http://blog.cnbang.net/internet/3578/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">bang's</a> 的描述也不难发现苹果爸爸的态度， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>只要不是为了绕过审核去做动态更新就可以接受</code> 。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>二、从微信小程序的发展史说起</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序是什么，微信把小程序定义为是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>一种全新的连接用户与服务的方式，它可以在微信内被便捷地获取和传播，同时具有出色的使用体验</code> 。便捷和出色有何而来？小程序技术最初来源于 H5 和 Native 间的简单调用，微信构建了一个 WeixinJSBridge 来为H5提供一些 Native 的功能，例如地图、播放器、定位、拍照、预览等功能。关于 Bridge 的具体实现可以参考之前的文章 <a target=\"_blank\" href=\"https://juejin.im/post/5cd2c6a2f265da037516ba1c\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">写一个易于维护使用方便性能可靠的Hybrid框架</a> 。但是微信逐渐的又遇到了另外一个问题，那就 H5 页面的体验问题，微信团队为了解决 H5 页面的白屏问题，他们引入了最近很火的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>离线包</code> 概念，当然微信称之为 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>微信 Web 资源离线存储</code> ，实际上是一个东西。Web 开发者可借助微信提供的资源存储能力，直接从微信本地加载 Web 资源而不需要再从服务端拉取，从而减少网页的加载时间。关于离线包的概念，不了解的话可以参考下我之前的文章 <a target=\"_blank\" href=\"https://juejin.im/post/5cd4fda8f265da03a00febe1\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">iOS 性能优化 -- H5离线秒开</a> 。但是当页面加载大量 CSS 和 JS 时，依然会有白屏问题，包括 H5 页面点击事件的迟钝感和页面跳转的体验问题。那么基于此问题，应运而生的，小程序技术就诞生了。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>从微信小程序的发展史，不难看出，小程序实际上是近几年开发者对 H5 体验优化而来的，这也切合了前面所说的， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>小程序实际上是典型的技术推动产品的结果</code> 。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>三、微信小程序原理分析</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序自称能够解决以下问题：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">快速的加载。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">更强大的能力。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">原生的体验。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">易用且安全的微信数据开发。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">高效和简单的开发。</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>快速加载和原生的体验，这其实都是在体验上的升级，更强大能力实际上源于微信小程序为开发者提供了大量的组件，这些组件有基于web技术，也有基于Native技术，在我看来这和 RN 技术不谋而合。后面我会举一个模仿 RN 实现的小例子来阐述一下它的原理。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>高效和简单的开发是因为微信小程序开发语言实质上还是基于 web 开发规范，这使得开发前端的人来开发小程序显得更容易。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>还有一点更重要的就是安全，为什么说小程序是安全的？后面会逐步展开，揭开小程序的神秘面纱。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>快速加载和原生的体验</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序的架构设计与 web 技术还是有一定的差别，吸取了 web 技术的一些优势，也摒弃了 web 技术中体验不好的地方。最主要的特点就是小程序采用双线程机制，即视图渲染和业务逻辑分别运行在不同的线程中。在传统的 web 开发中，网页开发渲染线程和脚本线程是互斥的，所以 H5 页面中长时间的脚本运行可能会导致页面失去响应或者白屏，体验糟糕。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为了更好的体验，将页面渲染线程和脚本线程分开执行：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">渲染层：界面渲染相关的逻辑全部 在webView 线程内执行，一个小程序存在多个页面，一个页面对应一个 webView，微信小程序限制开发者最多只能创建五个页面。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">逻辑层：Android采用 JSCore ，iOS采用的 JavaScriptCore 框架运行 JS 脚本。怎么在 JavaScriptCore 运行脚本文件后面会讲。</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>双线程模型是小程序框架与大多数前端 web 框架的不同之处，基于这个模型可以更好的管控以及提供更安全的环境。因为逻辑层运行在 JSCore 中，并没有一个完整浏览器对象，因而缺少相关的DOM API和BOM API。客户端的开发者可能对 DOM 有些陌生，了解编译过程的同学应该知道在编译器编译代码的时候，会有一个语法分析的过程，生成抽象语法树 AST，编译器会根据语法树去检查表达式是否合法、括号是否匹配等。实际上DOM也是一种树结构，经过浏览器的解析，最终呈现在用户面前。通过 JavaScript 操纵 DOM 可以随意改变元素的位置，这对于小程序来说是极为不安全的。所以说逻辑层为小程序带来的另一个特点，易于管控和安全。线程通信基于前面提到的 WeixinJSBridge ：逻辑层把数据变化通知到视图层，触发视图层页面的更新，视图层把触发的事件通知到逻辑层进行业务处理。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/07/094840jot85knnoto8o380.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/07/094840jot85knnoto8o380.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当我们对渲染层进行事件操作后，会通过 WeixinJSBridge 将数据传递到 Native 系统层。Native 系统层决定是否要用 Native 处理，然后丢给 逻辑层进行用户的逻辑代码处理。逻辑层处理完毕后会将数据通过 WeixinJSBridge 返给 View 层，View 渲染更新视图。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>渲染层</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>根据 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/ebook?action=get_post_info&amp;docid=000a64a29c48b0eb0086f161b5940a&amp;highline=%E8%99%9A%E6%8B%9Fdom\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">微信小程序开发者文档</a> 描述， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>在视图层内，小程序的每一个页面都独立运行在一个页面层级上。小程序启动时仅有一个页面层级，每次调用wx.navigateTo，都会创建一个新的页面层级；相对地，wx.navigateBack会销毁一个页面层级</code> 。大概可以理解为，每个 web 页面都是运行在单独的 webView 里面，这样的好处就是让每个 webView 单纯的处理当前页面的渲染逻辑，不需要加载其他页面的逻辑代码，减轻负担能够加速页面渲染，使其能够尽可能的接近原生，这与小程序跳转页面的体验上也是一致的。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实际上在小程序源码内有一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>index.html</code> 文件的存在，这是小程序启动后的入口文件。初次加载的时候，主入口会加载相应的 webView ，这其中就会包括前面所提到的，视图层和逻辑层。逻辑层虽然也提供了 webView ，但是并不提供浏览器相关接口，而是单纯的为了获取当前的 JSCore ，执行相关的 JS 脚本文件，这也是开发小程序是没办法直接操作 DOM 的根本原因。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当我们每打开一个新页面的时候，调用 navigateTo 都相当于打开了一个新的 webView ，这样一直打开，内存也会变得吃紧，这也是为什么小程序对页面打开数量有限制的原因了。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>预加载</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>根据小程序开发文档描述： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>对于每一个新的页面层级，视图层都需要进行一些额外的准备工作。在小程序启动前，微信会提前准备好一个页面层级用于展示小程序的首页。除此以外，每当一个页面层级被用于渲染页面，微信都会提前开始准备一个新的页面层级，使得每次调用wx.navigateTo都能够尽快展示一个新的页面</code> 。这在客户端的角度来看，相当于打开新页面之后，对下一个页面的 webView 提前做了预加载，这个思路与当前比较流行的 webView 缓存池的思路不谋而合，原因是在 iOS 和 Android 系统上，操作系统启动 webView 都需要一小段时间，预加载会提升页面打开速度，优化白屏问题。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>基础库内部优化</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>再往深层次来看，通过小程序开发工具的源码，能找到一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>pageframe.html</code> 的模版文件，具体位置在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>package.nw/html/pageframe.html</code> ：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/07/094800zbczmr1kqmqdhed7.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/07/094800zbczmr1kqmqdhed7.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>看标题就应该很清楚了，这是渲染层的核心模块，它的作用就是为小程序准备一个新的页面，小程序每个视图层页面内容都是通过 pageframe.html 模板来生成的，包括小程序启动的首页。通过查看源码，里面定义了一个属性 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>var __webviewId__</code> ，我猜想这是每个 webView 页面的页面 ID ，逻辑层处理多个视图层间的业务逻辑可能就是通过这个ID来做的映射关系。在首次启动时，后台会缓存生成的 pageframe.html 模版，在后面的页面打开时，直接加载缓存的 pageframe.html 模版，页面引入的资源文件也可以直接在缓存中加载，包括小程序基础库视图层底层、页面的模版信息、配置信息以及样式等内容，这样避免重复生成，快速打开页面，提升页面渲染性能。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>注入小程序WXML结构和WXSS样式</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>关于 pageframe.html 最后是怎么生成相应页面的归功于一个叫 nw.js 的框架，具体实现这里就不讲了，更多的偏向于前端的知识了。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>逻辑层</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>上面了解了渲染层都做了什么之后，下面在窥探一下，小程序的逻辑层都做了什么。参考 <a target=\"_blank\" href=\"http://eux.baidu.com/blog/fe/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">eux.baidu.com/blog/fe/微信小…</a> 不难发现，sevice 层的代码是由 WAService.js 实现的，逻辑层实际上主要提供了 Page， App，GetApp 接口和更为丰富 wx 接口模块，包括数据绑定、事件分发、生命周期管理、路由管理等等。关于视图层和逻辑层间的具体交互细节可以看下这张图：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/07/094800ab3cs2m3f7ccf7r7.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/07/094800ab3cs2m3f7ccf7r7.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们写的页面逻辑最后都被引入到了一个叫 appservice.html 的页面中，并且分别从 app.js 开始一一执行；小程序代码调用 Page 构造器的时候，小程序基础库会记录页面的基础信息，如初始数据（data）、方法等。需要注意的是，如果一个页面被多次创建，并不会使得这个页面所在的JS文件被执行多次，而仅仅是根据初始数据多生成了一个页面实例（this），在页面 JS 文件中直接定义的变量，在所有这个页面的实例间是共享的。对于逻辑层，从客户端的角度看，我们应该更关注于逻辑层的JS是怎么注入到JSCore中的。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>四、看看JavaScriptCore是怎么执行JS脚本的</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>说到JavaScriptCore，我们先来讨论下Hybrid App 的构建思路，Hybird App是指混合模式移动应用，即其中既包含原生的结构又有内嵌有 Web 的组件。这种 App 不仅性能和用户体验可以达到和原生所差无几的程度，更大的优势在于 bug 修复快，版本迭代无需发版。Hybird App的实质并没有修改原 Native 的行为，而是将下发的资源进行加载和界面渲染，类似 WebView。下面通过一个例子来模拟一下 avaScriptCore 执行 JS 脚本来让 Native 和 JS 之间的通信。关于 JavaScriptCore 的具体使用可以参考下戴铭的 <a target=\"_blank\" href=\"https://www.jianshu.com/p/e220e1f34a0b\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">深入剖析 JavaScriptCore</a> 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们打算实现这样的功能：通过下发JS脚本创建原生的 UILabel 和 UIButton 控件并响应事件，首先编写 JS 代码如下：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>(<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>)</span>{\r\n <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"ProgectInit\"</span>);\r\n <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//JS脚本加载完成后 自动render界面</span>\r\n <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> render();\r\n })();\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//JS标签类</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Label</span>(<span class=\"hljs-params\">rect,text,color</span>)</span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.rect = rect;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.text = text;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.color = color;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.typeName = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"Label\"</span>;\r\n}\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//JS按钮类</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Button</span>(<span class=\"hljs-params\">rect,text,callFunc</span>)</span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.rect = rect;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.text = text;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.callFunc = callFunc;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.typeName = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"Button\"</span>;\r\n}\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//JS Rect类</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Rect</span>(<span class=\"hljs-params\">x,y,width,height</span>)</span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.x = x;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.y = y;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.width = width;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.height = height;\r\n}\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//JS颜色类</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Color</span>(<span class=\"hljs-params\">r,g,b,a</span>)</span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.r = r;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.g = g;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.b = b;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.a = a;\r\n}\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//渲染方法 界面的渲染写在这里面</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">render</span>(<span class=\"hljs-params\"></span>)</span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> rect = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> Rect(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">280</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30</span>);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> color = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> Color(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> label = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> Label(rect,<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"这是一个原生的Label\"</span>,color);\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> rect4 = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> Rect(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">150</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">280</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30</span>);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> button = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> Button(rect4,<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"这是一个原生的Button\"</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>)</span>{\r\n                            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> randColor = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> Color(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Math</span>.random(),<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Math</span>.random(),<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Math</span>.random(),<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>);\r\n                            TestBridge.changeBackgroundColor(randColor);\r\n                            });\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//将控件以数组形式返回</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> [label,button];\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>创建一个 OC 类 TestBridge 绑定到 JavaScriptCore 全局对象上：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@protocol</span> TestBridgeProtocol &lt;JSExport&gt;\r\n- (void)<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">changeBackgroundColor</span>:(JSValue *)value;\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@end</span>\r\n\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@interface</span> <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">TestBridge </span>: NSObject&lt;TestBridgeProtocol&gt;\r\n\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@property</span>(nonatomic, weak) UIViewController *ownerController;\r\n\r\n<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@end</span>\r\n复制代码</pre><pre class=\"prettyprint hljs objectivec\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">#import <span class=\"hljs-meta-string\" style=\"color: rgb(77, 153, 191);\">\"TestBridge.h\"</span></span>\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@implementation</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">TestBridge</span></span>\r\n\r\n- (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">void</span>)changeBackgroundColor:(JSValue *)value{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.ownerController.view.backgroundColor = [<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">UIColor</span> colorWithRed:value[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"r\"</span>].toDouble green:value[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"g\"</span>].toDouble blue:value[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"b\"</span>].toDouble alpha:value[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"a\"</span>].toDouble];\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@end</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在 ViewController 中实现一个界面渲染的 render 解释方法：</p><pre class=\"prettyprint hljs objectivec\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">#import <span class=\"hljs-meta-string\" style=\"color: rgb(77, 153, 191);\">\"ViewController.h\"</span></span>\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">#import <span class=\"hljs-meta-string\" style=\"color: rgb(77, 153, 191);\">&lt;JavaScriptCore/JavaScriptCore.h&gt;</span></span>\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">#import <span class=\"hljs-meta-string\" style=\"color: rgb(77, 153, 191);\">\"TestBridge.h\"</span></span>\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@interface</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">ViewController</span> ()</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@property</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">nonatomic</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">strong</span>)JSContext *jsContext;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@property</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">nonatomic</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">strong</span>)<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">NSMutableArray</span> *actionArray;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@property</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">nonatomic</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">strong</span>)TestBridge *bridge;\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@end</span>\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@implementation</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">ViewController</span></span>\r\n\r\n- (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">void</span>)viewDidLoad {\r\n    [<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">super</span> viewDidLoad];\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//创建JS运行环境</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.jsContext = [JSContext new];\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//绑定桥接器</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.bridge =  [TestBridge new];\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.bridge.ownerController = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.jsContext[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"TestBridge\"</span>] = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.bridge;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.actionArray = [<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">NSMutableArray</span> array];\r\n    [<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span> render];\r\n}\r\n\r\n-(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">void</span>)render{\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">NSString</span> * path = [[<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">NSBundle</span> mainBundle] pathForResource:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"main\"</span> ofType:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"js\"</span>];\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">NSData</span> * jsData = [[<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">NSData</span> alloc]initWithContentsOfFile:path];\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">NSString</span> * jsCode = [[<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">NSString</span> alloc]initWithData:jsData encoding:<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">NSUTF8StringEncoding</span>];\r\n    JSValue * jsVlaue = [<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.jsContext evaluateScript:jsCode];\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">int</span> i=<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>; i&lt;jsVlaue.toArray.count; i++) {\r\n        JSValue * subValue = [jsVlaue objectAtIndexedSubscript:i];\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> ([[subValue objectForKeyedSubscript:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"typeName\"</span>].toString isEqualToString:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"Label\"</span>]) {\r\n            <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">UILabel</span> * label = [<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">UILabel</span> new];\r\n            label.frame = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">CGRectMake</span>(subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"rect\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"x\"</span>].toDouble, subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"rect\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"y\"</span>].toDouble, subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"rect\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"width\"</span>].toDouble, subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"rect\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"height\"</span>].toDouble);\r\n            label.text = subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"text\"</span>].toString;\r\n            label.textColor = [<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">UIColor</span> colorWithRed:subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"color\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"r\"</span>].toDouble green:subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"color\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"g\"</span>].toDouble blue:subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"color\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"b\"</span>].toDouble alpha:subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"color\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"a\"</span>].toDouble];\r\n            label.textAlignment = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">NSTextAlignmentCenter</span>;\r\n            [<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.view addSubview:label];\r\n        }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> ([[subValue objectForKeyedSubscript:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"typeName\"</span>].toString isEqualToString:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"Button\"</span>]){\r\n            <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">UIButton</span> * button = [<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">UIButton</span> buttonWithType:<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">UIButtonTypeSystem</span>];\r\n            button.frame = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">CGRectMake</span>(subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"rect\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"x\"</span>].toDouble, subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"rect\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"y\"</span>].toDouble, subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"rect\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"width\"</span>].toDouble, subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"rect\"</span>][<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"height\"</span>].toDouble);\r\n            [button setTitle:subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"text\"</span>].toString forState:<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">UIControlStateNormal</span>];\r\n            button.tag = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.actionArray.count;\r\n            [button addTarget:<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span> action:<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@selector</span>(buttonAction:) forControlEvents:<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">UIControlEventTouchUpInside</span>];\r\n            [<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.actionArray addObject:subValue[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">@\"callFunc\"</span>]];\r\n            [<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.view addSubview:button];\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n-(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">void</span>)buttonAction:(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">UIButton</span> *)btn{\r\n    JSValue * action  = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.actionArray[btn.tag];\r\n    [action callWithArguments:<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">nil</span>];\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@end</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这样就完成了一个简单的 JS 脚本注入，实际上执行后的样子是这样的：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/07/094800pjg6dpbvzp0186dp.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/07/094800pjg6dpbvzp0186dp.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这就是一个简单的执行 JS 脚本的逻辑，实际上 ReactNative 的原理也是基于此，小程序逻辑层与微信客户端的交互逻辑也是基于此。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>到这里，关于微信小程序渲染层与逻辑层做了什么、怎么做的、优化了什么以及为什么要采用这样的架构来设计，基本都梳理完毕了。小程序这样的分层设计显然是有意为之的，它的中间层完全控制了程序对于界面进行的操作， 同时对于传递的数据和响应时间也做到的监控。一方面程序的行为受到了极大限制， 另一方面微信可以确保他们对于小程序内容和体验有绝对的控制。我们在小程序的 JS 代码里面是不能直接使用浏览器提供的 DOM 和 BOM 接口的，这一方面是因为 JS 代码外层使用了局部变量进行屏蔽，另一方面即便我们可以操作 DOM 和 BOM 接口，它们对应的也是逻辑层模块，并不会对页面产生影响。这样的结构也说明了小程序的动画和绘图 API 被设计成生成一个最终对象而不是一步一步执行的样子， 原因就是 json 格式的数据传递和解析相比与原生 API 都是损耗不菲的，如果频繁调用很可能损耗 过多性能，进而影响用户体验。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>总结一句话就是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>webView渲染，JSCore处理逻辑，JSBridge做线程通信</code> 。后面再简要的分析下支付宝小程序，支付宝小程序属于后起之秀，支付宝小程序在微信小程序的基础上，做了一些优化，单从技术角度来看，有点后来者居上的意思。目前支付宝技术通过官方的媒体账号对外暴漏的一些实现细节也在逐步增多。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>六、再说说支付宝小程序</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>前端框架下面是小程序 native 引擎，包括了小程序容器、渲染引擎和 JavaScript 引擎，这块主要是把客户端 native 的能力和前端框架结合起来，给开发者提供系统底层能力的接口。在渲染引擎上面，支付宝小程序不仅提供 JavaScript+Webview 的方式，还提供 JavaScript+Native 的方式，在对性能要求较高的场景，可以选择 Native 的渲染模式，给用户更好的体验。</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这段文字来源于支付宝对外开放的技术博客的描述，从这段描述中，我们能够发现支付宝小程序在架构设计上同样采用的渲染引擎加 JavaScript 引擎两部分，包括页面间的切换实际上和微信小程序逻辑基本一致。下面这张是支付宝小程序应用框架的架构图：</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>运行时架构</h3><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/07/094800hli3d9kgdfa9g3gb.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/07/094800hli3d9kgdfa9g3gb.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>单从这个运行时架构来看，它与微信小程序不同的地方是，webView 页面也就是渲染层通过消息服务直接与逻辑层进行通讯，而不需要像微信的 JSBridge 那样作为中间层，消息服务具体实现细节目前尚不得知。支付宝的JSBridge只会与逻辑层进行通讯，来给小程序提供一些 Native 能力。支付宝的这种架构主要目的是解决渲染层与逻辑层交互的对象较复杂、数据量较大时，交互的性能比较差的问题。支付宝小程序的设计思路比较值得借鉴，微信小程序线程间的通讯是通过 JSBridge ，序列化 json 进行传递的。支付宝小程序重新设计了V8虚拟机，让逻辑和渲染都有自己的 Local Runtime，存放私有的模块和数据。在渲染层和逻辑层交互时，setData 的 对象会直接创建在 Shared Heap 里面，因此渲染层的 Local Runtime 可以直接读到该对象，并且用于 render 层的渲染，保证了逻辑和渲染的隔离，又减少了序列化和传输成本。当然支付宝还有些其他的优化，包括首页离线缓存，缓存时机的处理以及闪屏处理等等问题，这里就不再延伸讨论了（因为很多细节我也不知道）。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序SDK</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>根据支付宝小程序对外开放的技术文章来看，架构设计还是非常巧妙的，也很值得我们学习，先看图：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/07/094801nza4pam8lnp45fa4.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/07/094801nza4pam8lnp45fa4.jpg\"></a></p></figure><span style='color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'>参考： </span><a target=\"_blank\" href=\"https://www.infoq.cn/article/ullETz7q_Ue4dUptKgKC\" rel=\"nofollow,noindex\" style='color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'>独家！支付宝小程序技术架构全解析</a><span style='color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'></span><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序SDK在架构设计上把它分为了两部分，一部分是核心库基础引擎，一部分是基于基础库开发的插件功能。从上往下看：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">第一层小程序层，这是小程序开发者使用小程序 DSL 及各种组件开发的代码层。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">第二层和第三层架应该是小程序内部封装的一些组件和对外提供的相关API等。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">第四层和第五层是小程序的运行基础框架，主要包含小程序的逻辑处理引擎及渲染层。支付宝基于 ReactNative 增加了 Native 引擎，可以用原生来渲染 UI 。根据支付宝 mPaaS 的介绍来看，目前支付宝的小程序使用的是 React 版，蚂蚁内部的其他 App 有在使用 React Native 版的小程序。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">基础组件部分和扩展能力部分更像是基于 Bridge 调用的原生能力。</li></ul><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>六、最后</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>差不多半年多没有写文章了，趁着公司年会时间稍显充裕，对当前的小程序架构进行了下分析和总结，当然，真正的小程序应该比这还要复杂的多，小程序实际上是多年来大前端融合的一个结果，是一套非常成体系的技术方案，看了这么多我想你对小程序也有了初步认识，小程序的核心实际上还是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>渲染层</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>逻辑层</code> 的构建，那么如果让你开发一套 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>小程序SDK</code> ，你会怎样设计它们呢？</p> </td>", "pub_time": "2020-1-7 00:42", "author": "Rolan"}
{"title": "小程序摸爬滚打之路 ", "content": "<td id=\"article_content\"> \n                     \n                    <div class=\"article_body\" id=\"nei\" style='padding: 20px 5px 25px; margin-bottom: 0px; overflow-x: hidden; word-wrap: break-word; word-break: break-all; min-height: 340px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif;'><div style=\"line-height: 1.7em;\"><figure style=\"margin: 0px 0px 1em;\"><p><a href=\"data/attachment/portal/202001/10/095343lgf42qb0bqkrb6r2.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/10/095343lgf42qb0bqkrb6r2.jpg\"></a></p></figure><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">上面这张图相信接触过<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的开发者多多少少都有看到过，小程序的渲染层和逻辑层分别由 2 个线程管理：视图层的界面使用了 WebView 进行渲染，逻辑层采用 JsCore 线程运行 JS脚本。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">那么为什么要这样设计呢，为了管控和安全，我们需要阻止开发者使用一些，例如浏览器的window对象，跳转页面、操作DOM、动态执行脚本的开放性接口。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">我们可以使用客户端系统的 JavaScript 引擎，iOS 下的 JavaScriptCore 框架，安卓下腾讯 x5 内核提供的 JsCore 环境。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">这个沙箱环境只提供纯 JavaScript 的解释执行环境，没有任何浏览器相关接口。</p><h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility; text-indent: 1em;\">2.双线程之间的通信</h4><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">既然小程序的模型是双线程模型，那么是如何实现双线程之间的通信呢，由上图可以看出，逻辑层和视图层是通过Native层来进行转发的，这也就是说，我们可以把 DOM 的更新通过简单的数据通信来实现，类似于虚拟DOM的实现，用JS对象模拟DOM树，然后进行diff,然后把差异在视图层进行渲染，这一系列在Native之间的转化则由小程序的基础库来完成。</p><h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility; text-indent: 1em;\">3.组件系统--Exparser框架</h4><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">Exparser是微信小程序的组件组织框架，内置在小程序基础库中，为小程序的各种组件提供基础的支持。小程序内的所有组件，包括内置组件和自定义组件，都由Exparser组织管理。</p><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">DOM模型：模型上与WebComponents的ShadowDOM高度相似，但不依赖浏览器的原生支持，也没有其他依赖库；实现时，还针对性地增加了其他API以支持小程序组件编程。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">可在纯JS环境中运行：这意味着逻辑层也具有一定的组件树组织能力。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">高效轻量：性能表现好，在组件实例极多的环境下表现尤其优异，同时代码尺寸也较小。</li></ul><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">当前Web Component已经支持局部作用域、slot插槽等等现有框架所提供的组件化方法，学习Web Component也是我接下来自己学习的目标之一 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Orz</code> 。</p><h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility; text-indent: 1em;\">4.setData干了些什么</h4><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">小程序的视图层目前使用 WebView 作为渲染载体，而逻辑层是由独立的 JavascriptCore 作为运行环境。在架构上，WebView 和 JavascriptCore 都是独立的模块，并不具备数据直接共享的通道。当前，视图层和逻辑层的数据传输，实际上通过两边提供的 evaluateJavascript 所实现。即用户传输的数据，需要将其转换为字符串形式传递，同时把转换后的数据内容拼接成一份 JS 脚本，再通过执行 JS 脚本的形式传递到两边独立环境。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">而 evaluateJavascript 的执行会受很多方面的影响，数据到达视图层并不是实时的。</p><h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility; text-indent: 1em;\">5.运行机制</h4><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">小程序启动会有两种情况，一种是「冷启动」，一种是「热启动」。假如用户已经打开过某小程序，然后在一定时间内再次打开该小程序，此时无需重新启动，只需将后台状态的小程序切换到前台，这个过程就是热启动；冷启动指的是用户首次打开或小程序被微信主动销毁后再次打开的情况，此时小程序需要重新加载启动。</p><h3 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.6em; color: inherit; text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em;\">小程序开发日常问题</h3><h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility; text-indent: 1em;\">1.wx.request()的promise化</h4><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">小程序框架自带的网络请求和Ajax请求非常相似都是异步请求，请求参数中需要送入url、method、data、header等参数，还要设置success成功的回调函数和fail失败的回调函数，如下图所示</p><figure style=\"margin: 0px 0px 1em;\"><p><a href=\"data/attachment/portal/202001/10/095343b107luqyacgc7gl1.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/10/095343b107luqyacgc7gl1.jpg\"></a></p></figure><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">通过回调函数处理就很容易造成回调地狱，所以Promise化还是很有必要的</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">request</span> </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">constructor</span>() {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._baseUrl = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'https://xxx.com/api'</span>;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._token = wx.getStorageSync(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'token'</span>);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._header = {}\r\n  }\r\n\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n   * GET类型的网络请求\r\n   */</span>\r\n  getRequest(url, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>, header = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._header) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.requestAll(url, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>, header, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'GET'</span>)\r\n  }\r\n\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n   * DELETE类型的网络请求\r\n   */</span>\r\n  deleteRequest(url, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>, header = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._header) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.requestAll(url, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>, header, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'DELETE'</span>)\r\n  }\r\n\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n   * PUT类型的网络请求\r\n   */</span>\r\n  putRequest(url, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>, header = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._header) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.requestAll(url, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>, header, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'PUT'</span>)\r\n  }\r\n\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n   * POST类型的网络请求\r\n   */</span>\r\n  postRequest(url, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>, header = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._header) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.requestAll(url, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>, header, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'POST'</span>)\r\n  }\r\n  \r\n  requestAll(url, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>, header, method) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> new Promise((resolve, reject) =&gt; {\r\n      wx.request({\r\n        url: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._baseUrl + url,\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>,\r\n        header: header,\r\n        method: method,\r\n        success: (res =&gt; {\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.statusCode === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">200</span>) {\r\n            resolve(res)\r\n          } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//其它错误，提示用户错误信息</span>\r\n            reject(res)\r\n          }\r\n        }),\r\n        fail: (res =&gt; {\r\n          reject(res)\r\n        })\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> request\r\n复制代码</pre><h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility; text-indent: 1em;\">2.小程序的WXS</h4><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">在小程序的日常开发中大家肯定会遇到需要对数据进行过滤转义的场景，而微信小程序没有像Vue一样的filter过滤器功能，大多数人会在渲染之前对数据进行一次清洗，而WXS就是为了解决这一痛点</p><h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility; text-indent: 1em;\">什么是WXS</h4><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">是小程序出的一套脚本语言，用于 wxml 模板文件中，在模板文件中可以完成页面的结构。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">不依赖于运行时的基础库脚本，可以在所有版本的小程序中运行。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">WXS 中不能调用 javascript 中定义的函数或者变量，也不能调用小程序提供的 API，他的运行环境和 javascript 是隔离的。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">小程序的条件渲染和循环渲染对 WXS 是无效的，就是说如果 WXS 代码包裹在未渲染的代码中，只要渲染的 wxml 部分调用了此模块，此段 WXS 代码依然会被加载。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">由于运行环境的差异，在 ios 设备上小程序的 WXS 会比 javascript 快 2~20 倍，在 android 设备上运行效率无异。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">模块想要暴露自己的私有变量和方法，只能通过 module.exports 实现。 若在模块中想要引用其他模块，只能通过 require 实现。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">只能使用 var 来定义变量，表现形式和 javascript 一样，会有变量提升。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">WXS 模块只能在定义模块的 wxml 文件中被访问到，使用 或 时，WXS 模块不会被引入到对应的 wxml 文件中。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">不能使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>new Date()</code> 应该使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getDate()</code> 。</li></ul><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">WXS最常见的用处可能就是实现一个过滤器，如下所示</p><pre class=\"prettyprint hljs lua\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;wxs <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">module</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"filter\"</span>&gt;\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">getFullPath</span><span class=\"hljs-params\">(url)</span></span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://shiyuanjieyi.cn\"</span> + url\r\n    }\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">module</span>.exports.getFullPath = getFullPath\r\n&lt;/wxs&gt;\r\n&lt;image src=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{filter.getFullPath(url)}}\"</span>&gt;&lt;/image&gt;\r\n复制代码</pre></div></div> </td>", "pub_time": "2020-1-10 00:12", "author": "Rolan"}
{"title": "如何处理小程序独立分包的数据共享问题 ", "content": "<td id=\"article_content\"> \n                     \n                    <div><p><a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>2.3.0版本开始支持<a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/subpackages/independent.html\" rel=\"nofollow noopener noreferrer\">独立分包</a>。对于短期的活动落地页，我们会选择使用独立分包，这可以大大提升活动落地页的加载速度。</p>\r\n<p>但与此同时，由于独立分包中不能依赖主包和其他分包中的内容，独立分包的使用也带来了一些数据共享问题。</p>\r\n<h3 class=\"heading\" data-id=\"heading-0\">遇到的问题</h3>\r\n<h4 class=\"heading\" data-id=\"heading-1\">公用数据处理复杂</h4>\r\n<p>对于页面间的公用数据，我们原本的处理方式是<strong>将数据挂在App对象</strong>上。但引入了独立分包后，判断的逻辑就变得复杂了。</p>\r\n<p>例如，我们想设计一个计数器counter，能够在小程序的各个地方调用。我们将结果记录在app.globalData.count，这时候需要分三种场景考虑：</p>\r\n<ol>\r\n<li><strong>主包和普通分包页面中</strong>，通过<code>getApp()</code>来获取App对象;</li>\r\n<li><strong>在App对象中</strong>，通过<code>this</code>来获取App对象;</li>\r\n<li><strong>在独立分包或App对象注册前</strong>，通过<code>getApp({ allowDefault: true })</code>来获取App对象（新的逻辑）;</li>\r\n</ol>\r\n<p>另外，对于3的情况，由于App对象可能未初始化，还要<strong>判断globalData、count属性是否存在</strong>。</p>\r\n<h4 class=\"heading\" data-id=\"heading-2\">事件被重复绑定</h4>\r\n<p>通过wx.onError、wx.onPageNotFound等方法可以监控小程序的运行情况，我们把这些能力封装在npm包中。</p>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">report</span>(<span class=\"hljs-params\"></span>) </span>{\r\n  <span class=\"hljs-comment\">// 各种处理逻辑</span>\r\n  <span class=\"hljs-comment\">// ....</span>\r\n}\r\n\r\nwx.onError(report);\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>当独立分包和主包都引入了这个npm包，而npm包中调用wx.onXXXX方法进行了绑定，我们可以想到，当用户在独立分包和主包页面之间跳转时，事件的处理函数会被绑定不止一次（主包一次，每个独立分包一次）。</p>\r\n<h3 class=\"heading\" data-id=\"heading-3\">解决思路</h3>\r\n<ol>\r\n<li>\r\n<p>对于需要在主包、独立分包公用数据的情况，我们考虑<strong>将不同场景下读写app对象的能力封装起来</strong>，这类似于一个<strong>SessionStorage</strong>，我们可以在任意场景操作SessionStorage里的公用数据，而数据会在小程序<strong>从冷启动到销毁</strong>的运行过程中一直保留。</p>\r\n</li>\r\n<li>\r\n<p>对于事件重复绑定的问题，我们使用sessionStorage中的一个key来加锁。实现一个<strong>once</strong>方法，保证同一个key的逻辑只执行一次，通过如下的方式来调用</p>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">report</span>(<span class=\"hljs-params\"></span>) </span>{\r\n  <span class=\"hljs-comment\">// 各种处理逻辑</span>\r\n  <span class=\"hljs-comment\">// ....</span>\r\n}\r\n\r\nonce(<span class=\"hljs-string\">'_wx_onerror_key_'</span>, () =&gt; { wx.onError(report); });\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre></li>\r\n</ol>\r\n<h3 class=\"heading\" data-id=\"heading-4\">具体实现</h3>\r\n<ol>\r\n<li>为了不与原有的globalData冲突，我们使用一个新的BASIC_KEY，作为App对象上的属性名，来存储sessionStorage的内容。</li>\r\n<li>默认以getApp({ allowDefault: true })获取App对象，为了满足在App()内调用时也能取到正确的App对象，我们可以在App.onLaunch方法时将this传入<code>sessionStorage.setApp(this)</code>。</li>\r\n<li>暴露的api对齐浏览器的sessionStorage，实现如下：</li>\r\n</ol>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-keyword\">const</span> BASIC_KEY = <span class=\"hljs-string\">'_imwxutils_sessionStorageData_'</span>;\r\n<span class=\"hljs-keyword\">let</span> app = getApp({ <span class=\"hljs-attr\">allowDefault</span>: <span class=\"hljs-literal\">true</span> }) || {};\r\napp[BASIC_KEY] = app[BASIC_KEY] || {};\r\n\r\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">setApp</span>(<span class=\"hljs-params\">customApp</span>) </span>{\r\n  customApp[BASIC_KEY] = customApp[BASIC_KEY] || app[BASIC_KEY] || {};\r\n  app = customApp;\r\n}\r\n\r\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">setItem</span>(<span class=\"hljs-params\">key, value</span>) </span>{\r\n  app[BASIC_KEY][key] = value;\r\n}\r\n\r\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getItem</span>(<span class=\"hljs-params\">key</span>) </span>{\r\n  <span class=\"hljs-keyword\">return</span> app[BASIC_KEY][key];\r\n}\r\n\r\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">removeItem</span>(<span class=\"hljs-params\">key</span>) </span>{\r\n  app[BASIC_KEY][key] = <span class=\"hljs-literal\">null</span>;\r\n}\r\n\r\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">clear</span>(<span class=\"hljs-params\"></span>) </span>{\r\n  app[BASIC_KEY] = {};\r\n}\r\n\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>基于sessionStorage我们又可以实现once方法：</p>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> sessionStorage <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./session-storage'</span>;\r\n\r\n<span class=\"hljs-keyword\">const</span> ONCE_BASIC_KEY = <span class=\"hljs-string\">'_imwxutils_once_record_'</span>;\r\n<span class=\"hljs-comment\">/**\r\n * 全局只执行一次的方法\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">once</span>(<span class=\"hljs-params\">key, func</span>) </span>{\r\n  <span class=\"hljs-keyword\">if</span> (!key) {\r\n    <span class=\"hljs-keyword\">return</span>;\r\n  }\r\n  <span class=\"hljs-keyword\">const</span> record = sessionStorage.getItem(ONCE_BASIC_KEY) || {};\r\n\r\n  <span class=\"hljs-keyword\">if</span> (record[key]) { <span class=\"hljs-comment\">// 之前执行过了</span>\r\n    <span class=\"hljs-keyword\">return</span>;\r\n  }\r\n  record[key] = <span class=\"hljs-literal\">true</span>;\r\n  sessionStorage.setItem(ONCE_BASIC_KEY, record);\r\n  func();\r\n}\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><hr>\r\n<p>以上，通过实现sessionStorage和once方法，我们解决了独立分包与主包之间数据共享以及事件绑重复定的问题。</p>\r\n<p>欢迎交流</p></div> </td>", "pub_time": "2020-1-10 00:55", "author": "Rolan"}
{"title": "小程序登录的最优流程 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>18年中旬做过一个<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>，当时是通过转跳到一个登录页，然后点击调用 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/wx.getUserInfo.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">wx.getUserInfo</a> ，然后发现这个api被禁用了(虽然依然可以用)，然后用</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 需要使用 button 来授权登录 --&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{canIUse}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">open-type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getUserInfo\"</span> <span class=\"hljs-attr\">bindgetuserinfo</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"bindGetUserInfo\"</span>&gt;</span>授权登录<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">wx:else</span>&gt;</span>请升级微信版本<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>因为当时刚好需要用户信息，然后这个api有一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>encryptedData</code> 属性可以获取信息。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这样的流程本就可以了，但是意外出现了。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>思维的禁锢</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当第二次(2020年)需要开发一个新的小程序，于是也用了老代码， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>但是出现了个奇怪的问题。 有兴趣的可以看下面的[奇怪的问题]</code></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>奇怪的问题：</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>因为微信限制无法转跳到登录页，所以想是否应该在首页设置一个弹窗，点击的时候授权。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>但是因为考虑到可能会被微信拒绝，故在小程序开发者论坛开了一篇文章</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://developers.weixin.qq.com/community/develop/doc/0000a0a0b189206fb6b9f372151800?fromCreate=1\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">app无法转跳到登录页面 and 小程序登录的哲学思考</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>随后发现，登录其实并不需要授权弹窗or页面。（如果服务器不需要保存用户信息)</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>流程</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下面这个图是小程序官方图 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">点我转跳</a></p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/13/111254fiadj5xtrixriiff.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/111254fiadj5xtrixriiff.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>代码</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>app.js（小程序的入口文件）的完整代码</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> loginDataKey = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'loginData'</span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//app.js</span>\r\nApp({\r\n  <span class=\"hljs-attr\">onLaunch</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"></span>) </span>{\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> loginData = wx.getStorageSync(loginDataKey)\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'--loginData--'</span>)\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(loginData)\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> toLogin = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'未登录，去登录..'</span>)\r\n      wx.showLoading({<span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'登录中'</span>, <span class=\"hljs-attr\">icon</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'loading'</span>, <span class=\"hljs-attr\">mask</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>})\r\n      wx.login({\r\n        success(res){\r\n          <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx.login res'</span>)\r\n          <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(res)\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> success = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n            <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'登录成功'</span>)\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> loginResponse = {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"openid\"</span>:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"ooZAbwpdDdaZV_xiamianshi_mashaike\"</span>}\r\n            wx.setStorageSync(loginDataKey, loginResponse)\r\n            wx.hideLoading()\r\n          }\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> fail = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n            wx.hideLoading()\r\n            wx.showToast({\r\n              <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'登录失败，请重新打开小程序试试'</span>,\r\n              <span class=\"hljs-attr\">icon</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n              <span class=\"hljs-attr\">duration</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1e8</span>\r\n            })\r\n          }\r\n          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// TODO 发起网络请求</span>\r\n          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 延时模拟请求登录成功</span>\r\n          setTimeout(success, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">500</span>)\r\n        },\r\n        fail(err){\r\n          <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(err)\r\n          wx.hideLoading()\r\n          wx.showToast({\r\n            <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'登录失败，请重新打开小程序试试'</span>,\r\n            <span class=\"hljs-attr\">icon</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n            <span class=\"hljs-attr\">duration</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1e8</span>\r\n          })\r\n        }\r\n      })\r\n    }\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 未登录，去登录</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(!loginData){\r\n      toLogin()\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 已登录，但是微信session_key过期</span>\r\n    }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n      wx.checkSession({\r\n        success () {\r\n          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//session_key 未过期，并且在本生命周期一直有效</span>\r\n          <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'session_key 未过期'</span>)\r\n        },\r\n        fail () {\r\n          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// session_key 已经失效，需要重新执行登录流程</span>\r\n          <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'session_key 已经失效，需要重新执行登录流程, 重新登录中'</span>)\r\n          toLogin()\r\n        }\r\n      })\r\n    }\r\n\r\n  },\r\n  <span class=\"hljs-attr\">globalData</span>: {\r\n    <span class=\"hljs-attr\">userInfo</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>\r\n  }\r\n})\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>流程如下</h3><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">根据本地储存判断是否登录</li><li style=\"line-height: 1.7em; list-style-type: disc;\">已登录判断是否失效</li><li style=\"line-height: 1.7em; list-style-type: disc;\">失效或者未登录去登录</li><li style=\"line-height: 1.7em; list-style-type: disc;\">登录展示toast</li><li style=\"line-height: 1.7em; list-style-type: disc;\">拿到信息存储 关闭toast</li></ul><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>核心</h3><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">wx.login拿到code</li><li style=\"line-height: 1.7em; list-style-type: disc;\">然后把code通过 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">auth.code2Session</a> 获取openid和unionid等。</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这是我通过 <strong style=\"text-indent: 0px;\">auth.code2Session</strong> 拿到openid的截图（因为这个是测试号，所以没有unionid）</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>【unionid】是拿来和其他平台打通账号的关键，如果只有一个小程序，都可以不需要这个。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/13/111254avb7e3msssqsnq9e.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/111254avb7e3msssqsnq9e.jpg\"></a></p><div><div><h2 class=\"heading\" data-id=\"heading-7\">效果</h2>\r\n<p></p><figure><p><a href=\"data/attachment/portal/202001/13/111353bptk4079pb4cvlrc.gif\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/111353bptk4079pb4cvlrc.gif\"></a></p><figcaption></figcaption></figure><p></p>\r\n<h2 class=\"heading\" data-id=\"heading-8\">其他</h2>\r\n<h3 class=\"heading\" data-id=\"heading-9\">纯展示用户头像昵称等</h3>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">&lt;open-data <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">\"userAvatarUrl\"</span>&gt;&lt;/open-data&gt;\r\n&lt;open-data <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">\"userNickName\"</span>&gt;&lt;/open-data&gt;\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/component/open-data.html\" rel=\"nofollow noopener noreferrer\">查看open-data文档</a></p>\r\n<p>--完--</p></div></div></figure> </td>", "pub_time": "2020-1-13 00:16", "author": "Rolan"}
{"title": "微信小程序 动态加载swiper时不显示的问题（爬坑） ", "content": "<td id=\"article_content\"> \n                     \n                    <h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>问题一</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>报错信息</p><pre class=\"prettyprint hljs delphi\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>TypeError: Cannot <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">read</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">property</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'$$'</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">of</span> undefined\r\n    at HTMLElement._attached.wx.getPlatform._touchstartHandlerForDevtools</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>解决方法：因为<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>会保留上一次滑动swiper时候的current，所以会出现上次滑动到的current在这次的数据中不存在问题，所以，每次动态加载swiper-item前，需要设置swiper的current属性为0</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>问题二</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>swiper 的current每次设置了0，但是还是不显示 swiper，检查元素是存在的，并且current = -1</p><pre class=\"hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper</span> <span class=\"hljs-attr\">current</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'-1'</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper</span>&gt;</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>解决方法，动态设置swiper-item的数据时，还需设置current = 0，</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>并且current和swiperList不能在一个this.setData中设置，</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>要先setData swiperList 然后在setData current</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我是这样写的：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.setData</span>({\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiperItem</span>: list\r\n},()=&gt;{\r\n  <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.setData</span>({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">current</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n  })\r\n})\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//在每次给swiper赋值之后在它的回调中在赋值current</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>之后没有问题成功解决，希望对你有所帮助。</p> </td>", "pub_time": "2020-1-13 00:24", "author": "Rolan"}
{"title": "京东购物小程序cookie方案实践 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>早期为了解决“会话保持”的需求，社区中出现了「cookie方案」并最终成为W3C标准：当某个网站登录成功后，客户端（浏览器）收到一个cookie标识（文本）并保存下来，在后续请求中会自动带上这个字段，由此Web后台可以判断是否同一个用户，从而使“会话”得以延续。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>没有像浏览器一样内置实现了cookie方案，需要开发者自行模拟，而原先京东购物小程序及京喜小程序（现微信一级购物入口）是从微信及手Q购物H5中迁移迭代出来的，也就是说我们不仅要在小程序中模拟一套cookie方案，并且要保持和原业务对cookie处理逻辑的一致，为此我们将实现方向确定为“基于小程序开放能力，和浏览器保持一致”。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序开放了 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorageSync.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">数据缓存 Storage</a> 和 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">网络 Network</a> 这两种能力，通过这两套API，我们可以自行DIY一个cookie方案。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>PS：本文所有代码及使用示例都可以 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/s/x4sFASmh7xdq\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">在这里</a> 找到，阅读本文时配合实践，效果更佳。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>二、浏览器中的cookie</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为了保持后端对cookie的处理逻辑和原来的H5一致，小程序的实现需要往浏览器看齐。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>所以模拟小程序的cookie前，先看看浏览器的cookie机制，主要有以下几个部分：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">本地存储：浏览器会在本地分配一块空间，存储cookie</li><li style=\"line-height: 1.7em; list-style-type: disc;\">请求携带：每次发起请求，都会从本地取出cookie并追加在请求头上</li><li style=\"line-height: 1.7em; list-style-type: disc;\">响应设置：当响应头有Set-Cookie字段时，需要解析并更新</li><li style=\"line-height: 1.7em; list-style-type: disc;\">过期时间：每个cookie字段有单独的过期时间，并且到期会自动清除</li><li style=\"line-height: 1.7em; list-style-type: disc;\">读写操作：暴露API给前端JS调用，可进行增删改查操作</li><li style=\"line-height: 1.7em; list-style-type: disc;\">作用域：路径path、域名domin</li><li style=\"line-height: 1.7em; list-style-type: disc;\">编码：cookie值，在网络传输需要encode，建议存储也一样</li><li style=\"line-height: 1.7em; list-style-type: disc;\">其它：HttpOnly、Secure、SameSite</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在浏览器的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>DevTools</code> 中，可以看到当前站点下的Cookie明细：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/13/105634inynvzda7vmohjvd.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/105634inynvzda7vmohjvd.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>三、小程序中的cookie实现</h2><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>方案设计</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在小程序中模拟Cookie，主要涉及五个部分：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/13/105635prr7ytt07lndbr70.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/105635prr7ytt07lndbr70.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其中我们会重点关注 「Cookie基础库」 的实现，另外也会给出「Request基础库」的封装示例。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>本地存储</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序提供了 「数据缓存 Storage API」（可以理解为Web规范中的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>LocalStorage</code> ），支持存储“原生类型、Date、及能够通过JSON.stringify序列化的对象”。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们可以利用这些API，在Storage中新开一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>cookies</code> 字段进行存储：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 存：</span>\r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.setStorageSync</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'cookies'</span>, cookies)\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 取：</span>\r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.getStorageSync</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'cookies'</span>)\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其中 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>cookies</code> 的「存储结构」如下：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// cookies = </span>\r\n{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">cookie1</span>: { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// “最小cookie单元” ==&gt; cookieItem</span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">name</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'cookie1'</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// cookie名</span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">value</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'xxx'</span>,    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// cookie值</span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">expires</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Fri, 17 Jan 2020 08:49:41 GMT'</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 过期时间，使用GMT（格林威治标准时间）格式</span>\r\n    }\r\n},\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>上面的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>cookie1</code> 便是一个“最小cookie单元 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>cookieItem</code> ”，包含了3个字段（name、value、expires），是本文中定义的「标准cookie格式」，也是cookie操作的基本单元。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>打开【微信开发工具】的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Storage</code> 选项卡，可以查看本地存储的情况：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/13/105635xi5mxaxgtwbssppd.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/105635xi5mxaxgtwbssppd.jpg\"></a></p></figure><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>读写操作</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这部分主要作为“公共基础库“的角色，为外部业务提供增删改查cookie的API。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1. 获取cookie———— <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getCookie()</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>步骤：从Storage中取出完整cookies ==&gt; 取出指定name的cookie项 ==&gt; 校验有效期 ==&gt; 返回值value</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实现如下：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">getCookie</span>(<span class=\"hljs-params\">name = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span></span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> cookies = wx.getStorageSync(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'cookies'</span>) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// try/catch 略过</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> { value, expires } = cookies[name] || {}\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> (name &amp;&amp; expires &amp;&amp; !isExpired(expires)) ? <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">decodeURIComponent</span>(cookieItem.value) : <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2. 设置cookie———— <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>setCookie()</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>步骤：从Storage中取出完整cookies ==&gt; 解析入参 ==&gt; 覆盖更新 ==&gt; 同步到本地Storage</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先看下本API设计需求：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">设置单个/多个cookie</li><li style=\"line-height: 1.7em; list-style-type: disc;\">直接传值/传cookieItem（Object）</li><li style=\"line-height: 1.7em; list-style-type: disc;\">时间格式maxAge/expires</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>调用示例如下：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">setCookie</span>({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">cookie1</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12345</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">cookie2</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'12345'</span>\r\n})\r\n\r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">setCookie</span>({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">cookie1</span>: {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">value</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12345</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">maxAge</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">3600</span> * <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">24</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 自定义有效期（这里示例是24小时）</span>\r\n    },\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">cookie2</span>: {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">value</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'12345'</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">expires</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Wed, 21 Oct 2015 07:28:00 GMT'</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 标准GMT格式</span>\r\n    }\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里可对入参遍历，而cookie子项无论直接传值value还是传了详细object，都尽量的获取 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>name/value/expires/maxAge</code> ，传给格式化函数转为标准的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>cookieItem</code> ：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">setCookie</span>(<span class=\"hljs-params\">cookiesParam</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> oldCookies = wx.getStorageSync(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'cookies'</span>) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// try/catch 略过</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> newCookies = {} <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 由 cookiesParam 转化为标准格式后的cookies</span>\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> name <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">in</span> cookiesParam) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (isObject(cookiesParam[name])) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 传入是Object格式</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> { value, expires, maxAge } = cookiesParam[name]\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 转换为标准cookie格式（cookieItem）</span>\r\n            newCookies[name] = getStandardCookieItem({ name, value, expires, maxAge })\r\n        } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n            newCookies[name] = getStandardCookieItem({ name, <span class=\"hljs-attr\">value</span>: cookiesParam[name] })\r\n        }\r\n    }\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 同步到本地Storage</span>\r\n    saveCookiesToStorage(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.assign({}, oldCookies, newCookies))\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>3. 删除cookie———— <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>removeCookie()</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>步骤：从Storage中取出完整cookies ==&gt; 删除指定的cookie项 ==&gt; 同步到本地Storage</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">removeCookie</span>(<span class=\"hljs-params\">cookieName</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> cookies = wx.getStorageSync(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'cookies'</span>) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// try/catch 略过</span>\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">delete</span> cookies[cookieName]\r\n\r\n    saveCookiesToStorage(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.assign({}, cookies))\r\n}\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>四、Cookie 在网络中的传递</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>本节主要简单实现设计图中的【Request基础库】部分</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/13/105635ynxxujubrpp39r8u.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/105635ynxxujubrpp39r8u.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如上图所示，Cookie在网络中的传输主要有四个过程：</p><pre class=\"hljs sql\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Set</span>-Cookie\r\nCookie\r\nCookie\r\n</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以下是对一个请求的抓包示例：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/13/105635hi22ezse2qsym1wi.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/105635hi22ezse2qsym1wi.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在小程序中，请求发起有两种方式： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>HTTP</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>WebSocket</code> ，这里以HTTP为例，先对请求api进行「封装」：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">requestPro</span>(<span class=\"hljs-params\">{ url, data, header, method = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'GET'</span> }</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\r\n        wx.request({\r\n            url,\r\n            data,\r\n            <span class=\"hljs-attr\">header</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.assign({}, { <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Cookie'</span>: CookieLib.getCookiesStr() }, header), <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 请求头————带上Cookie</span>\r\n            success (res) {\r\n              <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> { <span class=\"hljs-attr\">data</span> : resData, header, statusCode } = res\r\n              <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> setCookieStr = header[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Set-Cookie'</span>] || header[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'set-cookie'</span>] || <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>\r\n\r\n              CookieLib.setCookieFromHeader(setCookieStr) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 响应头————解析Set-Cookie</span>\r\n              resolve(resData)\r\n            },\r\n            fail (err) {\r\n                reject(err)\r\n            }\r\n          })\r\n    })\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如上代码所示，Cookie在前端侧请求模块中的处理主要有3点：</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1. 请求携带</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>步骤：（每次发请求前）从Storage中取出完整cookies ==&gt; 转化为HTTP规范的请求头Cookie格式 ==&gt; 设置到 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Request Header</code> 中</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>上面代码中的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getCookiesStr()</code> 直接取cookies拼接即可，返回示例： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>cookie1=xxx;cookie2=yyy</code> 。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2. 响应设置</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>步骤：（每次收到响应后）解析 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Response Header</code> 的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Set-Cookie</code> 字段 ==&gt; 转为标准Cookie格式 ==&gt; setCookie()</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里处理 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Set-Cookie</code> 内容时，有几个点需要留意： - 最基本的格式： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;</code> - 可能同时包含多个cookie字段，以,分割（但需要排除时间值里的,） - 时间格式：Max-Age/Expires （不区分大小写）</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>具体实现可在文末Demo中找到。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3. 编码问题</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>「Cookie值编码方式」是容易产生困惑的地方，目前看到的广泛做法都是使用「URL编码」。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>但笔者翻阅 <a target=\"_blank\" href=\"https://tools.ietf.org/html/rfc6265\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">RFC6265</a> 发现，原始规范中并没有对编码进行指定，比如在第四章 Server Requirements （服务端）中是这样描述：</p><pre class=\"prettyprint hljs vbnet\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">To</span> maximize compatibility <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">with</span> user agents, servers that wish <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">to</span> store arbitrary data <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">in</span> a cookie-value SHOULD encode that data, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> example, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">using</span> Base64 [RFC4648].\r\n</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>“为了最好的兼容效果，服务端应该对cookie值进行编码，例如使用Base64。”</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>而在第五章 User Agent Requirements （客户端，也就是浏览器），则是“建议以第四章服务端的实现为准”。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>总之规范并没有指定使用「URL编码」，但基于该编码方案已经深入人心，也就顺其自然成了“默认选择”。那这里也不做例外，浏览器怎么做，咋们小程序也保持一致。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在浏览器中，推荐cookie值经过 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>encode</code> 编码后保存下来，所以直接取到的也是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>encode</code> 后的值，所以追加在请求头 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Cookie</code> 字段，就不需要 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>decode</code> 解码了，直接拼接即可（但基础库API的get操作最终需要进行 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>decode</code> 解码）。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>而对于响应头 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Set-Cookie</code> 的值，我们认为后端已经做了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>encode</code> 编码，所以前端不需要处理，直接存进 Storage 即可。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>五、性能优化（高频读写）</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>前面实现中每次读写cookie都会调用小程序Storage API（而且是同步的），小程序框架会读写到本地Storage。 对于高频场景，可以将cookie在内存中维护一份，读写都直接走「内存层」，有更新才同步到「Storage层」。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1. 初始化</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先需要在内存中声明一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>_COOKIES</code> （命名自行diy），建议在cookie基础库中声明，便于统一维护。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2. 读</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>前面初始化时已经从Storage读取一次cookies，后续getCookie就直接读内存的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>_COOKIES</code> 即可。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3. 写</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>写操作直接更新内存，间接更新Storage。 如果有高频写场景，可以考虑做个任务队列进行节流。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>六、单元测试</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信官方在2019年5月推出了「小程序自动化 SDK」 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>miniprogram-automator</code> ，经过半年多的迭代，目前已基本稳定下来。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在购物小程序场景试用了一下，cookie相关的用例很快就完成了，简直是开发者的福音：真香！！！</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/13/105635thk9daa5csaaukwa.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/105635thk9daa5csaaukwa.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实际项目中，对cookie的单元测试可以分为两类：</p><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">小程序全局范围的cookie验证（比如初始化小程序后，有没有种下版本号、访问行为等关键cookie）</li><li style=\"line-height: 1.7em;\">cookie基础库API验证（比如get/set/remove等各个API是否正常工作）</li></ol><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以验证 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>setCookie()</code> API为例：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>it(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'API验证：setCookie()'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> () =&gt; {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> miniProgram.evaluate(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n        wx.CookieLib.setCookie({ <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 调用API</span>\r\n            cookie1: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12345</span>,\r\n        })\r\n    })\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> { cookies } = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> miniProgram.callWxMethod(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'getStorageSync'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'cookies'</span>)\r\n    expect(cookies[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'cookie1'</span>].value).toBe(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12345</span>) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 期望成功设置cookie1为12345</span>\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里为了方便测试用例调用基础库API，在小程序启动前，把Cookie基础库（CookieLib）挂到了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx</code> 对象上，实现方式是使用node读写文件的API去【植入代码】：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">fs</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.appendFileSync</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'./your_project/app.js'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>\\n wx.CookieUtil = require(\\<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'./lib/cookie.js\\'</span>);\\n<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>)\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>七、Cookie安全</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>Cookie安全是一个比较大的话题，这里只简单列出和小程序相关的几个点。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>path、domin、HttpOnly、Secure、SameSite</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序中已经做了一些安全措施，比如只能走HTTPS、合法域名需要管理员到微信后台进行配置、Storage只能由写入它的小程序中访问，等等。 因此 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>path、domin、HttpOnly、Secure、SameSite</code> 这些字段在小程序环境下的价值没有浏览器环境大，本例中没有使用（懒..），而实际业务场景可以按自身情况决定是否要使用。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>白名单机制</h3><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">前端维护（大小/数量） 通常浏览器保持的Cookie数据不超过4k，部分浏览器限制同一站点最多cookie数为20个。 如果业务庞大的话，建议在Cookie基础库做一套「白名单」机制，在白名单内才可以写入，以此防止“非法写入”或“内容超大导致信息丢失”的问题。</p></li><li style=\"line-height: 1.7em;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">后台维护（网关白名单） 同样的，建议从网关层面，建立一个“可信cookie”白名单，自动过滤请求中的“非法cookie”字段。</p></li></ol><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>前端防篡改</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序前端更多是防“误改”————即在操作Cookie过程中，发生了意料之外的修改。通常发生在JS“引用拷贝”特性上，比如前面提到的内存维护一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>_Cookies</code> ，如果有一个API <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getAllCookies()</code> 直接将这份内存版cookies暴露出去，对象引用容易被连带修改。所以cookie基础库需要控制暴露API的能力范围，并对取值进行“深拷贝”。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Session</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>Session机制将用户状态放在了服务端维护，具备更好的安全性，而且目前各种后端对于session的存储和同步都有很成熟的技术方案，有条件的业务应以Session为主做会话保持。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>指纹上报</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>用户访问时生成设备指纹并上报（通常是登录/结算等环节），业务后台配合风控系统，遇到异常请求时下发验证环节。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>八、完整小程序实现Demo</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>代码片段： <a target=\"_blank\" href=\"https://developers.weixin.qq.com/s/x4sFASmh7xdq\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">developers.weixin.qq.com/s/x4sFASmh7…</a></p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/13/105636kh1labkw1nyi49l1.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/105636kh1labkw1nyi49l1.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>九、小结</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>本文先解析了浏览器的 Cookie机制 运作原理，然后使用「数据缓存」和「网络」能力，以 公共基础库 的形式，在小程序中实现了一套 Cookie方案。希望对大家有所帮助。</p> </td>", "pub_time": "2020-1-13 00:32", "author": "Rolan"}
{"title": "迷你PS小程序-集成的开放式画报、油墨电子签名、图片拖拽可单独食用 ... ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>米娜桑，哦哈哟~</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>个人制作，该文章主要讲解最近基于 <a href=\"https://uniapp.dcloud.io/\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">uni-app</a> 框架编写的集图文拖拽等多方位编辑、油墨电子签名、开放式海报于一体的<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的制作思路和实现代码。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>目录</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1、完整源码链接</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2、实现思路</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>3、核心代码</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>3-1、图文多方位编辑</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>3-2、油墨电子签名</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>3-3、开放式海报</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>3-4、小结</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>4.效果展示和体验</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1、完整源码链接：</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>完整代码：https://github.com/TensionMax/mini-ps</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其中演示的文字编辑、图片编辑、油墨电子签名、开放式海报可单独食用，含文档说明。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2、实现思路</h4><p><a href=\"data/attachment/portal/202001/13/110122x6ph6rdirirpcqa6.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/110122x6ph6rdirirpcqa6.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>该工具主要由五个不同组件模块：文字编辑、图片编辑，油墨电子签名、控制、开放式海报</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1、文字编辑模块设置好的文字参数对象插入到文字队列中。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2、图片编辑模块设置好的图片参数对象插入到图片队列中。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>3、油墨电子签名模块完成绘制后转为利用 <a href=\"https://uniapp.dcloud.io/api/canvas/canvasToTempFilePath?id=canvastotempfilepath\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">canvasToTempFilePath</a> 转成临时图片，获取参数后插入图片队列中，也可以直接导出。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>4、利用控制模块调整/文字队列和图片队列的参数。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>5、开放式海报模块，利用控制台的参数将PS画板上的效果绘制到canvas上来实现的效果，接着再利用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>canvasToTempFilePath</code> 转成图片导出。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3、核心代码</h4><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3-1、文字/图片编辑模块</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>文字/图片编辑模块主要是实现移动/缩放功能，其他附带的属于甜品，</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于两个模块功能类似，该篇仅讲解图片编辑模块。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>HTML</h4><pre class=\"prettyprint hljs ruby\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;img\r\n style=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"position: absolute\"</span>\r\n <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">:style=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{\r\n     left: item.x+'px', \r\n     top: item.y+'px',\r\n     width: item.w+'px',\r\n     height: item.h+'px',\r\n     }\"</span></span>\r\n  @touchstart=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'touchStart($event,item,index)'</span> \r\n  @longpress=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'longPress($event,item,index)'</span>\r\n  @touchmove.stop=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'touchMove($event,item,index)'</span> \r\n  @touchcancel=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"touchEnd($event,item,index)\"</span> \r\n  @touchend=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'touchEnd($event,item,index)'</span>\r\n  v-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"(item,index) of imagelist\"</span>\r\n  <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">:key=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"index\"</span></span> \r\n  <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">:src=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"item.src\"</span></span>\r\n  /&gt;</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>imageList</code> 的数组标签中，每个绑定的事件中用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>$event</code> 来调用事件本身的参数，其中 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>$event</code> 的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>touches</code> 或 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>changedTouches</code> 包含我们需要的位置参数，示例如下：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">touches</span>:[{\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">clientX</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">14</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//与显示区域(不含顶部栏)左上角的水平距离</span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">clientY</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">16</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//与显示区域(不含顶部栏)左上角的垂直距离</span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">pageX</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">14</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//与整个页面(不含顶部栏)左上角的水平距离</span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">pageY</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">16</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//与整个页面(不含顶部栏)左上角的垂直距离</span>\r\n        },\r\n        {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">clientX</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">14</span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">clientY</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">16</span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">pageX</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">14</span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">pageY</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">16</span>\r\n        }]</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>touches</code> 长度为2代表双指触碰，通过判定双指触摸点的变化方向可实现双指缩放效果。因为每个标签都设置为 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>style=\"position: absolute\"</code> 所以只需要根据位置参数来更新 <em>x、y、w、h</em> 即可</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>题外话-性能问题</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一次移动多次操作DOM影响性能</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>—— <a href=\"https://juejin.im/post/5d36cc575188257aea108a74\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">虚拟DOM了解一下</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为何不用事件委派</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>—— <a href=\"https://forum.vuejs.org/t/is-event-delegation-necessary/3701/3\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">不必要，Vue已经帮我们做了优化，在非常影响性能时再考虑</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://github.com/TensionMax/mini-ps/blob/master/components/zx-image.vue\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">图片编辑Demo</a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3-2、油墨电子签名板</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>touchmove</code> 事件在小程序真机的触发频率和精确度很迷，不太好根据速度来判定绘制的线宽，我只好用其他方式去实现，虽然效果不完美。</p><p><a href=\"data/attachment/portal/202001/13/110135dwguorl9weolloe1.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/110135dwguorl9weolloe1.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其实现思路是通过多次的循环绘制以达到油墨效果，每次循环绘制的长度和宽度都不相同。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>HTML</h4><pre class=\"prettyprint hljs ruby\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;canvas \r\ncanvas-id=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"canvas\"</span> \r\n@touchstart.stop=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"touchStart\"</span> \r\n@touchmove.stop=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"touchMove\"</span>\r\n@touchend.stop=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"touchEnd\"</span>\r\n&gt;\r\n&lt;<span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">/canvas&gt;</span></pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>JAVASCRIPT</h4><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>export <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> {\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>() {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n        lineWidth0: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">5</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//初始线宽 建议1~5</span>\r\n        ctx: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>,\r\n        x0: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//初始横坐标或上一段touchmove事件中触摸点的横坐标</span>\r\n        y0: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//初始纵坐标或上一段touchmove事件中触摸点的纵坐标</span>\r\n        t0: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//初始时间或上一段touchmove事件发生时间</span>\r\n        v0: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//初始速率或touchmove事件间发生速率</span>\r\n        lineWidth: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//动态线宽</span>\r\n        keenness: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">5</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//油墨程度 建议0~5</span>\r\n        k: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0.3</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//油墨因子，即每次绘制线条时线宽的变化程度</span>\r\n    }\r\n},\r\nonReady() {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx = uni.createCanvasContext(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'canvas'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.setLineCap(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'round'</span>)\r\n},\r\nmethods: {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//设置初始值</span>\r\n    touchStart(e) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth0\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.t0 = new Date().getTime()\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.v0 = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.x0 = e.touches[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>].clientX\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.y0 = e.touches[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>].clientY\r\n    },\r\n\r\n    touchMove(e) {\r\n        let dx = e.touches[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>].clientX - <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.x0,\r\n            dy = e.touches[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>].clientY - <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.y0,\r\n            ds = Math.pow(dx * dx + dy * dy, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0.5</span>),\r\n            dt = (new Date().getTime()) - <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.t0,\r\n            v1 = ds / dt; <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//同 this.v0 初始速率或touchmove事件间发生速率</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.keenness === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//油墨为0时</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.moveTo(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.x0, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.y0)\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.lineTo(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.x0 + dx, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.y0 + dy)\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.setLineWidth(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth)\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.stroke()\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.draw(<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>)\r\n        } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//由于touchMove的触发频率问题，这里采用for循环绘制，原理如图所示</span>\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//这里的k因为</span>\r\n            let a = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.keenness\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.keenness &gt; <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">5</span>) {\r\n                a = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">5</span>\r\n            }\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (let i = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>; i &lt; a; i++) {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.moveTo(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.x0 + dx * i / a, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.y0 + dy * i / a)\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.lineTo(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.x0 + dx * (i + <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>) / a, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.y0 + dy * (i + <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>) / a)\r\n                <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//此时touchmove事件间发生与上一个事件的发生的速率比较</span>\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (v1 &lt; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.v0) {\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth -= <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.k\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth &lt; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth * <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0.25</span>) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth * <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0.25</span>\r\n                } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth += <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.k\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth &gt; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth * <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1.5</span>) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth * <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1.5</span>\r\n                }\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.setLineWidth(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.lineWidth)\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.stroke()\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.draw(<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>)\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.x0 = e.touches[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>].clientX\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.y0 = e.touches[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>].clientY\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.t0 = new Date().getTime()\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.v0 = v1\r\n    },\r\n    touchEnd(e) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.x0 = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.y0 = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.t0 = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.v0 = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n    }\r\n}\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用的大部分是canvas的基础api，注意绘制单位都为px。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://github.com/TensionMax/mini-ps/blob/master/components/zx-sign.vue\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\"><strong style=\"text-indent: 0px;\">油墨电子签名Demo</strong></a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3-3、开放式海报模块</h4><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">如果说微信小程序是银色金滩，那么截至2020年1月6日或者未来，小程序的canvas就是金滩上充斥着未知数个的玻璃块的那一片 ——</p><del>鲁迅</del></div><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>说起小程序canvas，那bug不是一般的多，部分不常见bug我会在代码注释里说明。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>HTML</h4><pre class=\"prettyprint hljs ruby\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;canvas canvas-id=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"generate\"</span> <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">:style=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{ width: canvasW + 'rpx', height: canvasH + 'rpx'}\"</span>&gt;&lt;/canvas&gt;</span></pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>相关介绍</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">spread 语法</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/async_function\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">async 函数</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果图片是网络路径，记得获取临时路径。</p><pre class=\"prettyprint hljs rust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//别忘了在函数前加 async</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> src = <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'https</span>:<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//s2.ax1x.com/2020/01/05/lrCDx0.jpg'</span>\r\nsrc = (await uni.getImageInfo({src}))[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>].path;</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>JAVASCRIPT输出字段部分</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//为方便设置，以下除角度外，单位均以rpx为主</span>\r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>() {\r\n    <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">canvasW</span>:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">720</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">canvasH</span>:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1000</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">img</span>:[{\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">src</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'https://s2.ax1x.com/2020/01/05/lrCDx0.jpg'</span>,\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">x</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>,\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">y</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>,\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">w</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100</span>,\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">h</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100</span>,\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">r</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50</span>,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//圆角度</span>\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">degrees</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30</span>,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//旋转度</span>\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">mirror</span>: true<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//是否镜像</span>\r\n            }],\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>:[{\r\n                <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">content</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'TensionMax'</span>,\r\n                <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">x</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50</span>,\r\n                <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">y</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50</span>,\r\n                <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">w</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100</span>,\r\n                <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">lineHeight</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">35</span>,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//行间距</span>\r\n                <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#000000'</span>,\r\n                <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">28</span>,\r\n                <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">weight</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'normal'</span>,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//字体粗细</span>\r\n                <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">lineThrough</span>: true,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//是否贯穿</span>\r\n            }],\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">ctx</span>: null,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">k</span>: null <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//单位转换因子</span>\r\n    };\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>JAVASCRIPTrpx 或 upx与 px 的单位统一转换方法</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>px2rpx() {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//当转换的参数只有一个时直接返回数值如</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//当不为一个时返回数组，然后用spread语法将其展开为几个参数</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//Math.floor()是为了防止在安卓机上造成的数据紊乱，开发者工具无此bug</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">arguments</span>.length === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Math</span>.floor(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">arguments</span>[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>] / <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.k)\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> params = []\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> i <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">of</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">arguments</span>) {\r\n        params.push(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Math</span>.floor(i / <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.k))\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> params\r\n},\r\nrpx2px() {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">arguments</span>.length === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Math</span>.floor(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">arguments</span>[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>] * <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.k)\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> params = []\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> i <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">of</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">arguments</span>) {\r\n        params.push(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Math</span>.floor(i * <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.k))\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> params\r\n},</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>JAVASCRIPT绘制图片的函数</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>async drawImg() {\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.setFillStyle(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#FFFFFF'</span>)\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.fillRect(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, ...<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.rpx2px(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.canvasW, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.canvasH)) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//绘制背景</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (let i of <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.img) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//for循环绘制图片</span>\r\n    i.src = (await uni.getImageInfo({src: i.src}))[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>].path;<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取图片临时路径</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.save() <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//保存当前绘制内容</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (i.mirror) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//如果设置镜像</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//因为canvas的translate属性是基于原点（初始原点为右上角）变化</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//所以需要先将原点移动至图片中心，变化后再还原</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//旋转变化同理</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.translate(...<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.rpx2px(i.x + i.w / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>, i.y + i.h / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>))\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.scale(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">-1</span>, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>)\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.translate(...<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.rpx2px(-i.x - i.w / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>, -i.y - i.h / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>))\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (i.degrees) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//如果设置旋转</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.translate(...<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.rpx2px(i.x + i.w / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>, i.y + i.h / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>))\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.rotate(i.degrees * Math.PI / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">180</span>)\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.translate(...<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.rpx2px(-i.x - i.w / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>, -i.y - i.h / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>))\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.radiusRect(...<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.rpx2px(i.x, i.y, i.w, i.h, i.r)) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//圆角或矩形路径绘制</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.clip() <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//裁剪</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.drawImage(i.src, ...<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.rpx2px(i.x, i.y, i.w, i.h))\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.restore() <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//恢复非裁剪区域</span>\r\n}\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.draw(<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>) \r\n}\r\n\r\nradiusRect(x, y, w, h, r) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (r &gt; w / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span> || r &gt; h / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>) {\r\n        r = Math.min(w, h) / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.beginPath();\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.moveTo(x, y); <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 将操作点移至左上角</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.arcTo(x + w, y, x + w, y + r, r); <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 画右上角的弧</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.lineTo(x + w, y) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//可省略，但由于安卓真机的小程序bug，留之，下同。</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.arcTo(x + w, y + h, x + w - r, y + h, r); <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 画右下角的弧</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.lineTo(x + w, y + h) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//可省略</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.arcTo(x, y + h, x, y + h - r, r); <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 画左下角的弧</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.lineTo(x, y + h) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//可省略</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.arcTo(x, y, x + r, y, r); <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 画左上角的弧</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.ctx.lineTo(x, y) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//可省略</span>\r\n},</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>绘制自定义文字</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>文字绘制稍微麻烦些，主要是canvas不会自动帮我们换行排版，网上类似的实现方法太多，该篇就不讲，直接放在Demo里面。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://github.com/TensionMax/mini-ps/blob/master/components/zx-poster.vue\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\"><strong style=\"text-indent: 0px;\">开放式海报Demo</strong></a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3-4、小结</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>既然我们知道了这几个组件自定义调整参数的方式，那么最后只需要一个父组件作为控制台来调整他们的参数即可，可以通过 <a href=\"https://cn.vuejs.org/v2/guide/components.html#%E9%80%9A%E8%BF%87-Prop-%E5%90%91%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">props</a> 、 <a href=\"https://cn.vuejs.org/v2/guide/components-custom-events.html#sync-%E4%BF%AE%E9%A5%B0%E7%AC%A6\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">sync 修饰符</a> 等来实现父子通信，当然如果想做更复杂的可以考虑用 <a href=\"https://vuex.vuejs.org/zh/guide/\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">Vuex</a> 传参。接下来就可以根据这思路来实现繁琐的业务逻辑了。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4、效果展示</h4><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">效果图如下，如果由什么疑问欢迎到下方评论区讨论。</p><p><a href=\"data/attachment/portal/202001/13/110121kbri0hz2hbxered3.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/110121kbri0hz2hbxered3.png\"></a></p></div><p><a href=\"data/attachment/portal/202001/13/110122xj2yuhyj52j9745f.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/110122xj2yuhyj52j9745f.png\"></a></p><p><a href=\"data/attachment/portal/202001/13/110121vl95f26oz5fkck72.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/13/110121vl95f26oz5fkck72.png\"></a></p> </td>", "pub_time": "2020-1-13 00:58", "author": "Rolan"}
{"title": "小程序、H5登录授权、分享、支付流程 ", "content": "<td id=\"article_content\"> \n                     \n                    <h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>前言</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>对于前端来说，微信的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>支付</code> 、 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>分享</code> 、 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>登录</code> 是一定要掌握的，今天这篇文章，主要对这三方面的流程进行详细的介绍。主要内容如下：</p><p><a href=\"data/attachment/portal/202001/14/102314iueadpai6dokuioo.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/14/102314iueadpai6dokuioo.jpg\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>域名相关知识介绍</h2><pre class=\"hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>该网站不安全，请不要输入密码\r\n</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>授权登录流程</h2><pre class=\"prettyprint hljs clojure-repl\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">op=&gt;</span><span class=\"clojure\">operation: openid判断是否登录授权</span>\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">op2=&gt;</span><span class=\"clojure\">operation: 根据wx.login获取code</span>\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">op3=&gt;</span><span class=\"clojure\">operation: 调用服务端根据code换取openid</span>\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">op4=&gt;</span><span class=\"clojure\">operation: 通过用户授权，获取信息，存到数据库</span>\r\nop-&gt;op2-&gt;op3-&gt;op4\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果你从来没有阅读过小程序登录授权的文档，建议你看一下下面的地址：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\"><strong style=\"text-indent: 0px;\">服务端官方文档</strong> </a><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\"><strong style=\"text-indent: 0px;\">客户端文档</strong></a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>nodejs + 小程序实现授权登录</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>前端部分</h4><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">根据本地是否有userId判断是否登录，如果没有登录，则获取用户的openid</li></ol><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>onLoad() {\r\n   <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(!this.data.userId) {\r\n       this.getSession()\r\n   }\r\n},\r\n getSession() {\r\n   wx.login({\r\n     succes<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">s:</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>) =&gt; {\r\n       <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.code) {\r\n         app.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">get</span>(Api.getSession, {\r\n           code: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.code\r\n         }).then(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span> =&gt; {\r\n           store.setItem(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'openid'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.openid)\r\n         })\r\n       }\r\n     }\r\n   })\r\n }复制代码</pre><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">点击授权按钮，发起登录请求。</li></ol><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>getUserInfo(e) {\r\n    let userInfo = e.detail.userInfo;\r\n    userInfo.openid = store.getItem(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'openid'</span>)\r\n    app.get(Api.login, {\r\n        userInfo\r\n    }).then(res =&gt; {\r\n        store.setItem(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'userId'</span>, res.data.userId)\r\n        this.setData({\r\n            userId: res.userId\r\n        })\r\n    })\r\n}复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>服务端部分</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>config</code> 里面，定义公用的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>appid</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>appsecret</code></p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>module.exports = {\r\n    wx: {\r\n        appId: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx0ef10432747d8f57'</span>,\r\n        appsecret: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'cc47a6127687e999a1dffa756ff83c0e'</span>\r\n    },\r\n    mp: {\r\n        appId: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx0691f1dcf6e5e231'</span>,\r\n        appSecret: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'c7ed875e338120f15f49476a6596eb4f'</span>\r\n    }\r\n}复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后通过调用小程序 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">官方文档</a> 的接口，获取到 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>appid</code> 传给客户端</p><p><a href=\"data/attachment/portal/202001/14/102314e4mc9ut4chlb4c4u.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/14/102314e4mc9ut4chlb4c4u.jpg\"></a></p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> express = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'express'</span>);\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> router = express.Router();\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> request = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'request'</span>);\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> config = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'./config'</span>);\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> uril = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'./../../util/index'</span>)\r\nconfig = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.assign({}, config.mp);\r\n\r\nrouter.get(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/getSession'</span>, (req, res) =&gt; {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> code = req.query.code\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!code) {\r\n        res.json(uril.handleFail(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'code不能为空'</span>, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10001</span>))\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> sessionUrl = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`https://api.weixin.qq.com/sns/jscode2session?appid=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${config.appId}</span>&amp;secret=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${config.appSecret}</span>&amp;js_code=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${code}</span>&amp;grant_type=authorization_code`</span>;\r\n    request(sessionUrl, (err, response, body) =&gt; {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> result = util.handleResponse(err, response, body)\r\n        res.json(result)\r\n    })\r\n})复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>登录接口</code> 的编写</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 小程序授权登录</span>\r\nrouter.get(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/login'</span>,<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">req,res</span>)</span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> userInfo = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">JSON</span>.parse(req.query.userInfo);\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!userInfo){\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 如果接口没有信息，则返回错误信息</span>\r\n    res.json(util.handleFail(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'用户信息不能为空'</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10002</span>))\r\n  }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 查询当前用户是否已经注册</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> userRes = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> dao.query({ <span class=\"hljs-attr\">openid</span>: userInfo.openid},<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'users_mp'</span>);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (userRes.code == <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>){\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 如果已经注册，直接把查出来的信息返回给客户端</span>\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (userRes.data.length &gt;<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>){\r\n        res.json(util.handleSuc({\r\n          <span class=\"hljs-attr\">userId</span>: userRes.data[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>]._id\r\n        }))\r\n      }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 如果这个用户之前没有注册，则在数据库插入用户信息</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> insertData = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> dao.insert(userInfo,<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'users_mp'</span>);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (insertData.code == <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>){\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> result = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> dao.query({ <span class=\"hljs-attr\">openid</span>: userInfo.openid }, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'users_mp'</span>);\r\n          res.json(util.handleSuc({\r\n            <span class=\"hljs-attr\">userId</span>: result.data[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>]._id\r\n          }))\r\n        }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n          res.json(insertData);\r\n        }\r\n      }\r\n    }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n      res.json(userRes);\r\n    }\r\n  }\r\n})复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>上述代码的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>handleFail</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>handleResponse</code> 是封装的对数据的统一处理，如果有兴趣，参见 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>github</code> 地址。这里不展示代码。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>需要注意的是，这种实现方式，获取 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>openid</code> 的行为放在后端实现了。如果放在前端实现也可以，但是会相对比较麻烦一点。此时，suerId就已经在数据库存储，并且在本地保存了，下次登录的时候，如果有userId存在就不需要再次登录了。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>H5的登录授权和分享流程</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>H5的登录授权略有不同。如果用户登录授权页面，发现该用户没有登录授权，则需要跳转到授权页面。 <a href=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">官方文档</a> 给出的流程如下：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1 第一步：用户同意授权，获取code2 第二步：通过code换取网页授权access_token3 第三步：刷新access_token（如果需要）4 第四步：拉取用户信息(需scope为 snsapi_userinfo)5 附：检验授权凭证（access_token）是否有效</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在项目中代码如下：(这里代码没有实现刷新access_token和拉取用户信息)</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>页面加载的时候，判断是否已经授权。</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>mounted(){\r\n   <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.checkUserAuth();\r\n },\r\nmethods:{\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 检查用户是否授权过</span>\r\ncheckUserAuth(){\r\n  let openId = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.$cookie.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'openId'</span>);\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(!openId){\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 如果没有登录授权，则跳转到微信提供的跳转页面。</span>\r\n    window.location.href = API.wechatRedirect;\r\n  }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 如果用户已经授权，则调用获取微信配置信息接口</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.getWechatConfig();\r\n  }\r\n},复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>API.wechatRedirect:</p><pre class=\"prettyprint hljs apache\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wechatRedirect</span>:'/api/wechat/redirect?url=http<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">%3</span>A<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">%2</span>F<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">%2</span>Fm.51purse.com<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">%2</span>F<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">%23</span><span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">%2</span>Findex&amp;scope=snsapi_userinfo',复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>「注意」</h4><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">url地址需要 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>encodeURIComponent</code> 编码才可以。</li><li style=\"line-height: 1.7em; list-style-type: disc;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>m.51purse.com</code> 需要与你在微信公众号后台配置的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>授权域名</code> 一致！</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>nodejs 对登录授权回调接口的实现主要是拿到客户端的请求参数，请求微信提供的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>接口</code></p><p><a href=\"data/attachment/portal/202001/14/102314lpzcohvyh90zhknc.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/14/102314lpzcohvyh90zhknc.jpg\"></a></p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 用户授权重定向</span>\r\nrouter.get(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/redirect'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">req,res</span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> redirectUrl = req.query.url, scope = req.query.scope, callback = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'http://m.51purse.com/api/wechat/getOpenId'</span>;\r\n  cache.put(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'redirectUrl'</span>, redirectUrl);\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 获取到客户端带过来的数据，请求微信接口</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> authorizeUrl = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`https://open.weixin.qq.com/connect/oauth2/authorize?appid=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${config.appId}</span>&amp;redirect_uri=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${callback}</span>&amp;response_type=code&amp;scope=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${scope}</span>&amp;state=STATE#wechat_redirect`</span>;\r\n  res.redirect(authorizeUrl);\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当用户点击 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>确认授权</code> 之后，会执行跳转 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>callbacl：http://m.51purse.com/api/wechat/getOpenId</code> 。而这个接口也是node端实现的，具体内容如下：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 用code换取access_token的方法</span>\r\nexports.getAccessToken = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">code</span>)</span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> token_url = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`https://api.weixin.qq.com/sns/oauth2/access_token?appid=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${config.appId}</span>&amp;secret=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${config.appSecret}</span>&amp;code=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${code}</span>&amp;grant_type=authorization_code`</span>;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\r\n    request.get(token_url, <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">err, response, body</span>) </span>{\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> result = util.handleResponse(err, response, body);\r\n      resolve(result);\r\n    })\r\n  });\r\n}\r\n\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 根据code获取用户的OpenId</span>\r\nrouter.get(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/getOpenId'</span>,<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">req,res</span>)</span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> code = req.query.code;\r\n  <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"code:\"</span>+code);\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(!code){\r\n    res.json(util.handleFail(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'当前未获取到授权code码'</span>));\r\n  }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 用code换取access_token</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> result = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> common.getAccessToken(code);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(result.code == <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>){\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 换取access_token成功</span>\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> data = result.data;\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> expire_time = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1000</span> * <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60</span> * <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60</span> * <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>;\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 往客户端写入cookie：openId</span>\r\n      res.cookie(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'openId'</span>, data.openid, { <span class=\"hljs-attr\">maxAge</span>: expire_time });\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> openId = data.openid;\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> userRes = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> dao.query({ <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'openid'</span>: openId },<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'users'</span>);\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (userRes.code == <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>){\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (userRes.data.length&gt;<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>){\r\n          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 从数据库查找到用户信息后，回调到客户端的页面</span>\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> redirectUrl = cache.get(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'redirectUrl'</span>);\r\n          res.redirect(redirectUrl);\r\n        }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> userData = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> common.getUserInfo(data.access_token, openId);\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> insertData = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> dao.insert(userData.data,<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'users'</span>);\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (insertData.code == <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>){\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 从数据库查找到用户信息后，回调到客户端的页面</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> redirectUrl = cache.get(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'redirectUrl'</span>);\r\n            res.redirect(redirectUrl);\r\n          }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 返回错误信息</span>\r\n            res.json(insertData);\r\n          }\r\n        }\r\n      }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 返回错误信息</span>\r\n        res.json(userRes);\r\n      }\r\n    }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 返回错误信息</span>\r\n      res.json(result);\r\n    }\r\n  }\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>「注意」：上面的代码为了简单，删除了一些不必要的代码，如有兴趣，访问gitHub。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>H5分享流程</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>同样，如果你没有阅读过微信H5开发的 <a href=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">官方文档</a> ,建议你先阅读。关于分享，你应该阅读以下内容：</p><p><a href=\"data/attachment/portal/202001/14/102314ruxnxnn6xoxsihnm.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/14/102314ruxnxnn6xoxsihnm.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当再次回调到页面的时候，从cookie已经拿到openId了。客户端会继续执行下面的代码。获取到服务端返回的配置信息，从而初始化分享的功能。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在这之前，你需要 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>npm install wx-jssdk</code></p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 这个信息统一定义在api.js中，这里为了方便，放在前面，便于查看。</span>\r\nAPI.wechatConfig: /api/wechat/jssdk\r\n\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 获取微信配置信息</span>\r\ngetWechatConfig(){\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.$http.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>(API.wechatConfig+<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'?url='</span>+location.href.split(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#'</span>)[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>]).then(function(response){\r\n    let res = response.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(res.code == <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>){\r\n      let <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span> = res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>;\r\n      wx.config({\r\n        debug: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span>\r\n        appId: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.appId, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填，公众号的唯一标识</span>\r\n        timestamp: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.timestamp, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填，生成签名的时间戳</span>\r\n        nonceStr: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.nonceStr, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填，生成签名的随机串</span>\r\n        signature: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.signature,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填，签名</span>\r\n        jsApiList: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.jsApiList <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填，需要使用的JS接口列表</span>\r\n      })\r\n      wx.ready(()=&gt;{\r\n        util.initShareInfo(wx);\r\n      })\r\n    }\r\n  })\r\n}复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>util/index.js 里面对分享的功能进行了封装。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> {\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取浏览器地址栏参数值</span>\r\n  getUrlParam(name){\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> reg = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">RegExp</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'(^|&amp;)'</span>+name+<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'=([^&amp;]*)'</span>);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> r = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">window</span>.location.search.substr(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>).match(reg);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(r!=<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>)<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">decodeURIComponent</span>(r[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>]);\r\n  },\r\n  initShareInfo(wx){\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> shareInfo = {\r\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'xxxx'</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 分享标题</span>\r\n      desc: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'xxxx'</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 分享描述</span>\r\n      link: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'http://m.51purse.com/#/index'</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span>\r\n      imgUrl: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 分享图标</span>\r\n    }\r\n    wx.onMenuShareAppMessage(shareInfo);\r\n    wx.onMenuShareTimeline(shareInfo);\r\n    wx.onMenuShareQQ(shareInfo);\r\n    wx.onMenuShareQZone(shareInfo);\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 下面两种方法为新的方法,上面的方法将会被淘汰。</span>\r\n    wx.updateAppMessageShareData(shareInfo);\r\n    wx.updateTimelineShareData(shareInfo);\r\n  }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>nodejs端对 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>/wechat/jssdk</code> 接口的实现如下：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// common.getToken()方法 获取基础接口的Token</span>\r\n\r\nexports.getToken = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>)</span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> token = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${config.appId}</span>&amp;secret=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${config.appSecret}</span>`</span>;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>)=&gt;</span>{\r\n    request.get(token, <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">err, response, body</span>) </span>{\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> result = util.handleResponse(err, response, body);\r\n      resolve(result);\r\n    })\r\n  })\r\n}\r\n----\r\n\r\nrouter.get(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/jssdk'</span>,<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">req,res</span>)</span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> url = req.query.url;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> result = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> common.getToken();\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (result.code == <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>){\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> token = result.data.access_token;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> params = {\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 生成随机字符串</span>\r\n      noncestr:util.createNonceStr(),\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 生成时间戳</span>\r\n      timestamp:util.createTimeStamp(),\r\n      url\r\n    }\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> str = util.raw(params);\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'str:::'</span> + <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">JSON</span>.stringify(params))\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> sign = createHash(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'sha1'</span>).update(str).digest(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'hex'</span>);\r\n      res.json(util.handleSuc({\r\n        <span class=\"hljs-attr\">appId</span>: config.appId, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填，公众号的唯一标识</span>\r\n        timestamp: params.timestamp, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填，生成签名的时间戳</span>\r\n        nonceStr: params.noncestr, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填，生成签名的随机串</span>\r\n        signature: sign,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填，签名</span>\r\n        jsApiList: [\r\n          <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'updateAppMessageShareData'</span>,\r\n          <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'updateTimelineShareData'</span>,\r\n          <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'onMenuShareTimeline'</span>,\r\n          <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'onMenuShareAppMessage'</span>,\r\n          <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'onMenuShareQQ'</span>,\r\n          <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'onMenuShareQZone'</span>,\r\n          <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'chooseWXPay'</span>\r\n        ] <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填，需要使用的JS接口列表</span>\r\n      }))\r\n    }\r\n  }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n    res.json(result);\r\n  }\r\n})复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以上代码主要获得基础的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>token</code> ,然后用基础 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>token</code> 结合签名、时间戳、随机数等相关的参数，返回给客户端相应的参数。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>需要注意的是， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>基础token</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>accessToken</code> 的区别。建议 <a href=\"https://blog.csdn.net/benben_2015/article/details/79703508\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">参考文章</a> 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>到此，微信H5接入jssdk实现分享就已经完成了。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序支付</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序支付前端流程</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">获取openId</li><li style=\"line-height: 1.7em; list-style-type: disc;\">调起数字签名</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>后端支付流程</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">拼接常规参数</li><li style=\"line-height: 1.7em; list-style-type: disc;\">生成签名</li><li style=\"line-height: 1.7em; list-style-type: disc;\">拼接xml数据</li><li style=\"line-height: 1.7em; list-style-type: disc;\">调用下单接口</li><li style=\"line-height: 1.7em; list-style-type: disc;\">获取预支付Id：prepay_id</li><li style=\"line-height: 1.7em; list-style-type: disc;\">生成支付sdk</li><li style=\"line-height: 1.7em; list-style-type: disc;\">定义回调接口，接受微信支付消息</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>支付的主要逻辑在服务端</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下面把服务端的流程通过代码的方式表述出来。首先在util中封装了一些支付需要的公共方法</p><pre class=\"prettyprint hljs typescript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n * 公共函数定义\r\n */</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> createHash = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'create-hash'</span>);\r\n<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">module</span>.exports = {\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 生成随机数</span>\r\n  createNonceStr(){\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Math</span>.random().toString(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">36</span>).substr(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">15</span>);\r\n  },\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 生成时间戳</span>\r\n  createTimeStamp(){\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">parseInt</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Date</span>().getTime() / <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1000</span>) + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>\r\n  },\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 生成签名</span>\r\n  getSign(params, key){\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">string</span> = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.raw(params) + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'&amp;key='</span> + key;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> sign = createHash(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'md5'</span>).update(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">string</span>).digest(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'hex'</span>);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> sign.toUpperCase();\r\n  },\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 生成系统的交易订单号</span>\r\n  getTradeId(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx'</span>){\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> date = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Date</span>().getTime().toString();\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> text = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> possible = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'0123456789'</span>;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> i=<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;i&lt;<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">5</span>;i++){\r\n      text += possible.charAt(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Math</span>.floor(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Math</span>.random() * possible.length))\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span> == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx'</span>?<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'ImoocWxJuZi'</span>:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'ImoocMpJuZi'</span>) + date + text;\r\n  },\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// Object 转换成json并排序</span>\r\n  raw(args){\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> keys = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.keys(args).sort();\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> obj = {};\r\n    keys.forEach((key)=&gt;{\r\n      obj[key] = args[key];\r\n    })\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// {a:1,b:2} =&gt;  &amp;a=1&amp;b=2</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 将对象转换为&amp;分割的参数</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> val = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> k <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">in</span> obj){\r\n      val += <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'&amp;'</span> + k + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'='</span> +obj[k];\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> val.substr(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>);\r\n  }\r\n}复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下面是对支付的方法的封装，其中调用了util中的函数。客户端调用的就是下面的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>order</code> 方法。</p><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>/**\r\n * 微信小程序、H5通用支付封装\r\n */\r\nlet config = require('./../pay/config')\r\nlet request = require('request')\r\nlet util = require('../../util/util')\r\nlet createHash = require('create-hash')\r\nlet xml = require('xml2js')\r\nconfig = config.mch;\r\nmodule.exports = {  \r\n  order: function (appid,attach, body, openid, total_fee, notify_url, ip){\r\n    return new Promise((resolve,reject)=&gt;{\r\n      let nonce_str = util.createNonceStr();\r\n      let out_trade_no = util.getTradeId('mp');\r\n      // 支付前需要先获取支付签名\r\n      let sign = this.getPrePaySign(appid, attach, body, openid, total_fee, notify_url, ip, nonce_str, out_trade_no);\r\n      // 通过参数和签名组装xml数据，用以调用统一下单接口\r\n      let sendData = this.wxSendData(appid, attach, body, openid, total_fee, notify_url, ip, nonce_str, out_trade_no, sign);\r\n      let self = this;\r\n      let url = 'https://api.mch.weixin.qq.com/pay/unifiedorder';\r\n      request({\r\n        url,\r\n        method: 'POST',\r\n        body: sendData\r\n      }, function (err, response, body) {\r\n        if (!err &amp;&amp; response.statusCode == 200) {\r\n          xml.parseString(body.toString('utf-8'),(error,res)=&gt;{\r\n            if(!error){\r\n              let data = res.xml;\r\n              console.log('data:' + JSON.stringify(data));\r\n              if (data.return_code[0] == 'SUCCESS' &amp;&amp; data.result_code[0] == 'SUCCESS'){\r\n                // 获取预支付的ID\r\n                let prepay_id = data.prepay_id || [];\r\n                let payResult = self.getPayParams(appid, prepay_id[0]);\r\n                resolve(payResult);\r\n              }\r\n            }\r\n          })\r\n        } else {\r\n          resolve(util.handleFail(err));\r\n        }\r\n      })\r\n    })\r\n  },\r\n  // 生成预支付的签名\r\n  getPrePaySign: function (appid, attach, body, openid, total_fee, notify_url, ip, nonce_str, out_trade_no) {\r\n    let params = {\r\n      appid,\r\n      attach,\r\n      body,\r\n      mch_id: config.mch_id,\r\n      nonce_str,\r\n      notify_url,\r\n      openid,\r\n      out_trade_no,\r\n      spbill_create_ip: ip,\r\n      total_fee,\r\n      trade_type: 'JSAPI'\r\n    }\r\n    let string = util.raw(params) + '&amp;key=' + config.key;\r\n    let sign = createHash('md5').update(string).digest('hex');\r\n    return sign.toUpperCase();\r\n  },\r\n  // 签名成功后 ，根据参数拼接组装XML格式的数据，调用下单接口\r\n  wxSendData: function (appid, attach, body, openid, total_fee, notify_url, ip, nonce_str, out_trade_no,sign) {\r\n    let data = '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">xml</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">appid</span>&gt;</span>&lt;![CDATA[' + appid + ']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">appid</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">attach</span>&gt;</span>&lt;![CDATA[' + attach + ']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">attach</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">body</span>&gt;</span>&lt;![CDATA[' + body + ']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">body</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">mch_id</span>&gt;</span>&lt;![CDATA[' + config.mch_id + ']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">mch_id</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">nonce_str</span>&gt;</span>&lt;![CDATA[' + nonce_str + ']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">nonce_str</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">notify_url</span>&gt;</span>&lt;![CDATA[' + notify_url + ']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">notify_url</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">openid</span>&gt;</span>&lt;![CDATA[' + openid + ']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">openid</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">out_trade_no</span>&gt;</span>&lt;![CDATA[' + out_trade_no + ']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">out_trade_no</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">spbill_create_ip</span>&gt;</span>&lt;![CDATA[' + ip + ']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">spbill_create_ip</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">total_fee</span>&gt;</span>&lt;![CDATA[' + total_fee + ']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">total_fee</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">trade_type</span>&gt;</span>&lt;![CDATA[JSAPI]]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">trade_type</span>&gt;</span>' + \r\n      '<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">sign</span>&gt;</span>&lt;![CDATA['+sign+']]&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">sign</span>&gt;</span>' + \r\n    '<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">xml</span>&gt;</span>'\r\n    return data;\r\n  },\r\n  getPayParams:function(appId,prepay_id){\r\n    let params = {\r\n      appId,\r\n      timeStamp:util.createTimeStamp(),\r\n      nonceStr:util.createNonceStr(),\r\n      package: 'prepay_id=' + prepay_id,\r\n      signType:'MD5'\r\n    }\r\n    let paySign = util.getSign(params,config.key);\r\n    params.paySign = paySign;\r\n    return params;\r\n  }\r\n}复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最后定义 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>/pay/payWallet</code> 的支付接口，里面调用公用的order方法。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 小程序支付</span>\r\nrouter.get(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/pay/payWallet'</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">req,res</span>)</span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> openId = req.query.openId;<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//用户的openid</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> appId = config.appId;<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//应用的ID</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> attach = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"小程序支付课程体验\"</span>;<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//附加数据</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> body = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"欢迎学习慕课首门支付专项课程\"</span>;<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//支付主体内容</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> total_fee = req.query.money;<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//支付总金额</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> notify_url = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"http://localhost:3000/api/mp/pay/callback\"</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> ip = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"123.57.2.144\"</span>;\r\n  wxpay.order(appId,attach,body,openId,total_fee,notify_url,ip).then(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>)=&gt;</span>{\r\n    res.json(util.handleSuc(result));\r\n  }).catch(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>)=&gt;</span>{\r\n    res.json(util.handleFail(result.toString()))\r\n  });\r\n})复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里的流程请参见 <a href=\"https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_10&amp;index=1\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">官方描述</a> 。官方描述的非常清楚，这儿就不描述更多了，其实主要就是拼接一些参数，获取 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>签名</code> 。然后根据签名加上其他需要的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>参数</code> (参见上述代码)再凭借xml的数据。然后再调用统一下单接口 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>https://api.mch.weixin.qq.com/pay/unifiedorder</code> 。生成 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>prepay_id</code>之后，生成小程序端需要的一些参数，然后把这些参数返回个小程序客户端，供小程序的客户端调用微信小程序的支付功能。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序前端支付非常简单，只是简单的调用服务端提供的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>payWallet</code> 接口，传入 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>openId</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>money</code> 即可。然后获取到相应的参数，调用微信提供的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>requestPayment</code> 拉起支付即可。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>主要代码逻辑如下：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">pay</span>() {\r\n    <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">app</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.get</span>(Api.payWallet,{\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">openId</span>: Store.getItem(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'openId'</span>),\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">money</span>: this.data.index\r\n    })<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.then</span>((res) =&gt; {\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 支付</span>\r\n      <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.requestPayment</span>({\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">timeStamp</span>: res.timeStamp,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">nonceStr</span>: res.nonceStr,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">package</span>: res.package,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">signType</span>: res.signType,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">paySign</span>: res.paySign,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">success</span>: function (errmsg) {\r\n          if (errmsg == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'requestPayment:ok'</span>) {\r\n            wx.showToast({\r\n              <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">title</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'支付成功'</span>,\r\n              <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">icon</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'success'</span>\r\n            });\r\n          }\r\n        },\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">fail</span>: function (res) {\r\n          <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.errMsg == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'requestPayment:fail cancel'</span>) {\r\n            <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.showToast</span>({\r\n              <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">title</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'支付取消'</span>,\r\n              <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">icon</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>\r\n            });\r\n          } else {\r\n            <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.showToast</span>({\r\n              <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">title</span>: res.errmsg,\r\n              <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">icon</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>\r\n            });\r\n          }\r\n        }\r\n      })\r\n    });\r\n  }\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>到这里，小程序端的支付功能就已经实现了。</p> </td>", "pub_time": "2020-1-14 00:32", "author": "Rolan"}
{"title": "微信小程序加入购物车动画的实现（向上、向下） ", "content": "<td id=\"article_content\"> \n                     \n                    <figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202001/14/102537yzlldroorr5eoeh6.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202001/14/102537yzlldroorr5eoeh6.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>场景描述：一般情况下，加入购物车的动画效果都会是上图的3的路线，在这篇文章里，我们来实现1和2路线的加入购物车的动效（3路线的动画效果网上有很多，具体可以参考这篇文章来实现： <a target=\"_blank\" href=\"https://www.cnblogs.com/greengage/p/7815842.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">www.cnblogs.com/greengage/p…</a> ）。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实现方式：不管是上图中的哪一种效果，我们都是用CSS3里的cubic-bezier（三次贝塞尔曲线）来实现的。具体什么是三次贝塞尔曲线，可以参考这篇文章： <a target=\"_blank\" href=\"https://www.bbsmax.com/A/RnJWwpbRJq/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">www.bbsmax.com/A/RnJWwpbRJ…</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>#实现流程：</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1、获取屏幕的高度大小</h4><pre class=\"prettyprint hljs php\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>wx.getSystemInfo({<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//  获取页面的有关信息</span>\r\n      success: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-params\">(res)</span> </span>{\r\n        wx.setStorageSync(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'systemInfo'</span>, res)\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> ww = res.windowWidth;\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> hh = res.windowHeight;\r\n        that.globalData.ww = ww;\r\n        that.globalData.hh = hh;\r\n      }\r\n    });\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2、获取点击的位置（购物车的位置我们定为最上方或者最下方），定义移动距离</h4><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/*加入购物车动效*/</span>\r\n  _flyToCartEffect: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">events</span>) </span>{\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获得当前点击的位置，距离可视区域左上角</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> touches = events.touches[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>];\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> diff = {\r\n      <span class=\"hljs-attr\">x</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'25px'</span>,\r\n      <span class=\"hljs-attr\">y</span>: app.globalData.hh -touches.clientY<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">-40</span> + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'px'</span><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//向下</span>\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// y: 25- touches.clientY  + 'px'//向上</span>\r\n\r\n    },\r\n      style = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'display: block;-webkit-transform:translate('</span> + diff.x + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">','</span> + diff.y + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">') rotate(350deg) scale(0)'</span>;  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//移动距离</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n      <span class=\"hljs-attr\">isFly</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n      <span class=\"hljs-attr\">translateStyle</span>: style\r\n    });\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>;\r\n    setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n      that.setData({\r\n        <span class=\"hljs-attr\">isFly</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>,\r\n        <span class=\"hljs-attr\">translateStyle</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'-webkit-transform: none;'</span>,  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//恢复到最初状态</span>\r\n        isShake: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n      });\r\n      setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> counts = that.data.cartTotalCounts + that.data.productCounts;\r\n        that.setData({\r\n          <span class=\"hljs-attr\">isShake</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>,\r\n          <span class=\"hljs-attr\">cartTotalCounts</span>: counts\r\n        });\r\n      }, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">200</span>);\r\n    }, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1000</span>);\r\n  },\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3、在css里调用beizer函数</h4><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.fiexd-cart</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.animate</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">animation</span>: aCartScale <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">200ms</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">cubic-bezier</span>(.17,.67,.83,.67);\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">animation-fill-mode</span>: backwards;\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>aCartScale是，在曲线的最后，实现了个购物车抖动的动画</h4><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>@-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">webkit</span>-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">keyframes</span> aCartScale{\r\n  0%{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">-webkit-transform</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">scale</span>(1.1);\r\n  }\r\n  100% {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">-webkit-transform</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">scale</span>(1);\r\n  }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>至此，流程全部介绍完毕，下面是全部的代码（里面可能有一些没用的css样式代码，读者可以自行根据需要删除）：</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>js代码：</h4><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> app = getApp();\r\nPage({\r\n\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n   * 页面的初始数据\r\n   */</span>\r\n  data: {\r\n    <span class=\"hljs-attr\">isFly</span>:<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n  },\r\n\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/*添加到购物车*/</span>\r\n  onAddingToCartTap: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">events</span>) </span>{\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//防止快速点击</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.isFly) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span>;\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._flyToCartEffect(events);\r\n  },\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/*加入购物车动效*/</span>\r\n  _flyToCartEffect: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">events</span>) </span>{\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获得当前点击的位置，距离可视区域左上角</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> touches = events.touches[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>];\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> diff = {\r\n      <span class=\"hljs-attr\">x</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'25px'</span>,\r\n      <span class=\"hljs-attr\">y</span>: app.globalData.hh -touches.clientY<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">-40</span> + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'px'</span><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//向下</span>\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// y: 25- touches.clientY  + 'px'//向上</span>\r\n\r\n    },\r\n      style = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'display: block;-webkit-transform:translate('</span> + diff.x + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">','</span> + diff.y + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">') rotate(350deg) scale(0)'</span>;  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//移动距离</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n      <span class=\"hljs-attr\">isFly</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n      <span class=\"hljs-attr\">translateStyle</span>: style\r\n    });\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>;\r\n    setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n      that.setData({\r\n        <span class=\"hljs-attr\">isFly</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>,\r\n        <span class=\"hljs-attr\">translateStyle</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'-webkit-transform: none;'</span>,  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//恢复到最初状态</span>\r\n        isShake: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n      });\r\n      setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> counts = that.data.cartTotalCounts + that.data.productCounts;\r\n        that.setData({\r\n          <span class=\"hljs-attr\">isShake</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>,\r\n          <span class=\"hljs-attr\">cartTotalCounts</span>: counts\r\n        });\r\n      }, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">200</span>);\r\n    }, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1000</span>);\r\n  },\r\n\r\n})\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>wxml代码：</h4><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"container detail-container\"</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"fixed-btns-box\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onCartTap\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"fiexd-cart </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{isShake?'animate':''}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../../imgs/icon/cart@top.png\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{cartTotalCounts&gt;0}</span><span class=\"xml\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{cartTotalCounts}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> \r\n  <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"position: fixed;right: 50rpx;bottom:100rpx;width: 100rpx;\"</span>\r\n  <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"add-cart-btn </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{product.stock==0?'disabled':''}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onAddingToCartTap\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"width: 360rpx\"</span>&gt;</span>加入分享<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"cart-icon\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../../imgs/icon/cart.png\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"small-top-img\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"small-top-img </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{isFly?'animate':''}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1575871576&amp;di=dda9d07660c88bea6553c3279b0a8cf0&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fpic.pc6.com%2Fup%2F2011-9%2F2011926155953.jpg\"</span>\r\n      <span class=\"hljs-attr\">mode</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"aspectFill\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{translateStyle}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n\r\n\r\n  \r\n\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"fixed-btns-box2\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onCartTap\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"fiexd-cart </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{isShake?'animate':''}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../../imgs/icon/cart@top.png\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{cartTotalCounts&gt;0}</span><span class=\"xml\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{cartTotalCounts}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>wxss代码：</h4><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.detail-container</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#F9F9F9</span>\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.detail-header-box</span>,<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.detail-bottom-box</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#fff</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.detail-topic-img</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: center;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.detail-topic-img</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n}\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.fixed-btns-box</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: fixed;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">right</span>:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12px</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">80</span>rpx;\r\n\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.fixed-btns-box2</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: fixed;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">right</span>:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12px</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">80</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50</span>rpx;\r\n\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.fiexd-cart</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">64</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">64</span>rpx;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.fiexd-cart</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">24</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#AB956D</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: white;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">right</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">64</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">36</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">36</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">line-height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">36</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-radius</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">36</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-align</span>: center;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.fiexd-cart</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.animate</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">animation</span>: aCartScale <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">200ms</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">cubic-bezier</span>(.17,.67,.83,.67);\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">animation-fill-mode</span>: backwards;\r\n}\r\n\r\n@-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">webkit</span>-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">keyframes</span> aCartScale{\r\n  0%{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">-webkit-transform</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">scale</span>(1.1);\r\n  }\r\n  100% {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">-webkit-transform</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">scale</span>(1);\r\n  }\r\n}\r\n\r\n\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.product-counts</span>,<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.add-cart-btn</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">24</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">align-items</span>: center;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: center;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.product-counts</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50%</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.add-cart-btn</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: relative;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">flex</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.add-cart-btn</span><span class=\"hljs-selector-pseudo\" style=\"color: rgb(188, 96, 96);\">:active</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#fff</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.add-cart-btn</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.disabled</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#D5D5DB</span>;\r\n}\r\n\r\n\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.small-top-img</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">160</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">160</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">right</span>:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">opacity</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.small-top-img</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.animate</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">opacity</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">-webkit-transition</span>:all <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1000ms</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">cubic-bezier</span>(0.175, 0.885, 0.32, 1.275);\r\n}\r\n\r\n\r\n\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.add-cart-btn</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.cart-icon</span>{\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">40</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">32</span>rpx;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">32</span>rpx;\r\n}\r\n\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.disabled</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">pointer-events</span>: none;\r\n}\r\n\r\n复制代码</pre> </td>", "pub_time": "2020-1-14 00:42", "author": "Rolan"}
{"title": "我是怎么在 3 天内开发 AI 微信小程序的 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>基于对 AI 的爱好与兴趣，我走上了独自钻研机器学习的道路。和所有热爱 AI 的人们一样，在一段孤独的摸索旅程中，我勉强完成了几次深度学习模型的训练。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其中令我印象较深的成果就是情感分类模型。他能够根据你的文字生成其背后作者的喜怒哀乐。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>深度学习模型展示出来的 \"人性化\"让我感到惊喜，于是我开始思考怎么将它的“人性化”转化为帮助人们的工具。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>在情感模型的基础上建立一个上层应用，让它为人类社会中增添不一样的烟火。</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>基于多方面的考量，我最终选择开发一款 微信 \"情感\" <a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>故事拉开序幕</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在进行小程序开发之前，我们非常有必要先对小程序做一个充分的了解。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>什么是小程序</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>简单来说，比起传统的 App，微信小程序是一种全新的连接用户与服务的方式，它具有非常出色的使用体验，并且它可以在微信内被便捷地获取与传播。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序发展史</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实际上，小程序并非凭空而来的。当微信逐渐流行、变成几乎人人都离不开的社交工具时，承载微信的 WebView 也逐渐成为了量级最大的移动 Web 入口。每天访问 WebView 的数量甚至超过了访问所有浏览器的总和。虽然无法通过第三方获取到微信 WebView 的日活数据，但这个客观事实间接促进了小程序的诞生。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其实在小程序正式步入人们视线之前，微信早已有了类似的 js 调用接口，这里给大家展示一个调用了微信 <strong style=\"text-indent: 0px;\">js-bridge</strong> 原生组件去浏览图片的例子：</p><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>WeixinJSBridge.invoke(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'imagePreview'</span>, {\r\ncurren<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'http://inews.com'</span>,\r\nurl<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">s:</span> [ // 所有图片的URL列表，数组格式\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'https://img/1.jpg'</span>,\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'https://img/2.jpg'</span>,\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'https://img/3.jpg'</span>\r\n]\r\n}, <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span><span class=\"hljs-params\">(res)</span> {</span>\r\n    console.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.err_msg)\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>此类 js 接口其实最开始是专门给腾讯内部人员去进行调用的，但却意外被许多个人开发者发现很多并进行了使用，这也慢慢成为了微信中网页的标准。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在 15 年开始的时候，微信官方发布了一套专门用于进行网页开发的工具包，名为 <strong style=\"text-indent: 0px;\">js-sdk</strong> ，在这个工具包内开放了如微信支付、录音、语音识别、等数十个接口。这给所有的 Web 开发者都打开了一扇从未开启过的全新的大门，让所有的开发者都可以自由地使用微信开发的原生能力，这使得他们可以去完成一些之前无法完成或是难以做到的事情。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>js-sdk 完美继承了 <strong style=\"text-indent: 0px;\">WeixinJSBridge</strong> 的特性，并且由只对内部开放转为了对外部开放。并且它通过其暴露的微信调用接口使得所有 Web 开发者有了更多操作微信功能的能力。但是，这个模式并没有很好地解决移动网页的体验问题：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">用户访问页面时，在页面显示前会有一段比较明显能够被感知的白屏过程。受限于网速与不同终端的性能，这个问题会越来越明显。</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>于是乎，js-sdk 的增强版本就诞生了，其中有一个非常重要的新特性，被称之为： <strong style=\"text-indent: 0px;\">微信 Web 资源离线存储</strong> 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>​以下文字引用自内部的文档（没有最终对外开放）：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信 Web 资源离线存储是面向 Web 开发者提供的基于微信内的 Web 加速方案。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过使用微信离线存储，Web 开发者可借助微信提供的资源存储能力，直接从微信本地加载 Web 资源而不需要再从服务端拉取，从而减少网页加载时间，为微信用户提供更优质的网页浏览体验。每个公众号下所有 Web App 累计最多可缓存 5M 的资源。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>相信大家都已经看明白了，这其实就是 HTML5 中 Application Cache 的加强版。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然而，在经过了多次测试后发现，还有问题没有被完全的解决：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">页面切换较为生硬；</li><li style=\"line-height: 1.7em; list-style-type: disc;\">点击有明显延滞的感觉。</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最终微信意识到 js-sdk 无法处理这些问题，这需要一个全新的系统去完成，而这个系统必须具备以下几个能力：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">加载速度快</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">原生的体验</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">易用且安全的微信数据开放</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">兼顾开发效率与开发难度</p></li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>而这就是小程序的由来。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>故事开始了</h2><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>前言</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先请大家见谅，这一篇文章并不会教你如何零基础开发小程序。如果你是一个软件开发新手。那么我建议你先了解一些基础的 <a target=\"_blank\" href=\"https://www.runoob.com/js/js-tutorial.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">js 语法</a> 以及相应的 <a target=\"_blank\" href=\"https://www.runoob.com/html/html-tutorial.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">前端知识</a> 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>掌握前端基础后，相信在 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/component/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">小程序前端组件官方文档</a> 的帮助下，任何人都可以快速上手开发小程序。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下面我主要跟大家分享两个最核心、 <strong style=\"text-indent: 0px;\">最省钱</strong> 的两个小程序开发技巧：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">搭建小程序云开发环境；</li><li style=\"line-height: 1.7em; list-style-type: disc;\">如何使用云开发调用 AI 模型接口。</li></ul><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序云开发</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在刚开始考虑开发小程序时，和你们一样，我有着许多的顾虑：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">需要购买域名、服务器吗？</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">维护成本大吗？</p></li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>带着这些顾虑，我小心翼翼地翻开了 <strong style=\"text-indent: 0px;\"><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic;\">微信官方文档</a> </strong>。在大脑经过分布式阅读过后，我发现了 <strong style=\"text-indent: 0px;\">云开发</strong> 这个关键词。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>什么是云开发？</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信官方文档中是这么解释的：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>开发者可以使用云开发开发微信小程序、小游戏，无需搭建服务器，即可使用云端能力。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>云开发为开发者提供完整的原生云端支持和微信服务支持，弱化后端和运维概念，无需搭建服务器，使用平台提供的 API 进行核心业务开发，即可实现快速上线和迭代，同时这一能力，同开发者已经使用的云服务相互兼容，并不互斥。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>云开发提供了几大基础能力支持：</p><p><a href=\"data/attachment/portal/202002/05/093445zjgh44sjy4jhnh4h.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093445zjgh44sjy4jhnh4h.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>简单来说，有了云开发， <strong style=\"text-indent: 0px;\">我不需要购买服务器就可以开发一款全栈小程序。</strong></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>嘿嘿，没错，这就是我想要的。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>如何搭建小程序云开发环境</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>那么如何搭建云开发环境呢，综合官方文档，我总结了一套极简搭建教程，大家可以作为参考。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>云开发环境极简搭建四部曲：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">首先，需要 <a target=\"_blank\" href=\"https://mp.weixin.qq.com/wxopen/waregister?action=step1\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">注册一个小程序账号</a> ，添加管理员 / 开发者微信账号并记录下 APPID；</li></ul><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/05/093444tvl6lhi66kqvbaia.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093444tvl6lhi66kqvbaia.jpg\"></a></p></figure><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">接着需要下载 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">小程序开发工具</a> ；</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">然后使用管理员 / 开发者账号登录开发工具并填入小程序的 APPID 以及勾选 云开发 选项后点击新建；</p></li></ul><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/05/093444w7a7d2nqjn2jw7qh.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093444w7a7d2nqjn2jw7qh.jpg\"></a></p></figure><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">点击页面中的云开发，跟着提示选择 <strong>免费版云开发配额</strong> 。</li></ul><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/05/093444g1afuuiiscija6oz.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093444g1afuuiiscija6oz.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>至此一个云环境就算是搭建完毕了。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>什么是云函数？</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>云开发环境搭建完毕后，是时候看看什么是 <strong style=\"text-indent: 0px;\">云函数</strong> 了。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>官方的定义如下：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>云函数是一段运行在云端的代码，无需管理服务器，在开发工具内编写、一键上传部署即可运行后端代码。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>简单来说，云函数就是运行在云端的函数。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>云函数有什么用？</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>云函数大有用处。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>有了它，就相当于是有了一个 \"大后端\"，所有业务逻辑以及对数据库的操作我们都可以封装在云函数中调用，十分方便。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>第一个云函数</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>说了这么多大道理，是时候来实战一下了。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>右键点击云函数环境 （cloudfunctions | xxxxxxx）后新建一个名为 test 的云函数：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/05/093444xyfyiixi4zfows66.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093444xyfyiixi4zfows66.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以看到默认的文件（index.js）中已经有了云函数代码（获取当前微信用户上下文，并返回用户信息）：</p><pre class=\"prettyprint hljs cs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 云函数入口文件</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> cloud = require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx-server-sdk'</span>)\r\n\r\ncloud.init()\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 云函数入口函数</span>\r\n\r\nexports.main = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>, context) =&gt; {\r\n\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> wxContext = cloud.getWXContext()\r\n\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n\r\n\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>,\r\n\t\t\r\n\t\topenid: wxContext.OPENID,\r\n\t\t\r\n\t\tappid: wxContext.APPID,\r\n\t\t\r\n\t\tunionid: wxContext.UNIONID,\r\n\t\r\n\t}\r\n\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这时候需要开启命令行并进入到该目录下运行 npm install 安装 wx-server-sdk ( 若目录下没有 node_modules 则需要先运行 npm init )：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/05/093444z6z2jgjyxcexzfey.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093444z6z2jgjyxcexzfey.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最后右键点击该云函数并选择 <strong style=\"text-indent: 0px;\">开启云函数本地调试</strong> 后点击右下角调用：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/05/093445m662wdiuiiw8itgf.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093445m662wdiuiiw8itgf.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以看到函数执行成功并拿到了返回值（openid 等信息......）</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>至此，恭喜我们快速完成了第一个云函数。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>如何在小程序中快速调用 AI 模型</h2><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>来自清晨的灵光一闪</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>相信大家都非常好奇，我是怎么做到在云函数中 \"零成本\" 调用 AI 能力的。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其实我开始也非常苦恼这个问题，即使小程序有云函数的功能，但也没办法轻易 \"零成本\" 调用 AI 模型，原因如下：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">小程序云函数目前仅支持 node.js，而我的模型调用接口代码为 python；</li><li style=\"line-height: 1.7em; list-style-type: disc;\">不管再怎么 \"云\"，想要运行自己的 AI 模型必须得有一台 16G 内存以上的机器（成本巨大）；</li><li style=\"line-height: 1.7em; list-style-type: disc;\">即使有了自己的服务器也需要域名备案，实在是太麻烦了；</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>但就在一个明媚的清晨，我翻身起床后突然灵光一闪：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">可不可以调用腾讯自己的 AI 开放接口间接达到这个目的呢？</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>想法再多不如动手行动，于是我访问了 <a target=\"_blank\" href=\"https://console.cloud.tencent.com/nlp\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">腾讯云控制台的自然语言处理模块</a> 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>根据指引进行服务开通后，我进入到 <a target=\"_blank\" href=\"https://console.cloud.tencent.com/cam/capi\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">API 密钥管理</a> 并记录下了 API 密钥：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/05/093443nm7w0pw4l40gi7a7.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093443nm7w0pw4l40gi7a7.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>那么如何在小程序中调用它呢？我再一次陷入了深深的沉思......</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>云函数调用 AI 模型</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在经过漫长的探索后我回到了 test 云函数目录下的命令行，安装了腾讯云服务调用包：</p><pre class=\"hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">npm</span> install tencentcloud-sdk-nodejs\r\n复制代码</pre><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/05/093443qzdm7kmm6xxkhcd5.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093443qzdm7kmm6xxkhcd5.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后修改 test 云函数 （index.js）：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 云函数入口文件</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> cloud = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx-server-sdk'</span>)\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> tencentcloud = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"tencentcloud-sdk-nodejs\"</span>);\r\n\r\ncloud.init()\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 云函数入口函数</span>\r\n\r\nexports.main = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (event, context) =&gt; {\r\n\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span>  NlpClient = tencentcloud.nlp.v20190408.Client;\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> models = tencentcloud.nlp.v20190408.Models;\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span>  Credential = tencentcloud.common.Credential;\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span>  ClientProfile = tencentcloud.common.ClientProfile;\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span>  HttpProfile = tencentcloud.common.HttpProfile;\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> cred = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span>  Credential(event.secretId, event.secretKey);\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> httpProfile = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span>  HttpProfile();\r\n\t\r\n\thttpProfile.endpoint = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"nlp.tencentcloudapi.com\"</span>;\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> clientProfile = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span>  ClientProfile();\r\n\t\r\n\tclientProfile.httpProfile = httpProfile;\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> client = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span>  NlpClient(cred, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"ap-guangzhou\"</span>, clientProfile);\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> req = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> models.SentimentAnalysisRequest();\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> text = event.text\r\n\t\r\n\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> params = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'{\"Text\":\\\"'</span> + text + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'\\\"}'</span>\r\n\t\r\n\t<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'待预测字符串： '</span> + text)\r\n\t\r\n\treq.from_json_string(params);\r\n\t\r\n\tclient.SentimentAnalysis(req, <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">errMsg, response</span>) </span>{\r\n\t\r\n\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (errMsg) {\r\n\t\t\r\n\t\t<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(errMsg)\r\n\t\t\r\n\t\t}\r\n\t\t\r\n\t\t<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'AI 预测情绪正值: '</span> + response.Positive)\r\n\t\t\r\n\t\t<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'AI 预测情绪负值: '</span> + response.Negative)\r\n\t\t\r\n\t})\r\n\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在这段代码中，我通过腾讯云账号中的密钥连通了 AI 情感预测接口，最后将情感预测的结果打印了出来。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>接下来我开启了本地云函数调用窗口并传入相应参数：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">secretId （腾讯云 API 服务密钥 Id ）</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">secretKey （腾讯云 API 服务密钥 Key）</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">text （待预测的字符串）</p></li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后点击调用后终于看到了 AI 模型的预测结果：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/05/093443gu2npzta1uannuzq.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093443gu2npzta1uannuzq.jpg\"></a></p></figure><strong style='color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'>最后我成功地使用云函数调用了免费的 AI 开放接口</strong><span style='color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'></span><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这时我已经热泪盈眶，除了感动还有一丝小满意，原来云开发还能这么玩。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>故事的结尾</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>文章到这里，相信最重要的两个部分大家已经了解并掌握了：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">搭建云开发环境</li><li style=\"line-height: 1.7em; list-style-type: disc;\">快速调用 AI 模型</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>回头望去，整个小程序开发过程大概历经三天两夜，整段经历大概与 <strong style=\"text-indent: 0px;\">\"编程马拉松\"</strong> 类似。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>编程马拉松，又称黑客日、黑客节或编程节，是一个流传于黑客当中的新词汇。编程马拉松是一种活动。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在该活动当中，计算机程序员以及其他与软件发展相关的人员，如图形设计师、界面设计师与项目经理，相聚在一起，以紧密合作的形式去进行某项软件项目。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>编程马拉松的灵魂是合作地编写程序和应用。编程马拉松的时长一般在几天到一周不等 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>--维基百科</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>于是乎，在经过 \"疯狂\" 开发后，一个日记小程序的雏形就诞生了。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/202002/05/093443fbv6b9jiiupswsmu.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/202002/05/093443fbv6b9jiiupswsmu.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>虽然说前端页面并没有多复杂，但是确实倾注了许多开发心血。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>开发完成的那一刻我已经不在乎是否有人真正去使用他。因为我已经从他身上收获到了全身心投入开发的快乐。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>最后，老铁，要不点个赞再走可好？么么哒</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1、给俺点个赞呗，可以让更多的人看到这篇文章，顺便激励下我，嘻嘻。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2、老铁们，关注我的原创微信公众号「智能测试开发」，专注于写 AI 与测试开发的结合（AI + 测试 + 开发）。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>保证让你看完有所收获，不信你打我。后台回复『进阶教程』，免费送你一套关于测试与开发的进阶教程。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>作者简介</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>作者：大家好，我是泰斯特，从测试入门，再转战开发，最后学习 AI。深知 AI 对测试与开发的影响力。，所以申请了一个微信公众号『智能测试开发』，泰斯特期待你的关注，和我一起学习。 转载说明：未获得授权，禁止转载</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>最后预祝所有用心实践的读者都能开发出有特色的 AI 小程序~</h4> </td>", "pub_time": "2020-2-5 00:32", "author": "Rolan"}
{"title": "【微信小程序】知乎视频查看 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>第一版做了知乎视频保存视频到本地相册的功能。进一步我们可以做一个增强功能，支持视频查看。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>用户在登录状态下载过的知乎视频，可以在我的浏览</p><p><a href=\"data/attachment/portal/201912/24/093946i2jnc2dnn2nwwt0n.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/24/093946i2jnc2dnn2nwwt0n.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>或者查看历史记录</p><p><a href=\"data/attachment/portal/201912/24/093946i00zyjx1kkpx5v0d.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/24/093946i00zyjx1kkpx5v0d.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在线查看视频</p><p><a href=\"data/attachment/portal/201912/24/093945xab49cf3bcufhfb8.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/24/093945xab49cf3bcufhfb8.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这个功能的核心其实是用户身份标识的获取，因为我们只要拿到了用户标识，相应用户下载过的视频就可以和用户标识绑定，存储到数据库中。当用户下次再进入app，只要通过用户标识就可以去数据库中拿用户之前下载过的视频就可以了。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>表结构如下：</p><pre class=\"prettyprint hljs sql\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">CREATE</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">TABLE</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`wx_user_zhihu_answer`</span> (\r\n  <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`id`</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">bigint</span>(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">unsigned</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">NOT</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">NULL</span> AUTO_INCREMENT,\r\n  <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`is_delete`</span> tinyint(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">unsigned</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">NOT</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">NULL</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">DEFAULT</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'0'</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">COMMENT</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'软删除标识'</span>,\r\n  <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`create_time`</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">timestamp</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">NOT</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">NULL</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">DEFAULT</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">CURRENT_TIMESTAMP</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">COMMENT</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'创建时间'</span>,\r\n  <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`update_time`</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">timestamp</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">NOT</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">NULL</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">DEFAULT</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">CURRENT_TIMESTAMP</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">ON</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">UPDATE</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">CURRENT_TIMESTAMP</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">COMMENT</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'更新时间'</span>,\r\n  <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`openId_md5`</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">varchar</span>(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">128</span>) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">NOT</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">NULL</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">DEFAULT</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">COMMENT</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'openId md5加密'</span>,\r\n  <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`answer_url`</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">varchar</span>(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">128</span>) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">NOT</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">NULL</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">DEFAULT</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">COMMENT</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'知乎回答url'</span>,\r\n  PRIMARY <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">KEY</span> (<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`id`</span>),\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">KEY</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`idx_is_delete`</span> (<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`is_delete`</span>),\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">KEY</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`idx_openId_md5`</span> (<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`openId_md5`</span>),\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">KEY</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`idx_answer_url`</span> (<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`answer_url`</span>)\r\n) <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">ENGINE</span>=<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">InnoDB</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">DEFAULT</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">CHARSET</span>=utf8 <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">COMMENT</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'用户及知乎回答信息'</span>;</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>获取用户标识</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们借鉴微信的例程来设计用户登录逻辑</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先按钮上设置open-type=\"getUserInfo\",可以让用户自主选择是否授权<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>。</p><pre class=\"prettyprint hljs fsharp\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;button <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"login-btn\"</span> wx:<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{!hasUserInfo}}\"</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">open</span>-<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span></span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getUserInfo\"</span> bindgetuserinfo=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getUserInfo\"</span>&gt;\r\n  点击登录\r\n&lt;/button&gt;</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当用户点击并确认授权，会执行回调的getUserInfo方法</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>getUserInfo: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">e</span>) </span>{\r\n  app.globalData.userInfo = e.detail.userInfo;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n    <span class=\"hljs-attr\">userInfo</span>: e.detail.userInfo,\r\n    <span class=\"hljs-attr\">hasUserInfo</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n  });\r\n\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 登录</span>\r\n  wx.login({\r\n    <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> { code } = res;\r\n      app.globalData.loginInfo.jsCode = code;\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.fetchUserIdInfo();\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 发送 res.code 到后台换取 openId, sessionKey, unionId</span>\r\n    }\r\n  });\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 获取用户信息</span>\r\n  wx.getSetting({\r\n    <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.authSetting[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"scope.userInfo\"</span>]) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框</span>\r\n        wx.getUserInfo({\r\n          <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> { encryptedData, iv } = res;\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 可以将 res 发送给后台解码出 unionId</span>\r\n            app.globalData.loginInfo.encryptedData = encryptedData;\r\n            app.globalData.loginInfo.iv = iv;\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.fetchUserIdInfo();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n},\r\nfetchUserIdInfo() {\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> { jsCode, encryptedData, iv } = app.globalData.loginInfo;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!(jsCode &amp;&amp; encryptedData &amp;&amp; iv)) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span>;\r\n  }\r\n  wx.request({\r\n    <span class=\"hljs-attr\">url</span>: userInfoFetchUrl,\r\n    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"POST\"</span>,\r\n    <span class=\"hljs-attr\">data</span>: {\r\n      jsCode,\r\n      encryptedData,\r\n      iv\r\n    },\r\n    <span class=\"hljs-attr\">header</span>: {\r\n      <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"Content-Type\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"application/x-www-form-urlencoded\"</span>\r\n    },\r\n    <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n      res = res.data;\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.code === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>) {\r\n        app.globalData.userIdInfo = res.data;\r\n      }\r\n    }\r\n  });\r\n},</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>getUserInfo可以获取用户的信息，调用wx.login能够拿到code,调用wx.getUserInfo能够拿到encryptedData和iv。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>拿到code、encryptedData、iv我们就可以调用微信接口以及解码逻辑拿到用户的openId和unionId,我们这部分都放在了后端接口(userInfoFetchUrl)处理，这里我们使用openId标识用户身份，该接口返回的是openId用m5加密后的id。由于所以身份标识相关的操作都在服务器进行且返回的是md5加密后的值，所以极大提高了用户信息的安全性。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>后端解析用户标识的逻辑如下</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>exports.infoFetch = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> params =&gt; {\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> { jsCode, encryptedData, iv } = params;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> sessionRes = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> axios.get(\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${jscode2sessionUrl}</span>?appid=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${appId}</span>&amp;secret=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${appSecret}</span>&amp;js_code=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${jsCode}</span>&amp;grant_type=authorization_code`</span>\r\n  );\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> sessionResData = sessionRes.data;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> sessionKey = sessionResData.session_key;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> openId = sessionResData.openid;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> pc = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> WXBizDataCrypt(appId, sessionKey);\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> userInfo = pc.decryptData(encryptedData, iv);\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> unionId = userInfo.unionId;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (unionId &amp;&amp; openId) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n      <span class=\"hljs-attr\">openIdMD5</span>: md5(openId),\r\n      <span class=\"hljs-attr\">unionIdMD5</span>: md5(unionId)\r\n    };\r\n  } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (openId) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n      <span class=\"hljs-attr\">openIdMD5</span>: md5(openId)\r\n    };\r\n  }\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {};\r\n};</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>拿到用户标识后工作基本就完成了。我们还需要做一些优化，在app.js的onLaunch回调和登录页onLoad回调中获取用户信息，使得用户再次打开app在有效登录时间内依然可以直接使用用户标识。</p><p><a href=\"data/attachment/portal/201912/24/093945fe6ybhyzzhykeq9z.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/24/093945fe6ybhyzzhykeq9z.jpg\"></a></p> </td>", "pub_time": "2019-12-24 00:04", "author": "Rolan"}
{"title": "【微信小程序】写一个能自定义尺寸、样式的switch ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>原生的switch不能灵活的修改宽高、样式，很不方便，我这边参考 <a href=\"https://weui.io/#form_switch\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">WeUI</a> 的开关，写了一个可以自定义尺寸样式的switch组件。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>直接上代码： <a href=\"https://gitee.com/piscdong/wechat-switch\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://gitee.com/piscdong/we...</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>效果如下图，可以自定义宽高，可以做成方角的</p><p><a href=\"data/attachment/portal/201912/24/101934hsnssu8nps8u3jd8.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/24/101934hsnssu8nps8u3jd8.png\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>代码分析</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这个switch主要的难点就是点击后背景颜色变换的动画，这里用到了css的transition、transform两个属性来实现动画，以及::before和::after两个伪元素。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>wxml基本结构为：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;view <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span></span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"switch\"</span>&gt;\r\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span></span>\r\n&lt;<span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">/view&gt;</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>父级view是整个switch容器，会用到::before做背景色切换动画，::after做禁用时的灰色遮罩。内部的一个view是来回切换的白点。未选中时默认class是switch，选中时增加一个class：switch_checked。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>选中状态到未选中状态背景有一个从中间变大到全部的白色动画，所以需要给父级view设置一个颜色作为背景色。</p><pre class=\"hljs scss\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.switch</span> {\r\n    ...\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#00c000</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: relative;\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>未选中时::before覆盖整个容器，选中时::before设置 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>transform: scale(0);</code> ，这样选中时白色区域就会缩放到最小，再加上transition的实现动画效果。</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.switch</span><span class=\"hljs-selector-pseudo\" style=\"color: rgb(188, 96, 96);\">::before</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: block;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">content</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">right</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-radius</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">9999</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#fff</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transition</span>: all <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0.35s</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">cubic-bezier</span>(0.45, 1, 0.4, 1);\r\n}\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.switch_checked</span><span class=\"hljs-selector-pseudo\" style=\"color: rgb(188, 96, 96);\">::before</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transform</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">scale</span>(0);\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>来回移动的白点，未选中时通过 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>left: 0;</code> 定位到左侧，选中时将left设置为100%定位到右侧，但是这样白点会完全移出容器范围，所以还需要加上 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>transform: translateX(-100%);</code> 将白点向左再一定自身宽度的100%，同样加上transition的实现动画效果。</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.switch</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-radius</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#fff</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">box-shadow</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>rpx <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>rpx <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">rgba</span>(0, 0, 0, 0.4);\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transition</span>: all <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0.35s</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">cubic-bezier</span>(0.45, 1, 0.4, 1);\r\n}\r\n\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.switch_checked</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transform</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">translateX</span>(-100%);\r\n}</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>关于“::”</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最后搭车说一下“:”和“::”，“:”是伪类，“::”是伪元素。按照我的理解：伪类不会在dom中增加节点，只不过是css选择器的一种特殊效果；伪元素会增加节点，flex布局中会影响到其他元素。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为了保证兼容性，css3是允许伪元素使用单个冒号。</p> </td>", "pub_time": "2019-12-24 00:51", "author": "Rolan"}
{"title": "小程序的getElementsById，就像一把梭 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用selectComponent可以抓取自定义组件实例对象，但在层层嵌套结构的业务场景中，id的设置繁复，js/wxml开发界面频繁的切换，查找、维护、调整的开发工作很是让人抓狂啊</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>好想封装一个getElementsById方法给<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>，像在web开发中那样能够方便的获取页面元素。在父子子子子级间轻松调用，好想念jquery开发的一把梭时代！</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实现如下需求：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">任何绑定id的自定义组件都能够方便抓取实例对象(任何嵌套层级均可调用)</li><li style=\"line-height: 1.7em; list-style-type: disc;\">通过数据配置</li></ul><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>思路</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实现不难，我们可以将所有自定义组件在create生命周期方法时将\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>this</code> 挂载到一个全局变量中，\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>detached</code> 生命周期时销毁该实例(不然爆内存)</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>准备一个全局变量</h4><pre class=\"hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>app._elements = {}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>挂载/销毁方法</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一个全局的挂载、销毁方法，方便将实例对象注册、注销在app._elements上</p><pre class=\"prettyprint hljs php\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>app.mount = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span><span class=\"hljs-params\">(id, context)</span></span>{\r\n    app._elements[id] = context\r\n}\r\n\r\napp.unmount = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span><span class=\"hljs-params\">(id)</span></span>{\r\n    app._elements[id] = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">null</span>\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>getElementsById</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>定义全局\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getElementsById</code> 在Page中能够方便调用</p><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>app.getElementsById = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span><span class=\"hljs-params\">(id)</span>{</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span> = app._elements[id]\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!res) {  // 兼容selectComponent\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> wx.selectComponent(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#'</span>+id) || wx.selectComponent(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'.'</span>+id)\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>自定义组件</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>ui-component组件</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> app = getApp()\r\nComponent({\r\n  <span class=\"hljs-attr\">options</span>: {\r\n    <span class=\"hljs-attr\">multipleSlots</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 在组件定义时的选项中启用多slot支持</span>\r\n    addGlobalClass: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n  },\r\n  <span class=\"hljs-attr\">properties</span>: {\r\n    <span class=\"hljs-attr\">dataSource</span>: {\r\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>,\r\n    },\r\n  },\r\n  <span class=\"hljs-attr\">data</span>: {},\r\n  <span class=\"hljs-attr\">behaviors</span>: [],\r\n  <span class=\"hljs-attr\">lifetimes</span>: {\r\n    <span class=\"hljs-attr\">created</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n    },\r\n    <span class=\"hljs-attr\">attached</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.id = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.dataSource.$$id  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 专用$$id来指定唯一名称</span>\r\n    },\r\n    <span class=\"hljs-attr\">ready</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n        app.mount(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.id, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>)\r\n    },\r\n    <span class=\"hljs-attr\">detached</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>)</span>{\r\n        app.unmount(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.id)\r\n    }\r\n  },\r\n  <span class=\"hljs-attr\">methods</span>: {\r\n      active(clsName){\r\n          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* do something */</span>\r\n      }\r\n  })\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>应用</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下面开始在Page中使用\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getElementsById</code> 来抓取自定义组件实例</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>wxml</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">ui-component</span> <span class=\"hljs-attr\">dataSource</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{config}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> /&gt;</span>\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>js</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>Page({\r\n    data: {\r\n        config:  {\r\n            $$id: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'component-id'</span>,\r\n            title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'some text'</span>\r\n        }\r\n    },\r\n    \r\n    onReady(){\r\n        // 我们应该在onReady中来调用，onLoad时，页面组件结构并没有渲染完成  \r\n        const $ele = app.getElementsById(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'component-id'</span>)\r\n        $ele.active(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'.active'</span>) \r\n    }\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>至此，基本思路已经实现，现在即兼容了selectComponent方法，又简化了写模板id的麻烦。不知道大家有没有了解小程序组件是可以递归嵌套自己的(模板不能递归嵌套)。因此聪明的你应该可以想到通过数据嵌套去实现组件嵌套，进而实现结构嵌套，这样我们就能够实现很复杂的页面结构，当然小程序目前建议是结构应该在30层左右，然并卵，反正它能够正常显示，哈哈</p> </td>", "pub_time": "2019-12-24 00:52", "author": "Rolan"}
{"title": "纯CSS实现圆环型进度条 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>以下内容来自于去年的一次案例，随着微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的不断改版，部分条件可能已不再适用，请谨慎参考。内容比较短，主要都在代码片段里。</p><h1 id=\"item-1\" style='box-sizing: border-box; margin: 2.75rem 0px 1rem; line-height: 1.2; font-size: 2rem; padding-bottom: 0.5rem; border-bottom: 3px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>案例</h1><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>某个项目中需要用到如下图这样的一个圆环行的进度条。<br style=\"box-sizing: border-box;\"></p><p><a href=\"data/attachment/portal/201912/27/101148wemv2edu5mguibi7.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/27/101148wemv2edu5mguibi7.png\"></a></p><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span><br style=\"box-sizing: border-box;\">一开始的想法是使用<a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/canvas.html\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">canvas</a>来实现，但是canvas是<a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/native-component.html#%E5%8E%9F%E7%94%9F%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%99%90%E5%88%B6\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">原生组件</a>，层级最高（当时的情况），实际使用时不方便使用。所以决定尝试用纯CSS来实现这一效果。</p><h1 id=\"item-2\" style='box-sizing: border-box; margin: 2.75rem 0px 1rem; line-height: 1.2; font-size: 2rem; padding-bottom: 0.5rem; border-bottom: 3px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>实现原理</h1><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>先上代码：<a href=\"https://developers.weixin.qq.com/s/gjmxwUmm76dG\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">https://developers.weixin.qq....</a><br style=\"box-sizing: border-box;\">这里主要用到的是CSS中的clip属性，将一个正方形裁剪后只显示右侧一半，但是仍然以正方形中心为圆心来旋转，来实现需要的角度。<br style=\"box-sizing: border-box;\"><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span></p><p><a href=\"data/attachment/portal/201912/27/101149iky1ytkjani1x6zf.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/27/101149iky1ytkjani1x6zf.png\"></a></p><pre class=\"hljs scss\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-wrap: break-word; word-break: break-word; overflow-wrap: normal; white-space: initial;'><span class=\"hljs-attribute\" style=\"box-sizing: border-box; color: navy;\">clip</span>: rect(<span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">0</span>rpx, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">46</span>rpx, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">92</span>rpx, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">0</span>rpx);</code></pre><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>这样最上面那个进度条就可以由以下三部分叠加，在最上面再叠加一个小一号的白色圆形，最外层加上圆角后就可以实现。（下图中红线示例了最外层的圆角以及最上层叠加的白色圆形位置）<br style=\"box-sizing: border-box;\"></p><p><a href=\"data/attachment/portal/201912/27/101148t694s9dq9q56z57d.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/27/101148t694s9dq9q56z57d.png\"></a></p><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span><br style=\"box-sizing: border-box;\">叠加效果<br style=\"box-sizing: border-box;\"></p><p><a href=\"data/attachment/portal/201912/27/101149bj33j23sl08340tz.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/27/101149bj33j23sl08340tz.png\"></a></p><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span><br style=\"box-sizing: border-box;\">用到蓝色圆环小于180度的情况下，需要把背景色和前景色对调。</p> </td>", "pub_time": "2019-12-27 00:07", "author": "Rolan"}
{"title": "小程序标签展开收起功能实现 ", "content": "<td id=\"article_content\"> \n                     \n                    <h3 style='margin: 0px 0px 1.27273em; font-variant-numeric: inherit; font-variant-east-asian: inherit; font-stretch: inherit; font-size: 1.1em; line-height: 1.5; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; clear: left; color: rgb(26, 26, 26); background-color: rgb(255, 255, 255);'>先看效果</h3><figure data-size=\"normal\" style='margin: 1.4em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'><p><a href=\"data/attachment/portal/201912/27/113323ovenf5cg9tenoeoz.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/27/113323ovenf5cg9tenoeoz.jpg\"></a></p></figure><p class=\"ztext-empty-paragraph\" style='margin: -0.8em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'><br></p><figure data-size=\"normal\" style='margin: 1.4em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'><p><a href=\"data/attachment/portal/201912/27/113324l0f33jj9f69d346f.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/27/113324l0f33jj9f69d346f.jpg\"></a></p></figure><h3 style='margin: 1.90909em 0px 1.27273em; font-variant-numeric: inherit; font-variant-east-asian: inherit; font-stretch: inherit; font-size: 1.1em; line-height: 1.5; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; clear: left; color: rgb(26, 26, 26); background-color: rgb(255, 255, 255);'>主要结构</h3><p style='margin: 1.4em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'>我用的mpvue，如用原生标签直接转换成原生即可</p><div class=\"highlight\" style='margin: 1em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0.88889em; font-size: 0.9em; word-break: normal; word-wrap: normal; overflow: auto; background: rgb(246, 246, 246); border-radius: 4px;\"><code class=\"language-text\" style='margin: 0px; padding: 0px; border-radius: 0px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: inherit; background-color: inherit;'>&lt;div id=\"labelBox\"&gt;\r\n    &lt;div class=\"label userLabel\" v-for=\"(label,inx) in labelList\" :key=\"inx\"&gt;{{label}}&lt;/div&gt;\r\n    &lt;div class=\"more\" v-show=\"showLabel===1\" id=\"moreLabel\" @click=\"openMore\"&gt;\r\n        &lt;div&gt;全部{{allLabel.length}}个&lt;/div&gt;\r\n        &lt;img class=\"icon ml5\" src=\"/static/img/i_label_down.png\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"more\" v-show=\"showLabel===2\" @click=\"closeMore\"&gt;\r\n        &lt;div&gt;收起&lt;/div&gt;\r\n        &lt;img class=\"icon ml5\" src=\"/static/img/i_label_up.png\" /&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;</code></pre></div><p class=\"ztext-empty-paragraph\" style='margin: -0.8em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'><br></p><div class=\"highlight\" style='margin: 1em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0.88889em; font-size: 0.9em; word-break: normal; word-wrap: normal; overflow: auto; background: rgb(246, 246, 246); border-radius: 4px;\"><code class=\"language-text\" style='margin: 0px; padding: 0px; border-radius: 0px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: inherit; background-color: inherit;'>export default {\r\n    data() {\r\n        return {        \r\n            labelList: [],  // 视图显示的标签集合\r\n            allLabel: [],   // 所有的标签集合\r\n            firstLabel: [], // 默认显示的标签集合\r\n            showLabel: 1,   // 0 两个按钮都不显示，1 显示展开，2 显示收起\r\n        }\r\n    },\r\n    ...\r\n}</code></pre></div><p style='margin: 1.4em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'>思路<br>利用<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>api <a href=\"https://link.zhihu.com/?target=https%3A//links.jianshu.com/go%3Fto%3Dhttps%253A%252F%252Fdevelopers.weixin.qq.com%252Fminiprogram%252Fdev%252Fapi%252Fwxml%252FNodesRef.boundingClientRect.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\" data-za-detail-view-id=\"1043\" style=\"text-decoration-line: none; border-bottom: 1px solid grey;\">NodesRef.boundingClientRect</a> 获取节点的位置与大小信息，主要用到 <code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>width</code>,<code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>left</code>,<code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>right</code><br></p><ol style='padding: 0px; margin: 1.4em 0px; display: table; counter-reset: ol 0; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'><li style=\"list-style: none; display: table-row;\">循环所有标签(<code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>.userLabel</code>)，看是否有多行，通过所有节点的 <code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>left</code> 去判断，如果 <code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>left</code> 相同的有多个，就证明有多行</li><li style=\"list-style: none; display: table-row;\">获取标签父级(<code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>#labelBox</code>)的宽度 <code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>width</code></li><li style=\"list-style: none; display: table-row;\">获取到按钮(<code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>#moreLabel</code>)的宽度</li><li style=\"list-style: none; display: table-row;\">过滤第一行节点的 <code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>right</code>，如果与按钮的<code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>width</code>相加小于等于父级盒子的<code style='margin: 0px 2px; padding: 3px 4px; border-radius: 3px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: 0.9em; background-color: rgb(246, 246, 246);'>width</code>就保留</li></ol><div class=\"highlight\" style='margin: 1em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0.88889em; font-size: 0.9em; word-break: normal; word-wrap: normal; overflow: auto; background: rgb(246, 246, 246); border-radius: 4px;\"><code class=\"language-text\" style='margin: 0px; padding: 0px; border-radius: 0px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: inherit; background-color: inherit;'> 具体的代码\r\n wxp为微信接口Promise化，会在之后列出用到的\r\n\r\n export default {\r\n    data() {\r\n        return {        \r\n            labelList: [],  // 视图显示的标签集合\r\n            allLabel: [],   // 所有的标签集合\r\n            firstLabel: [], // 默认显示的标签集合\r\n            showLabel: 1,   // 0 两个按钮都不显示，1 显示展开，2 显示收起\r\n        }\r\n    },\r\n    methods: {\r\n        async loadPageData(){\r\n            // 请求后台数据\r\n            const res = ...\r\n\r\n            // 设置\r\n            this.allLabel = res.labes;          // 记录所有的标签\r\n            this.labelList = this.allLabel;     // 先插入所有表情\r\n            // 设置状态\r\n            if(this.allLabel.length&gt;0){\r\n                await wxp.timeout(300); // 插入视图之后不会马上获取到节点信息，延迟获取\r\n                this.setLabelStauts();\r\n            }\r\n            \r\n        },\r\n\r\n        // 设置标签状态\r\n        async setLabelStauts(){\r\n            const boxDom = await wxp.getElementById('#labelBox');\r\n            const labelDoms = await wxp.getElementsByClassName('.userLabel');\r\n            const btnDom = await wxp.getElementById('#moreLabel');\r\n            const left = labelDoms[0].left;\r\n\r\n            // 分行转为二维数组\r\n            let lineArr = [];       \r\n            let lineIndex = -1;\r\n            labelDoms.forEach(v =&gt; {\r\n                if(v.left==left){\r\n                    lineIndex++;\r\n                    lineArr[lineIndex] = [];\r\n                }\r\n                lineArr[lineIndex].push(v);\r\n            })\r\n\r\n            // 超过一行\r\n            if(lineArr.length&gt;1){\r\n                // 默认显示加载更多按钮\r\n                this.showLabel = 1;\r\n                const firstTr = lineArr[0].filter(v =&gt; (v.right+btnDom.width+(left/15*15)) &lt;= boxDom.width);\r\n                this.firstLabel = this.allLabel.slice(0,firstTr.length);\r\n                this.labelList = this.firstLabel;\r\n            }else{\r\n                this.showLabel = 0;\r\n            }\r\n        },\r\n\r\n        // 展开\r\n        openMore(){\r\n            this.showLabel = 2;\r\n            this.labelList = this.allLabel;\r\n        },\r\n        // 收起\r\n        closeMore(){\r\n            this.showLabel = 1;\r\n            this.labelList = this.firstLabel;\r\n        }\r\n    }\r\n}</code></pre></div><p style='margin: 1.4em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'>wxp.js相关代码</p><div class=\"highlight\" style='margin: 1em 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0.88889em; font-size: 0.9em; word-break: normal; word-wrap: normal; overflow: auto; background: rgb(246, 246, 246); border-radius: 4px;\"><code class=\"language-text\" style='margin: 0px; padding: 0px; border-radius: 0px; font-family: Menlo, Monaco, Consolas, \"Andale Mono\", \"lucida console\", \"Courier New\", monospace; font-size: inherit; background-color: inherit;'>/**\r\n * 延时\r\n * @param {*} delay \r\n */\r\nexport const timeout = delay =&gt; new Promise(resolve =&gt; setTimeout(resolve, delay));\r\n\r\n/**\r\n * 根据ID获取dom的盒模型信息\r\n * @param {*} id \r\n */\r\nexport const getElementById = (id='') =&gt; {\r\n    return new Promise((resolve, reject) =&gt; {\r\n        if ((typeof id).toLowerCase() !=='string'){\r\n            const err = {\r\n                errMsg: '请输入字符串，例如 #box'\r\n            }\r\n            reject(error(err.errMsg,err));\r\n        } else if (id.indexOf('#') &lt; 0) {\r\n            const err = {\r\n                errMsg: '请输入ID，例如 #box'\r\n            }\r\n            reject(error(err.errMsg,err));\r\n        }else{\r\n            var query = wx.createSelectorQuery()\r\n            query.select(id).boundingClientRect();\r\n            query.selectViewport().scrollOffset();\r\n            query.exec(rect =&gt; {\r\n                if (rect[0]){\r\n                    let info = rect[0];\r\n                    info.position = {\r\n                        left: rect[1].scrollLeft + info.left,\r\n                        top: rect[1].scrollTop + info.top\r\n                    };\r\n                    resolve(info);\r\n                }else{\r\n                    const err = {\r\n                        errMsg: '没有获取到信息'\r\n                    }\r\n                    reject(error(err.errMsg,err));\r\n                }\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * 根据类名获取dom信息\r\n * @param {*} className \r\n */\r\nexport const getElementsByClassName = (className = '') =&gt; {\r\n    return new Promise((resolve, reject) =&gt; {\r\n        if ((typeof className).toLowerCase() !== 'string') {\r\n            const err = {\r\n                errMsg: '请输入字符串，例如 .box'\r\n            }\r\n            reject(error(err.errMsg,err));\r\n        } else if (className.indexOf('.') &lt; 0) {\r\n            const err = {\r\n                errMsg: '请输入类名，例如 .box'\r\n            }\r\n            reject(error(err.errMsg,err));\r\n        } else {\r\n            wx.createSelectorQuery().selectAll(className).boundingClientRect(rects =&gt; {\r\n                resolve(rects);\r\n            }).exec();\r\n        }\r\n    })\r\n}</code></pre></div><p style='margin: 1.4em 0px 0px; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: medium; background-color: rgb(255, 255, 255);'><br>作者：不二很纯洁<br>链接：<a href=\"https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/87f3c14038a6\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\" data-za-detail-view-id=\"1043\" style=\"text-decoration-line: none; border-bottom: 1px solid grey;\"><span class=\"invisible\" style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; color: transparent; text-shadow: none; background-color: transparent;\">https://www.</span><span class=\"visible\">jianshu.com/p/87f3c1403</span><span class=\"invisible\" style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; color: transparent; text-shadow: none; background-color: transparent;\">8a6</span></a></p> </td>", "pub_time": "2019-12-27 00:41", "author": "Rolan"}
{"title": "xquery小程序简易步进器 ", "content": "<td id=\"article_content\"> \n                     \n                    <figure style='text-align: center; margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'> <a href=\"data/attachment/portal/201912/30/093229duu00u3n8avux9yu.jpg\" target=\"_blank\" style=\"font-family: Tahoma, Arial, Helvetica, snas-serif; font-size: 14px;\"><img src=\"data/attachment/portal/201912/30/093229duu00u3n8avux9yu.jpg\"></a></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这样一个简单的组件，翻了ant.design才知道这种组件叫做步进器(steper)，步进器常用于购物车等需要增减数量的场景，最近的旅游项目中用于增减房间数和人数，从产品的角度来理解步进器很简单，但在开发角度来说需要适应多种场景及控制一些状态</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">边界值(最大值，最小值)，初始值，步进值(一次增减数量)需要可控</li><li style=\"line-height: 1.7em; list-style-type: disc;\">边界状态，即超出后显示为什么状态</li><li style=\"line-height: 1.7em; list-style-type: disc;\">可供外部设置边界状态的api方法</li><li style=\"line-height: 1.7em; list-style-type: disc;\">内部加减方法</li><li style=\"line-height: 1.7em; list-style-type: disc;\">可供外部调用的加减方法(一些场景中，外部有一个总量约束，比如sku场景)</li><li style=\"line-height: 1.7em; list-style-type: disc;\">加减回调方法，比如当数量超出时提示用户相关信息</li><li style=\"line-height: 1.7em; list-style-type: disc;\">多实例模式，实例之间即隔离又能交互</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>大致需求如上，demo及实现部分如下</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://github.com/webkixi/aotoo-xquery\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">GITHUB源码</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://developers.weixin.qq.com/s/0Dk7RWmS7EdT\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">小程序代码片段</a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>wxml</h3><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;view <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span></span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"container\"</span>&gt;\r\n  <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">ui-item</span> <span class=\"hljs-attr\">item</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{steperConfig}}\"</span> /&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span></span>\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Page</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>因为是直接使用Item组件实现，所以组件写在Page页面中，当然独立成组件看需求了</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>const Pager = require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../components/aotoo/core/index'</span>)\r\nlet lib = Pager.lib\r\n\r\nfunction mkSteper(id=lib.suid(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'step_'</span>), min, max, step=<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>) {\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n    $$id: id,\r\n    itemClass: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'steper-class'</span>,\r\n    title: [\r\n      {title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'-'</span>, aim: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'reduce'</span>, itemClass: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'steper-reduce'</span>},\r\n      {title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'0'</span>, aim: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'custom'</span>, itemClass: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'steper-counter'</span>},\r\n      {title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'+'</span>, aim: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'plus'</span>, itemClass: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'steper-plus'</span>},\r\n    ],\r\n    methods: {\r\n      __ready(){\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.min = min||<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.max = max||<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.step = step||<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat = {\r\n          reduce: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n          plus: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n          count: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n        }\r\n      },\r\n      reduce(e, param, inst){\r\n        let step = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.step\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!inst) {\r\n          inst = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.children[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>]\r\n        }\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (e === <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>) {\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat.reduce = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n          inst.addClass(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'disable'</span>)\r\n        }\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (e === <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>) {\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat.reduce = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n          inst.removeClass(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'disable'</span>)\r\n        }\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (typeof e === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'number'</span>) {\r\n          step = e\r\n        }\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count -= step\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count &lt;= <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.min) {\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.min\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat.reduce = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n          inst.addClass(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'disable'</span>)\r\n        }\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count &lt; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.max &amp;&amp; !<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat.plus) {\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat.plus = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n          let $plus = inst.siblings(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'steper-plus'</span>)\r\n          $plus.removeClass(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'disable'</span>)\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.changeNum(inst)\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.hooks.emit(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'reduce'</span>, {count: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count}, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>)\r\n\r\n      },\r\n      plus(e, param, inst){\r\n        let step = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.step\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!inst) {\r\n          inst = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.children[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>]\r\n        }\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (e === <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>) {\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat.plus = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n          inst.addClass(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'disable'</span>)\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (e === <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>) {\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat.plus = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n          inst.removeClass(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'disable'</span>)\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (typeof e === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'number'</span>) {\r\n          step = e\r\n        }\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count += step\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count &gt;= <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.max) {\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.max\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat.plus = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n          inst.addClass(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'disable'</span>)\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count &gt; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.min &amp;&amp; !<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat.reduce) {\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.stat.reduce = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n          let $reduce = inst.siblings(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'steper-reduce'</span>)\r\n          $reduce.removeClass(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'disable'</span>)\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.changeNum(inst)\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.hooks.emit(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'plus'</span>, {count: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count}, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>)\r\n      },\r\n      changeNum(inst){\r\n        let count = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (typeof inst === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'number'</span>) {\r\n          count = inst\r\n          inst = undefined\r\n        }\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!inst) {\r\n          inst = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.children[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>]\r\n        }\r\n\r\n        let $counter = inst.siblings(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'steper-counter'</span>)\r\n        $counter.update({\r\n          title: count\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPager({\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n    steperConfig: mkSteper(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'steper'</span>),\r\n  },\r\n  onReady(){\r\n    let $steper = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.getElementsById(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'steper'</span>)\r\n    $steper.hooks.on(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'plus'</span>, function(param) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.count === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>) {\r\n        Pager.alert(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'不能再多了，仓库没货了'</span>)\r\n      }\r\n    })\r\n    $steper.hooks.on(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'reduce'</span>, function(param) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (param.count &lt;= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n        Pager.alert(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'大哥，买点啊'</span>)\r\n      }\r\n    })\r\n  }\r\n})\r\n复制代码</pre> </td>", "pub_time": "2019-12-30 00:29", "author": "Rolan"}
{"title": "红包小程序小结 ", "content": "<td id=\"article_content\"> \n                     \n                    <div class=\"article_body\" id=\"nei\" style='padding: 20px 5px 25px; margin-bottom: 0px; overflow-x: hidden; word-wrap: break-word; word-break: break-all; min-height: 340px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif;'><div style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">最近做了一个红包兑换<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>，遇到了一些问题这里做一下总结。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">1、需求：回流用户在游戏客户端获取到口令，然后在小程序这边输入口令兑换红包，成功之后钱会发到用户微信账户里。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">2、流程：若未授权，显示授权按钮。点击授权登录，授权成功后获取到私密字段iv和encryptedData，调取登陆接口，错误则提示相关信息，正确则跳转校验姓名和身份证的页面，校验通过就调取提现接口，成功则提示提现成功，同时显示生成分享图按钮。分享图由用户昵称，头像，二维码，提现金额等等组成。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">3、框架：uniapp</p><h3 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.6em; color: inherit; text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em;\">分享图的问题</h3><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">1、 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>measureText</code> 获取宽度的时候，传入的参数如果是数字，则会返回0。</p><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs fsharp\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> money = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>;  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//这里需要把数字转成字符串</span>\r\nctx.measureText(money).width;\r\n</pre></div></div><div style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">2、绘制图片的时候不要忘了先使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getImageInfo</code> 转成临时地址，再 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>drawImage</code> ，如果不经过这步，虽然开发者工具上看到是正常的，但是真机是显示不了。</p>3、需要绘制微信头像的时候，要在后台配置downloadFile合法域名 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>https://wx.qlogo.cn</code> <br><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">4、最初背景图大概170KB，尺寸750*1334，最终绘制出来的分享图太大了。解决方法：</p></div><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">把背景图片尽量再压缩，最终是60多KB。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">调 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>canvasToTempFilePath</code> 的时候，设置 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>fileType</code> 为jpg，quality范围是(0,1]，取个合适的值。 <br>5、小程序里面的保存图片并不是长按保存的，需要点击按钮授权。<div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs fsharp\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;button  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">open</span>-<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span></span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getUserInfo\"</span>  @getuserinfo=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onGotUserInfo\"</span>&gt;&lt;/button&gt;、\r\n</pre></div></div></li></ul><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>...\r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">onGotUserInfo</span>(e){\r\n\t<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">uni</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.saveImageToPhotosAlbum</span>({\r\n\t\t<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">filePath</span>: this.tempPath,\r\n\t\tsuccess(res) {\r\n\t\t\tuni.showToast({\r\n\t\t\t  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">title</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'保存成功'</span>,\r\n\t\t\t  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">icon</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'success'</span>,\r\n\t\t\t  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">duration</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1500</span>\r\n\t\t\t})\r\n\t\t},\r\n\t\t<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">fail</span>(err){\r\n\t\r\n\t\t}\r\n\t})\r\n}\r\n...\r\n</pre></div></div><div style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">如图：如果用户点击确定，就会正常保存图片到本地相册了。</p><p><a href=\"data/attachment/portal/201912/30/094134lk8cgdzl2b89olnu.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/30/094134lk8cgdzl2b89olnu.png\"></a></p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">如果用户点击取消，不授权呢？那还能怎么样，点击再弹出原来的弹窗重新授权呗。很遗憾，这里并不能像授权登录弹窗一样点了取消之后，再次点击授权按钮还会唤起那个弹窗。解决方法：在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>saveImageToPhotosAlbum</code> 的fail回调函数里面操作，再次获取保存到相册权限。</p></div><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (err.errMsg === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"saveImageToPhotosAlbum:fail:auth denied\"</span> || err.errMsg === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"saveImageToPhotosAlbum:fail authorize no response\"</span> || err.errMsg === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"saveImageToPhotosAlbum:fail auth deny\"</span>) {\r\n  uni.showModal({\r\n\ttitle: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'提示'</span>,\r\n\tconten<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'需要您授权保存相册'</span>,\r\n\tshowCance<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">l:</span> false,\r\n\tsucces<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">s:res</span>=&gt;{\r\n\t  uni.openSetting({\r\n\t\tsuccess(settingdata) {\r\n\t\t  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (settingdata.authSetting[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'scope.writePhotosAlbum'</span>]) {\r\n\t\t\tuni.showModal({\r\n\t\t\t  title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'提示'</span>,\r\n\t\t\t  conten<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'获取权限成功,再次点击保存图片按钮即可保存'</span>,\r\n\t\t\t  showCance<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">l:</span> false,\r\n\t\t\t})\r\n\t\t  } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n\t\t\tuni.showModal({\r\n\t\t\t  title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'提示'</span>,\r\n\t\t\t  conten<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">t:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'获取权限失败，将无法保存到相册哦~'</span>,\r\n\t\t\t  showCance<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">l:</span> false,\r\n\t\t\t})\r\n\t\t  }\r\n\t\t},\r\n\t\tfail(failData) {\r\n\t\t  console.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"failData\"</span>,failData)\r\n\t\t},\r\n\t\t<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">complete</span>(finishData) {\r\n\t\t  console.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"finishData\"</span>, finishData)\r\n\t\t}\r\n\t  })\r\n\t}\r\n  })\r\n}\r\n</pre></div></div><div style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">点击取消按钮之后，会跳转到这里。打开设置里的“保存到相册”的开关即可。</p><p><a href=\"data/attachment/portal/201912/30/094134quvbvcrvbbcvwa1u.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/30/094134quvbvcrvbbcvwa1u.png\"></a></p></div><h3 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.6em; color: inherit; text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em;\">原生微信小程序和uniapp框架的一些对比</h3><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">针对此次项目，这里挑两点来写。</p><h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility; text-indent: 1em;\">全局变量的管理</h4><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">1、原生微信小程序可以在app.js的globalData对象中对全局变量进行管理</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">app.js</p><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">App</span>({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">globalData</span>: {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">session</span>:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>\r\n    }\r\n})\r\n</pre></div></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">pages/index/index.js</p><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs verilog\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>...\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> app = getApp()<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取应用实例</span>\r\napp<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.globalData</span><span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.session</span> = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"xxxx\"</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//设置</span>\r\napp<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.globalData</span><span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.session</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//读取</span>\r\n...\r\n</pre></div></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">2、uniapp用的是vue的那套，所以可以用vuex来管理状态</p><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> Vue <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'vue'</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> Vuex <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'vuex'</span>\r\nVue.use(Vuex);\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> store = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> Vuex.Store({\r\n\t <span class=\"hljs-attr\">state</span> : {\r\n\t\t<span class=\"hljs-attr\">session</span>:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>\r\n\t },\r\n\t <span class=\"hljs-attr\">mutations</span> : {\r\n\t\tgetSession(state, res){\r\n\t\t\tstate.session = res;\r\n\t\t},\r\n\t }\r\n});\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> store\r\n</pre></div></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">设置</p><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.$store.commit(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'getSession'</span>,res.session) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//接口返回res.session</span>\r\n</pre></div></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">获取</p><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.$store.state.session\r\n</pre></div></div><h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility; text-indent: 1em;\">页面获取全局函数返回的值</h4><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">1、原生微信小程序，比如在app.js中获取用户信息保存在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>globalData</code> 中userInfo字段，然后页面在onload的时候获取全局的userInfo，你会发现有时候拿不到。由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回，所以需要加入 callback 以防止这种情况。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">app.js</p><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>App({\r\n  <span class=\"hljs-attr\">onLaunch</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.init()\r\n  },\r\n  <span class=\"hljs-attr\">init</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 获取用户授权结果</span>\r\n    wx.getSetting({\r\n      <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>) =&gt;</span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.authSetting[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'scope.userInfo'</span>]) {\r\n          wx.getUserInfo({ <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 获取用户信息</span>\r\n            success: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n              <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.globalData.userInfo = res.userInfo;\r\n              <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userInfoReadyCallback) {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userInfoReadyCallback(res)\r\n              }\r\n            },\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//拒绝授权</span>\r\n            fail: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n\r\n            }\r\n          })\r\n        } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n\r\n        }\r\n      }\r\n    })\r\n  },\r\n  <span class=\"hljs-attr\">globalData</span>: {\r\n    <span class=\"hljs-attr\">userInfo</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>\r\n  }\r\n})\r\n</pre></div></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">pages/index/index.js</p><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> app = getApp()\r\nPage({\r\n  <span class=\"hljs-attr\">data</span>: {\r\n\t<span class=\"hljs-attr\">userInfo</span>:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>\r\n  },\r\n  <span class=\"hljs-attr\">onLoad</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (app.globalData.userInfo) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n        <span class=\"hljs-attr\">userInfo</span>: app.globalData.userInfo,\r\n      })\r\n    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n      app.userInfoReadyCallback = <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n          <span class=\"hljs-attr\">userInfo</span>: res.userInfo,\r\n        })\r\n      }\r\n    } \r\n  },\r\n})\r\n</pre></div></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">2、uniapp是配合vuex和计算属性computed来处理的</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">APP.vue</p><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> {\r\n\t<span class=\"hljs-attr\">onLaunch</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.getUserInfo();\r\n\t},\r\n\t<span class=\"hljs-attr\">methods</span>:{\r\n\t\tgetUserInfo() {\r\n\t\t\tuni.getSetting({\r\n\t\t\t  <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>) =&gt;</span> {\r\n\t\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.authSetting[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'scope.userInfo'</span>]) {\r\n\t\t\t\t  uni.getUserInfo({ <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 获取用户信息 </span>\r\n\t\t\t\t\tsuccess: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n\t\t\t\t\t\t<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.$store.commit(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'userInfo'</span>,{\r\n\t\t\t\t\t\t\t<span class=\"hljs-attr\">avatarUrl</span>:res.userInfo.avatarUrl,\r\n\t\t\t\t\t\t\t<span class=\"hljs-attr\">nickName</span>:res.userInfo.nickName\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t},\r\n\t\t\t\t\t<span class=\"hljs-attr\">fail</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t  })\r\n\t\t\t\t} <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t})\r\n\t\t},\t\r\n\t}\r\n}\r\n</pre></div></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">pages/index/index.vue</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">获取到 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>userInfo</code> 便可以使用了，如果需要，还可以使用watch监听。</p><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>export <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> {\r\n\tdata() {\r\n\t\treturn {\r\n\r\n\t\t} \r\n\t},\r\n\tonLoad(){\r\n\t\t\r\n\t},\r\n\tcomputed: {\r\n\t\tuserInfo() {\r\n\t\t\treturn this.$store.state.hasUserInfo\r\n\t\t}\r\n\t},\r\n\twatch:{\r\n\t\tuserInfo(val){\r\n\t\t\tif(val){\r\n\t \t\t \t\r\n\t \t\t}\r\n\t \t}\r\n\t},\r\n\tcreated() {\r\n\r\n\t},\r\n\tmethods: {\r\n\t\t\r\n\t}\r\n}</pre></div></div></div></div> </td>", "pub_time": "2019-12-30 00:33", "author": "Rolan"}
{"title": "从CSS角度来做一个模态框 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>今天我们从CSS角度来做一个下图这种模态框。</p><p><a href=\"data/attachment/portal/201912/30/094308lpwzbnwa41oxwken.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/30/094308lpwzbnwa41oxwken.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>先上代码： <a href=\"https://developers.weixin.qq.com/s/fINXOVmC7wdn\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://developers.weixin.qq....</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>模态框背后的背景是一个fixed定位，四个方向都为0的view，主要是怎么实现中间弹窗的垂直水平居中，这里提供两个方案。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1、定位</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这种方案是将弹窗设置绝对定位后，左边（上边）距设为50%，就是弹窗左上角距父级左上角的距离正好是父级的宽度（高度）的50%，就是在正中间，同时使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>transform</code> 属性，将弹窗向左（上）移动自身宽度（高度）的50%，来实现弹窗正好在水平（垂直）方向都能居中。</p><pre class=\"prettyprint hljs scss\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50%</span>;\r\n<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50%</span>;\r\n<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transform</span>: translateX(-<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50%</span>) translateY(-<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50%</span>);</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2、flex布局</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这种方案更简单，只需要将父级设置为flex布局的同时设置 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>justify-content</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>align-items</code>都是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>center</code> 就可以了。</p><pre class=\"hljs scss\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: center;\r\n<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">align-items</span>: center;</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>彩蛋</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>模态框弹出后，在父级上加上 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>catchtouchmove=\"ture\"</code> 就可以阻止背后页面的上下滚动。</p> </td>", "pub_time": "2019-12-30 00:42", "author": "Rolan"}
{"title": "小程序中解决网络请求缓存 ", "content": "<td id=\"article_content\"> \n                     \n                    <div><h2 class=\"heading\" data-id=\"heading-0\">需求</h2>\r\n<p>提交<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>审核时，有一个体验测评，产品让我们根据小程序的体验测评报告去优化小程序。</p>\r\n<p>其中有一项是网络请求的优化，给我们出了很大的难题。</p>\r\n<p>文档中是这样解释的：3分钟以内同一个<code>url</code>请求不出现两次回包大于<code>128KB</code>且一模一样的内容</p>\r\n<p>看到这个问题的时候，首先想到的是在响应头上加上<code>cache-control</code>，经过测试发现小程序并不支持网路请求缓存。搜索发现官方明确答复，小程序不支持网络请求缓存：<a target=\"_blank\" href=\"https://developers.weixin.qq.com/community/develop/doc/0002c4f8a2c718a1d557dd81359400\" rel=\"nofollow noopener noreferrer\">wx.request不支持http缓存</a></p>\r\n<p>既然官方不支持网络请求缓存，那只能自己想办法解决这个问题了。</p>\r\n<p>先来看一下需求：<strong><code>3</code>分钟内，同一请求只能请求一次。</strong></p>\r\n<h2 class=\"heading\" data-id=\"heading-1\">分析</h2>\r\n<p>分析：</p>\r\n<ol>\r\n<li>只需做<code>GET</code>请求的网络缓存。</li>\r\n<li>缓存时间如何控制。</li>\r\n<li>做了缓存之后，如何知道<code>3</code>分钟，这个请求在服务端数据有没更新。</li>\r\n<li>提交<code>GET</code>请求前，先检查本地有没有缓存</li>\r\n</ol>\r\n<p>前两点比较好实现，虽然小程序不支持网络请求缓存，但我们还是可以利用<code>cache-control</code>来实现这个功能。</p>\r\n<p>首先网络请求需不需要情缓存统一交给服务端去做，服务端在处理<code>GET</code>请求时，统一加上响应头<code>cache-control</code>，如果需要缓存就用<code>max-age=180</code>，如果不需要做网络请求就用<code>no-cache</code>。前端根据响应头信息自己做前端缓存。</p>\r\n<p>其中的难点是前端如何知道服务端数据有没更新，如果服务端数据更新了，前端还是使用缓存这是有问题的。</p>\r\n<p>经过一番思考后发现，前端提交数据后，相应的<code>GET</code>请求数据会更新，也就是说前端只要有数据提交，就应该把缓存清空。</p>\r\n<p>这有一个难点，当前端提交数据时，前端是不知道哪些<code>GET</code>请求会因此更新数据，所以这个问题我们没有解决，我的方法比较粗暴：只要前端提交了数据，就将所有缓存清空。这是一个治标不治本的问题。</p>\r\n<h2 class=\"heading\" data-id=\"heading-2\">实现</h2>\r\n<p>公司项目封装了<code>HTTP</code>请求</p>\r\n<ol>\r\n<li>拦截请求，如果是<code>GET</code>请求，检查缓存，\r\n<ul>\r\n<li>如果缓存没过期，将缓存返回出去，不再发请求</li>\r\n<li>如果缓存过期，发请求</li>\r\n</ul>\r\n</li>\r\n</ol>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-keyword\">if</span> (request.method.toLowerCase() === <span class=\"hljs-string\">\"get\"</span>){\r\n  <span class=\"hljs-comment\">// param 请求信息</span>\r\n  <span class=\"hljs-keyword\">const</span> cache = <span class=\"hljs-keyword\">this</span>.handleCatchControl(request)\r\n  <span class=\"hljs-keyword\">if</span> (!cache.isRequest)\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.listener.onApiResponse(request, <span class=\"hljs-number\">200</span>, cache.data), sequence;   <span class=\"hljs-comment\">//将缓存返回给对应的请求</span>\r\n}\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><ol start=\"2\">\r\n<li>缓存网络请求</li>\r\n</ol>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-comment\">// param 响应头，上下文，响应数据</span>\r\n<span class=\"hljs-keyword\">this</span>.setCatchControl(headers, context, response.data)\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><ol start=\"3\">\r\n<li>两个工具函数\r\n<ul>\r\n<li>处理网络缓存</li>\r\n<li>设置网络缓存</li>\r\n</ul>\r\n</li>\r\n</ol>\r\n<ul>\r\n<li>设置网络请求\r\n<ol>\r\n<li><code>GET</code>请求缓存数据，其他请求清空数据</li>\r\n<li>数据格式：</li>\r\n</ol>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-comment\">//如果同时发起多个`GET`请求，需要拼接之前缓存数据</span>\r\nApiAgent.cacheData = <span class=\"hljs-built_in\">Object</span>.assign(ApiAgent.cacheData,{\r\n  [context.request.url]: {    <span class=\"hljs-comment\">//api</span>\r\n    data,   <span class=\"hljs-comment\">//响应数据</span>\r\n    expireTime: <span class=\"hljs-built_in\">Number</span>(cacheControl.split(<span class=\"hljs-string\">\"=\"</span>)[<span class=\"hljs-number\">1</span>] + <span class=\"hljs-string\">'000'</span>),   <span class=\"hljs-comment\">//过期时间</span>\r\n    cacheTime: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>().getTime(),    <span class=\"hljs-comment\">//缓存时间</span>\r\n  }\r\n})\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre></li>\r\n</ul>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-comment\">// param 响应头，上下文，响应数据</span>\r\nsetCatchControl(responseHeader: any, <span class=\"hljs-attr\">context</span>: any, <span class=\"hljs-attr\">data</span>: any) {\r\n  <span class=\"hljs-keyword\">if</span> (context.request.method.toLowerCase() === <span class=\"hljs-string\">\"get\"</span>) {\r\n    <span class=\"hljs-keyword\">const</span> headers = HandleHeaders.get(responseHeader)\r\n    <span class=\"hljs-keyword\">const</span> cacheControl = headers[<span class=\"hljs-string\">\"cache-control\"</span>]\r\n    <span class=\"hljs-keyword\">if</span> (cacheControl &amp;&amp; cacheControl !== <span class=\"hljs-string\">\"no-cache\"</span>) {\r\n      ApiAgent.cacheData = <span class=\"hljs-built_in\">Object</span>.assign(ApiAgent.cacheData,{\r\n        [context.request.url]: {\r\n          data,\r\n          <span class=\"hljs-attr\">expireTime</span>: <span class=\"hljs-built_in\">Number</span>(cacheControl.split(<span class=\"hljs-string\">\"=\"</span>)[<span class=\"hljs-number\">1</span>] + <span class=\"hljs-string\">'000'</span>),\r\n          <span class=\"hljs-attr\">cacheTime</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>().getTime(),\r\n        }\r\n      })\r\n    }\r\n  } <span class=\"hljs-keyword\">else</span> {\r\n    ApiAgent.cacheData = {}\r\n  }\r\n}\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><ul>\r\n<li>处理网络缓存\r\n<ol>\r\n<li>判断缓存是否存在</li>\r\n<li>判断缓存有没过期，在设置缓存时，比对当前时间和缓存时间，是否小于失效时间</li>\r\n</ol>\r\n</li>\r\n</ul>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-comment\">// param 请求信息</span>\r\nhandleCatchControl(request): any {\r\n  <span class=\"hljs-keyword\">const</span> cacheArr = ApiAgent.cacheData\r\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">Object</span>.keys(cacheArr).length === <span class=\"hljs-number\">0</span>)\r\n    <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">isRequest</span>: <span class=\"hljs-literal\">true</span> }\r\n  <span class=\"hljs-keyword\">let</span> cache = {}\r\n  <span class=\"hljs-built_in\">Object</span>.keys(cacheArr).forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">cacheArrKey</span> =&gt;</span> {\r\n    <span class=\"hljs-keyword\">if</span> (cacheArrKey === request.url) {\r\n      cache = cacheArr[cacheArrKey]\r\n    }\r\n  })\r\n  <span class=\"hljs-keyword\">const</span> newDate = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>().getTime()\r\n  <span class=\"hljs-keyword\">if</span> (newDate - cache.cacheTime &lt; expireTime){\r\n    <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">isRequest</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">data</span>: cache.data }\r\n  }\r\n  <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">isRequest</span>: <span class=\"hljs-literal\">true</span>}\r\n}\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><ol start=\"4\">\r\n<li>响应头全部变成小写，在小程序中，无法确定响应头的大小写会导致报错，所以统一处理响应头</li>\r\n</ol>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HandleHeaders</span> </span>{\r\n  <span class=\"hljs-keyword\">static</span> get(headers: { [key: string]: string }) {\r\n    <span class=\"hljs-keyword\">const</span> headersData: any = {}\r\n    <span class=\"hljs-built_in\">Object</span>.keys(headers).forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">key</span> =&gt;</span> {\r\n      headersData[key.toLowerCase()] = headers[key]\r\n    })\r\n    <span class=\"hljs-keyword\">return</span> headersData\r\n  }\r\n}\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><h2 class=\"heading\" data-id=\"heading-3\">总结</h2>\r\n<p>有一点没有说，就是这个缓存是保存在哪里的？</p>\r\n<p>既没有用<code>localStorage</code>，也没有用<code>globalapp</code>，用的是类的静态属性。</p>\r\n<p>这样做有<code>3</code>个好处：</p>\r\n<ol>\r\n<li>使用<code>localStorage</code>数据不好清除，后期可维护性也较差</li>\r\n<li>缓存挂在<code>globalapp</code>和请求无直接联系</li>\r\n<li>无需在退出小程序时手动清理缓存</li>\r\n</ol>\r\n<p>我在使用时遇到一个坑，是因为自己没有理解：<strong>类能保存数据的，不能保存状态，但类的对象是既可以保存数据，也可以保存状态的。</strong></p>\r\n<p>最后，此方法还是有很大的优化空间。</p>\r\n<p>另外可添加微信<code>ttxbg180218</code>交流</p></div> </td>", "pub_time": "2019-12-30 00:45", "author": "Rolan"}
{"title": "小程序初实践总结 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>近期组内接了<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>项目，也是有幸能够加入到项目中，做一些简单的开发。之前对小程序有所接触，但是仅限于自己了解和书写demo，真正项目开发还是第一次~开发过程中也是遇到了一些不熟悉和自己觉得是小坑的地方，做个简单总结，给自己做个记录，同时给需要的小伙伴一些小小参考。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>一、添加一个新组建，控制台报错“Component is not found in path '../../components/xx/xx'”。</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>答：这个问题开始是很迷茫的，仔细检查了文件名称、引用路径以及父组件usingComponents，都没有发现有问题，但是控制台依旧提示找不到对应组件。后面经过大老提示： 对于一个新的组件，必须在对应的js里添加Component({})，json文件里也要写上component:true。加上相关配置后，控制台就不会飘红了。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>二、text组件，默认会出现上内边距。</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>答：使用text组件展示文字内容，看上去并没有什么技术而言，直接引用就好了（心里默默开森）</p><pre class=\"hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;text&gt;\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">is</span> component\r\n&lt;/text&gt;复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>但是，看到效果之后，显然有点蒙圈，为什么上边会出现那么大的距离啊？！</p><p><a href=\"data/attachment/portal/201912/31/094637sunsf3cneumx35p7.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/094637sunsf3cneumx35p7.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>第一个想法是去看css，是否有默认内边距样式，然而并没有；通过padding、margin去设置值，也没什么用；然后。。然后。。。我就不知道怎么办了，只好请教度娘。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>网上有小伙伴给出了答案，其实并不是样式问题，而是text组件本身问题，要修改这个问题，只需要把text标签和内容写在一行就可以了。</p><pre class=\"hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;text&gt;<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">is</span> component&lt;/text&gt;\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>三、小程序分享功能，页面分享和按钮分享功能。</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>答：众所周知，小程序是可以进行分享的，有两种方式，一个是自带的分享功能，另一个是页面上按钮点击分享。本质上他们调用的是同一个方法，即onShareAppMessage，可以通过options参数的options.from区分是来自按钮还是原生分享，可以通过设置对应字段修改分享展示的内容，不设置则默认分享当前页。</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">onShareAppMessage</span> (res) {\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 来自页面内转发按钮    </span>\r\n  <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.from === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'button'</span>) {\r\n     <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">title</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">`标题`</span>,      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//分享标题        </span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">path</span>: shareUrl,    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//分享的链接        </span>\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">imageUrl</span>:‘’        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//分享展示的图片           </span>\r\n     };    \r\n   } <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {      \r\n     <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {        \r\n       <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">title</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">`分享标题`</span>,        \r\n       <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">imageUrl</span>:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>    \r\n     };\r\n   }\r\n}复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>按钮分享，只需要给button添加一个open-type即可，&lt;button open-type=\"share\"&gt;&lt;/button&gt;。但是此时按钮会有默认样式，可以通过控制台查看，进行css修复样式，分享回调同样调用上边方法。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>四、小程序内获取某个元素或者组件距离顶部初始高度</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>答：实际开发中，我们基本会遇到需要获取某个元素位置信息的需求，早在jq一把梭的时代，获取这些属性值是很容易的，直接一个api就可以了。同样的小程序里也有比较实用的方法，我们可以给需要获取位置的元素/组件一个id，然后通过下面方法即可获取：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> query = wx.createSelectorQuery().in(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>);\r\nquery.select(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#testId'</span>).boundingClientRect(<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">rect</span>)</span>{\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//rect即包含了所需要的各种位置信息，如top、left、right、bottom等</span>\r\n})复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果在页面初始化时需要获取到位置，可以在onLoad方法里使用（最好使用setTimeout，否则可能会取不到），获取对应值之后就可以进行后续的处理了。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>五、scroll-view组件使用</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>答：滚动组件的使用，在开发中可以说很普遍了。小程序也封装了scroll-view组件，并提供了一些封装好的方法，使用起来可以说很方便了，但是也不可避免的有一些需要注意的地方。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><b>1、scroll-view的绑定scroll事件不触发</b></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当页面组件按照文档方法书写完成后，去滚动页面发现页面滚动事件并没有触发，后面经过仔细查看，确定问题原因是scroll-view没有设置高度，而且必须是精准高度，不能用百分比。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><b>2、scroll-view滚动到某一位置</b></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们开发时可能需要用到点击后滚动到某一位置或者初始化时滚动到对应位置，过去通常是通过锚点方式进行触发，同样的scroll-view为我们封装了一个很好用的方法scroll-into-view，对应的值也是一个id值，具体使用方法及注意事项可以参考文档（ <a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/scroll-view.html\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">scroll-view</a> ）。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><b>3、scroll-view中包含fixed定位元素，滚动时fixed定位元素闪动</b></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这个问题算是比较坑了，在scroll-view里面，我们设置某个元素或者组件为fixed定位，在滚动页面时，会发现定位的元素会消失一下然后再出现，虽然不是什么严重问题，但是很影响用户体验。这个问题我看到社区里也有很多人在问，但是目前官方还没有给出合理方法。目前简单的应对方法我总结了两点：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一是把定位元素放到scroll-view外部，此类方法可以完美避开上述问题，但是某些场景下可能不太适用；</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>二是，在使用scroll-view时我们通常会设置scroll-with-animation=true即开启滚动过度动画效果，当我们把这个值设置为false时，上述问题也能很好的解决，即使定位元素在scroll-view内部也不会有闪现问题。但是此方法牺牲的也是用户体验，如果有短距离的页面滚动可以使用此类方法。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>欢迎遇到此类问题的小伙伴进行补充，在官方给出完美方案之前，我们也能有自己的应对方案。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>六、小程序checkbox样式</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这个就不得不吐槽一下UI了，其他的都还好，但是对于表单相对应的样式，真的是丑爆了！而且，当你想通过css样式覆盖方法修改的时候，会发现，你的修改根本就是不起作用的！！根本原因就是你所看见的wxml结构与内容和样式所定义的根本不是一个样子！！！</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当然也有机智的小伙伴探究出了方案（以checkbox为例）：</p><pre class=\"prettyprint hljs verilog\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//wxml</span>\r\n&lt;label&gt;\r\n    &lt;checkbox&gt;aaa&lt;/checkbox&gt;\r\n&lt;/label&gt;\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//wxss</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//修改checkbox大小</span>\r\ncheckbox <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.wx</span>-checkbox-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>{}\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//修改checkbox选中后的样式</span>\r\ncheckbox <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.wx</span>-checkbox-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span><span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.wx</span>-checkbox-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>-checked{}\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//修改checkbox选中图标样式</span>\r\ncheckbox <span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.wx</span>-checkbox-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span><span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">.wx</span>-checkbox-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>-checked::<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">before</span>{}复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当然，如果你不喜欢原组件，不想去修改css，完全可以自己仿写一个checkbox，样式自己写，切换效果通过点击事件（参数e，获取data）自己控制就好。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>关于表单内容，后面会再总结一个自定义表单及自定义校验方法及自己进行的优化。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>七、小程序页面跳转，跳转到其他域名页面</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序页面跳转，我们可以通过wx.navigateTo()方法进行，但是当需要跳转到不同域页面时，直接跳转链接的方式就不好用了。小程序也为我们提供了方法，即webb-view( <a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">使用方法见文档</a>)。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以上就是在初次开发中遇到的问题及总结的使用方法，后面随着使用的增多，肯定还会有更多的问题出现，随时进行添加吧，算是对小程序使用自己的一个总结，有不足和错误之处，还希望各位大大提出宝贵意见。</p><p style='line-height: inherit; margin-top: 22px; margin-bottom: 22px; color: rgb(51, 51, 51); font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>ps：前期初次接触小程序书写demo时，也遇到了一些小问题，付个传送门：</p><p style='line-height: inherit; margin-top: 22px; margin-bottom: 22px; color: rgb(51, 51, 51); font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><span style=\"font-weight: 700;\"><u><a href=\"https://juejin.im/post/5d4be703e51d4561e721dea2\" target=\"_blank\" rel=\"\" style=\"margin: initial; background-color: transparent; text-decoration-line: none; color: rgb(2, 105, 200); border-bottom: 1px solid rgb(209, 233, 255);\">初试微信小程序遇到的问题总结</a></u></span></p> </td>", "pub_time": "2019-12-31 00:05", "author": "Rolan"}
{"title": "如何一人五天开发完复杂小程序（前端必看） ", "content": "<td id=\"article_content\"> \n                     \n                    <p>随着业务需求的不断累加、<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>追求快速产出。</p><p>在人手不足且开发周期较短的情况下，我们需要找到一个最大化开发效率的方法。</p><p>而高效率的开发离不开规范化、工程化、组件化。</p><p>为此整理写下总结，细数小程序中的坑与实践。</p><p>介绍我们对小程序高效率开发的思考与探索。</p><ul><li><p>布局方案</p></li><ul><li><p>导航栏</p></li><li><p>TabBar</p></li><li><p>BasicPage</p></li></ul><li><p>用户系统</p></li><ul><li><p>登录方案</p></li><li><p>初始化登录</p></li><li><p>鉴权</p></li></ul><li><p>优化及 Bug 追踪</p></li><ul><li><p>日志收集</p></li><li><p>数据分析</p></li></ul><li><p>常用优化方案</p></li><ul><li><p>preLoad</p></li><li><p>独立分包加载</p></li></ul></ul><h1 data-id=\"heading-0\">布局方案</h1><p>我们首先思考的是，在小程序中如何快速且高还原产出页面。</p><p>为此我们封装了一套页面组件。</p><h2 data-id=\"heading-1\">导航栏</h2><p>目前小程序有如下两种导航栏：常规、自定义导航栏</p><p><a href=\"data/attachment/portal/201912/31/100656rwd6dt4816dvj8nl.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100656rwd6dt4816dvj8nl.jpg\"></a></p><p>自定义导航栏布局下，我们可以完全控制导航栏样式，赋予导航栏更多交互及 UI 设计上的可能。如上图所示，Readhub 在导航栏中加入了设置按钮，喜茶在个人页中标题渐隐及沉浸式导航栏效果。常规布局下，顶部导航栏部分直接使用小程序提供导航栏。</p><p>可根据具体业务选择具体布局方案，在我们小程序中，我们选择了全部使用自定义导航栏的方式并对其进行了一定封装。</p><p>在确定使用自定义导航栏方案后，我们对导航栏进行了拆解</p><p><a href=\"data/attachment/portal/201912/31/100655dc78oms4ca04m4qa.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100655dc78oms4ca04m4qa.jpg\"></a></p><p>拆解后，我们发现可以将自定义导航栏分为两个部分：StatusBar 及 NavigationBar 。</p><p>通过查阅微信 API ，我们分别通过 <code>wx.getSystemInfoSync</code> 及 <code>wx.getMenuButtonBoundingClientRect</code> 获取到 StatusBarHeight 及 MenuButton 的布局信息。</p><p>由拆解图可知</p><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">1 NavigationBarPaddingTop = MenuButtonTop - StatusBarHeight\r\n3 NavigationBarPaddingBottom = NavigationBarPaddingTop\r\n5 NavigationBar = StatusBarHeight + NavigationBarPaddingTop + NavigationBarPaddingBottom + MenuButtonHeight<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>得到上述数据后，结果简单封装， 我们得到如下方案</p><div><p><a href=\"data/attachment/portal/201912/31/100656urvrfgg4v4rg5fc5.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100656urvrfgg4v4rg5fc5.jpg\"></a></p></div><p>StatusBar 部分， 我们使用 PaddingTop 填充。</p><p>可在此基础上可再进一步封装一些通用 NavigationBar 组件。</p><p>我们封装了一些常用 NavigationBar 组件， 如下所示：</p><p><a href=\"data/attachment/portal/201912/31/100656mw03u727b9p0exqw.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100656mw03u727b9p0exqw.jpg\"></a></p><div><div>沉浸式导航栏</div></div><h2 data-id=\"heading-2\">自定义 TabBar</h2><p>目前小程序 TabBar 中也存在两种方案。</p><p>常规 TabBar ：微信提供方案，可修改 icon 、 文字及其对应选中状态。</p><p>自定义 TabBar ：小程序基础库 2.5.0 开始支持。可通过其实现异形 TabBar 或各种自定义样式。</p><p><a href=\"data/attachment/portal/201912/31/100657tof668alax6oprev.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100657tof668alax6oprev.jpg\"></a></p><p><br>在我们小程序中，我们选择全部使用自定义 TabBar 来实现业务。</p><p>由于小程序基础库 2.5.0 之后官方才开始支持自定义 TabBar 。我们此处不直接选择使用 custom-tab-bar 方案。选择结合 custom-tab-bar 、 自定义组件及 <code>wx.hideTabBar</code> 的方案实现。</p><p>具体方案为放置空节点 custom-tab-bar 文件。在页面中按需引入自定义 TabBar 组件。在页面初始化完成后调用 <code>wx.hideTabBar</code> 隐藏原 TabBar 。</p><p>这样做的好处在于，在基础库 2.5.0 及更高版本时正常显示，在低版本时以最小代价兼容。</p><p><a href=\"data/attachment/portal/201912/31/100657vrssjulunh8rcrcr.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100657vrssjulunh8rcrcr.jpg\"></a>在 iPhone X 系列下的底部安全区兼容方案如下</p><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\"> 1@mixin media-<span class=\"hljs-function\"><span class=\"hljs-title\">style</span></span>() { 2  .tab { 3    padding-bottom: 84px; 4  } 5} 6// 适配iPhone X系列下巴 7@media screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) { 8    @include media-style(); 9}1011@media only screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio:3) {12    @include media-style();13}1415@media only screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio:2) {16    @include media-style();17}18// 下面代码只为适配iPhone X在微信调试模拟器中为724px19@media screen and (device-width: 375px) and (device-height: 724px) and (-webkit-device-pixel-ratio: 3) {20    @include media-style();21}<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>推荐如无特殊需求，建议直接使用微信提供方案，在自定义 TabBar 方案中 安卓手机下拉刷新时， TabBar 会被拉出可视区域。需自定义下拉刷新组件解决<br></p><h2 data-id=\"heading-3\">方案整合 BasicPage</h2><p>以上方案在线上运行一段时间后稳定后。对自定义导航栏及自定义 TabBar 方案进行了整合。封装了 BasicPage 组件。</p><p>以我们线上典型页面为例，我们可以将页面分为两大类。<a href=\"data/attachment/portal/201912/31/100657azp7i2hhkif22la4.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100657azp7i2hhkif22la4.jpg\"></a></p><p><br>基于以上分析结合线上需求，我们对此基础组件进行封装。</p><blockquote><p>Taro 框架伪代码，可根据各自使用框架进行封装，思路一致</p></blockquote><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\"> 1class BasicPage extends Taro.Component { 2 3  state = { 4    menuButtonHeight: 32, 5    menuButtonTop: 48, 6    statusBarHeight: 44, 7  }; 8 9  <span class=\"hljs-function\"><span class=\"hljs-title\">componentDidMount</span></span>() {10        // ...获取并设置 menuButtonHeight 、 menuButtonTop 、 statusBarHeight11  }1213  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span></span>() {14    <span class=\"hljs-built_in\">return</span> (15      &lt;View className=<span class=\"hljs-string\">'basic-page'</span>&gt;16        {17          this.props.header &amp;&amp; &lt;View className={`basic-page-header<span class=\"hljs-variable\">${this.props.fixed ? ' fixed' : ''}</span>`} style={{18            paddingTop: `<span class=\"hljs-variable\">${this.state.statusBarHeight}</span>px`,19            height: `<span class=\"hljs-variable\">${(this.state.menuButtonTop - this.state.statusBarHeight) * 2 + this.state.menuButtonHeight}</span>px`,20          }}21          &gt;22            {this.props.renderHeader}23          &lt;/View&gt;24        }25        &lt;View className={`basic-page-body<span class=\"hljs-variable\">${this.props.tab ? ' tab' : ''}</span>`}&gt;26          {this.props.renderBody}27        &lt;/View&gt;28        {this.props.tab &amp;&amp; &lt;TabBar active={this.props.tabActive} /&gt;}29      &lt;/View&gt;30    );31  }32}3334BasicPage.defaultProps = {35  fixed: <span class=\"hljs-literal\">false</span>, // header 是否浮动36  tab: <span class=\"hljs-literal\">false</span>,37  header: <span class=\"hljs-literal\">false</span>,38  tabActive: <span class=\"hljs-string\">'template'</span>,39};40<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>使用中会经常用到 自定义 TabBar 、 自定义 NavigationBar 布局数据。再封装一个工具类获取。<br></p><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\"> 1import Taro from <span class=\"hljs-string\">\"@tarojs/taro\"</span>; 2 3<span class=\"hljs-keyword\">function</span> rpx2px(rpx, windowWidth) { 4  <span class=\"hljs-built_in\">return</span> rpx / 750 * windowWidth; 5} 6 7<span class=\"hljs-built_in\">export</span> default class customConfig { 8 9  static <span class=\"hljs-function\"><span class=\"hljs-title\">fetchAllConfig</span></span>() {10    const menuButton = Taro.getMenuButtonBoundingClientRect();11    const systemInfo = Taro.getSystemInfoSync();1213    const statusBarHeight = systemInfo.statusBarHeight;14    const headerHeight = (menuButton.top - systemInfo.statusBarHeight) * 2 + menuButton.height;15    const footerHeight = systemInfo.model.indexOf(<span class=\"hljs-string\">'iPhone X'</span>) === -116      ?17      rpx2px(100, systemInfo.windowWidth)18      :19      rpx2px(168, systemInfo.windowWidth);  // 50  8420    const bodyHeight = systemInfo.windowHeight - statusBarHeight - headerHeight - footerHeight;21    const noTabBodyHeight = systemInfo.windowHeight - statusBarHeight - headerHeight;2223    <span class=\"hljs-built_in\">let</span> data = {24      <span class=\"hljs-built_in\">source</span>: {25        menu: menuButton,26        system: systemInfo,27      },28      height: {29        statusBar: statusBarHeight,30        header: headerHeight,31        body: bodyHeight,32        noTabBody: noTabBodyHeight,33        footer: footerHeight,34      },35    };36    Taro.setStorageSync(<span class=\"hljs-string\">'customConfig'</span>, data);37    <span class=\"hljs-built_in\">return</span> data;38  }3940  static get <span class=\"hljs-function\"><span class=\"hljs-title\">config</span></span>() {41    <span class=\"hljs-built_in\">let</span> storageInfoSync = Taro.getStorageSync(<span class=\"hljs-string\">'customConfig'</span>);42    <span class=\"hljs-keyword\">if</span>(!storageInfoSync) {43      storageInfoSync = this.fetchAllConfig();44    }45    <span class=\"hljs-built_in\">return</span> storageInfoSync;46  }47}<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>到此，我们完成对基础页面组件的封装。目前线上运行小程序所有页面都基于该组件进行开发。</p><p>开发新页面时只需要引用该组件即可。</p><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">1&lt;BasicPage header tab tabActive=<span class=\"hljs-string\">'index'</span> 2        renderHeader={ 3          &lt;View 4            className=<span class=\"hljs-string\">'my-index-header'</span> 5          &gt; 6            &lt;Text&gt;Title&lt;/Text&gt; 7          &lt;/View&gt; 8        } 9        renderBody={10          &lt;View className=<span class=\"hljs-string\">'my-index-header'</span>&gt;11            Body12          &lt;/View&gt;13        }14/&gt;<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><h1 data-id=\"heading-4\">用户系统</h1><p>在一个应用中，用户系统是至关重要的。我们通过数个小程序的开发，整理了一套我们目前正在使用的用户系统实践。</p><h2 data-id=\"heading-5\">登录、获取用户信息</h2><table><tbody><tr><td><p><a href=\"data/attachment/portal/201912/31/100657awkwwwvkc8kwm8kz.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100657awkwwwvkc8kwm8kz.jpg\"></a></p></td><td></td></tr></tbody></table><p><br>如上图所示，我们将小程序登录及获取用户信息拆分为两部分。<br></p><p>主要有如下考虑：</p><ol><li><p>降低用户使用门槛，可先让用户体验部分功能。后续分享或互动时提示授权完善用户信息</p></li><li><p>保证始终持有用户登录态，方便程序处理。如把用户登录及完善用户信息放置一起，在未授权时无法获取自定义登录态。判断变得复杂且无法提前收集 formId</p></li><li><p>同一开发者账号下，多小程序互通时，如有一小程序用户授权过，可通过返回 unionid 直接同步信息，无需再授权，提升用户体验。</p></li></ol><h3 data-id=\"heading-6\">处理注意点</h3><p>授权获取用户信息时，如果服务端未记录用户 sessionKey ，在 Button type = getUserInfo 回调事件中使用 <code>wx.login</code> 方法获取 code 的话，会导致 sessionKey 变化。从而导致 getUserInfo 时使用 sessionKey 与新 sessionKey 不匹配。从而导致解密用户信息失败。</p><p>解决方案有如下两种：</p><ul><li><p>Button type = getUserInfo 回调事件中使用 <code>wx.login</code> 方法后，再次调用 <code>wx.getUserInfo</code> 方法重新获取加密用户信息。</p></li><li><p>服务端记录 sessionKey ，Button type = getUserInfo 回调后无需调用 <code>wx.login</code> ，直接提交供服务端处理。</p></li></ul><p>第一种方案适合简单改造旧项目、快速开发，但强烈建议使用服务端处理方式解决。</p><blockquote><p>完善用户信息时，解密用户信息部分请查看官方文档，这里不叙述具体流程https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html</p></blockquote><h3 data-id=\"heading-7\">unionid 机制</h3><p>另外，在登录流程中服务端向微信换取 sessionKey 过程中，如果满足一定条件，会直接返回 unionid 。同开发者账号下多个小程序时可用 unionid 做用户信息同步，无需再授权。提升用户体验。</p><blockquote><p>unionid 机制: https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/union-id.html</p></blockquote><h2 data-id=\"heading-8\">小程序初始化及页面初始化处理</h2><p>在日常开发中，我们通常会把登录获取 token 操作放置在小程序初始化中即 app.js 定义的 <code>onLaunch</code> 中。而该生命周期与页面初始化生命周期为同步进行。</p><p>此时，如果在页面初始化中，需要携带用户登录态请求接口获取信息时，可能出现如下情况</p><div><p><a href=\"data/attachment/portal/201912/31/100657v0u9ox2dl04kdkk9.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100657v0u9ox2dl04kdkk9.jpg\"></a></p></div><p>因为小程序初始化及页面初始化是同步进行的。若页面初始化时，小程序初始化中登录请求仍未完成。会导致未携带 token 或其他鉴权信息，鉴权失败。</p><p>最开始我们通过在组件中挂载一个特殊事件 <code>componentDidInit</code> ，待小程序初始化登录请求后获取当前页面实例进行调用。但该方案对代码侵入性太强，最终我们选择维护一个登录请求队列。</p><div><p><a href=\"data/attachment/portal/201912/31/100658jfzw757zzbhgahhd.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100658jfzw757zzbhgahhd.jpg\"></a></p></div><p>用上队列的原因在于，在产品需求上经常会有先跳入首页，再从首页跳入二级页的需求，这样能让用户回退一次后，仍然能回到首页。但会导致在不同页面中近乎同时调用 <code>login</code> 方法。</p><p>在第一种方案中，解决该问题需要获得所有页面实例进行调用。而引入队列后只需要轮询消费队列中函数执行即可。上述流程可解决此问题。伪代码如下：</p><blockquote><p>代码仅供理解思路</p></blockquote><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\"> 1<span class=\"hljs-built_in\">let</span> loginDoing = <span class=\"hljs-literal\">false</span>; 2const loginEvent = []; 3 4const userProfile = observable({ 5  user: { 6    avatar: <span class=\"hljs-string\">''</span>, 7    isCompleted: <span class=\"hljs-literal\">false</span>, 8    nickname: <span class=\"hljs-string\">''</span>, 9    uid: 0,10    token: <span class=\"hljs-string\">''</span>,11  },12  async <span class=\"hljs-function\"><span class=\"hljs-title\">loginProcess</span></span>() {13    <span class=\"hljs-keyword\">if</span>(this.user.token) {14      <span class=\"hljs-built_in\">return</span> this.user;15    }16    loginDoing = <span class=\"hljs-literal\">true</span>;17    <span class=\"hljs-built_in\">let</span> code;18    try {19      const codeResult = await Taro.login();20      <span class=\"hljs-keyword\">if</span>(codeResult.errMsg !== <span class=\"hljs-string\">'login:ok'</span>) {21        throw new Error(<span class=\"hljs-string\">'Taro.login 失败'</span>);22      }23      code = codeResult.code;24    } catch (e) {25      loginDoing = <span class=\"hljs-literal\">false</span>;26      throw e;27    }28    const result = await post(URL().user.login, {29      code,30    });31    <span class=\"hljs-built_in\">let</span> user = {32      ...result.user,33      token: result.token,34    };35    this.user = user;36    loginDoing = <span class=\"hljs-literal\">false</span>;37    <span class=\"hljs-built_in\">set</span>Timeout(() =&gt; {38      <span class=\"hljs-built_in\">let</span> length = loginEvent.length;39      <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">let</span> i = 0; i &lt; length; i++) {40        loginEvent.pop()(user);41      }42    });43    <span class=\"hljs-built_in\">return</span> user;44  },45  <span class=\"hljs-function\"><span class=\"hljs-title\">login</span></span>() {46    <span class=\"hljs-keyword\">if</span>(loginDoing) {47      <span class=\"hljs-built_in\">return</span> new Promise((resolve) =&gt; {48        loginEvent.push(resolve);49      });50    } <span class=\"hljs-keyword\">else</span> {51      <span class=\"hljs-built_in\">return</span> this.loginProcess()52    }53  },54});<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><h2 data-id=\"heading-9\">鉴权</h2><p>业务需求中，通常存在某些操作需要 【 用户授权完善信息 】 后才能继续进行，早期项目中都是各自页面中写鉴权代码。因而会涉及大量重复代码，也不利于快速开发。为此我们封装了一套鉴权方案。</p><h3 data-id=\"heading-10\">BasePage</h3><p>通过所有页面基础一个基类 BasePage 。在 BasePage 中写入鉴权逻辑来实现。配合在主页面中使用 AuthorizationModal 组件实现鉴权。</p><blockquote><p>代码仅供理解思路</p></blockquote><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">1 <span class=\"hljs-built_in\">export</span> default class BasePage extends Component { 2 3    state = { 4        // 鉴权相关 5        showAuthorizationModal: <span class=\"hljs-literal\">false</span>, 6    }; 7 8    /** 9     * 鉴权相关10     */11    // 授权成功事件12    <span class=\"hljs-function\"><span class=\"hljs-title\">authSuccessEvent</span></span>() {13    }1415    // 取消授权事件16    <span class=\"hljs-function\"><span class=\"hljs-title\">authFailEvent</span></span>() {17    }1819    async <span class=\"hljs-function\"><span class=\"hljs-title\">checkAuthorization</span></span>() {20        // 当前是否有已验证21        <span class=\"hljs-built_in\">let</span> globalData = getGlobalData(STORAGE_KEY.VERIFY);22        <span class=\"hljs-keyword\">if</span>(globalData) {23            <span class=\"hljs-built_in\">return</span> {24                isNew: <span class=\"hljs-literal\">false</span>,25            };26        } <span class=\"hljs-keyword\">else</span> {27            Taro.showLoading({28                title: <span class=\"hljs-string\">'检查授权中...'</span>,29                mask: <span class=\"hljs-literal\">true</span>,30                showTicketModal: <span class=\"hljs-literal\">false</span>,31            });32            // 如果本地不存在时，先请求接口33            // 未登录过，或新机器34            // 请求token及授权状态35            <span class=\"hljs-built_in\">let</span> res;36            try {37                res = await Taro.login();38            } <span class=\"hljs-function\"><span class=\"hljs-title\">catch</span></span>() {39                Toast.fail(<span class=\"hljs-string\">'登录失败~'</span>);40                Taro.hideLoading();41                throw new Error(<span class=\"hljs-string\">'Taro.login 失败'</span>);42            }43            // 请求授权接口44            const result = {};45            <span class=\"hljs-keyword\">if</span>(result.errno === 0) {46                resolve({47                    isNew: <span class=\"hljs-literal\">false</span>,48                });49            } <span class=\"hljs-keyword\">else</span> {50                // 未授权过51                // 弹窗提示授权52                this.setState({53                    showAuthorizationModal: <span class=\"hljs-literal\">true</span>,54                });55                this.authSuccessEvent = () =&gt; {56                    this.setState({57                        showAuthorizationModal: <span class=\"hljs-literal\">false</span>,58                    });59                    resolve({60                        isNew: <span class=\"hljs-literal\">true</span>,61                    });62                };63                this.authFailEvent = () =&gt; {64                    this.setState({65                        showAuthorizationModal: <span class=\"hljs-literal\">false</span>,66                    });67                    reject();68                };69            }70        }71    }72}<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>页面继承该基类<br></p><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">1 class LaunchIndex extends BasePage {}<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>在页面中置入组件<br></p><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">1 {this.state.showAuthorizationModal &amp;&amp;2 &lt;AuthorizationModal onSuccess={this.authSuccessEvent} onFail={this.authFailEvent}/&gt;}3<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><div><a href=\"data/attachment/portal/201912/31/100658g22ucq2ntkjikj4i.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/100658g22ucq2ntkjikj4i.jpg\"></a>AuthorizationModal 组件</div><p>接下来，我们只需要在需要鉴权的操作中如下使用即可</p><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">1this.checkAuthorization()2  .then((res) =&gt; {3   // 授权成功逻辑4       console.log(<span class=\"hljs-string\">'是否新用户'</span>, res.isNew);5   })6   .catch(() =&gt; {7    // 授权失败逻辑8    })<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>该方案好处在于，授权由状态驱动，只需在代码中调用 checkAuthorization 方法即可。</p><h2 data-id=\"heading-11\">AuthorizationView</h2><p>后来，由于第一种方案过于重，对页面代码侵入性较强。为此我们又封装了一套较轻的组件。</p><p>大部分逻辑中，需要用户主动点击时才进行鉴权，我们基于此思路封装了 AuthorizationView 。对外暴露 onAgree 、 onDeny 方法实现对部分区域的点击鉴权操作。</p><blockquote><p>代码仅供理解思路</p></blockquote><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">1 class AuthorizationView extends Taro.Component { 2 3  state = { 4    showLoginPanel: <span class=\"hljs-literal\">false</span>, 5  }; 6 7  /** 8   * 登录 9   */10  <span class=\"hljs-function\"><span class=\"hljs-title\">click</span></span>() {11    const { userProfile: { user, }, } = this.props;12    <span class=\"hljs-keyword\">if</span>(user.isCompleted) {13      this.props.onAgree(user);14    } <span class=\"hljs-keyword\">else</span> {15      // 显示登录框16      this.setState({17        showLoginPanel: <span class=\"hljs-literal\">true</span>,18      });19    }20  }2122  /**23   * 授权登录24   * @param e25   */26  async <span class=\"hljs-built_in\">bind</span>GetUserInfo(e) {27    <span class=\"hljs-keyword\">if</span>(e.detail.errMsg === <span class=\"hljs-string\">'getUserInfo:ok'</span>) {28      const { userProfile, } = this.props;29      const userResult = await userProfile.login(<span class=\"hljs-literal\">true</span>);30      this.setState({31        showLoginPanel: <span class=\"hljs-literal\">false</span>,32      });33      this.props.onAgree(userResult);34    } <span class=\"hljs-keyword\">else</span> {35      this.props.onDeny();36    }37  }3839  <span class=\"hljs-function\"><span class=\"hljs-title\">cancel</span></span>() {40    this.setState({41      showLoginPanel: <span class=\"hljs-literal\">false</span>,42    });43  }4445  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span></span>() {46    <span class=\"hljs-built_in\">return</span> (47      &lt;Block&gt;48        &lt;View onClick={this.click}&gt;{this.props.children}&lt;/View&gt;49        {50          this.state.showLoginPanel &amp;&amp; &lt;View className=<span class=\"hljs-string\">'login-panel'</span>&gt;51            &lt;View className=<span class=\"hljs-string\">'login-panel-main'</span>&gt;52              &lt;View className=<span class=\"hljs-string\">'login-panel-main-title'</span>&gt;您还未登录&lt;/View&gt;53              &lt;View className=<span class=\"hljs-string\">'login-panel-main-subtitle'</span>&gt;请先登录再进行操作&lt;/View&gt;54              &lt;Image className=<span class=\"hljs-string\">'login-panel-main-image'</span> src=<span class=\"hljs-string\">'https://p0.ssl.qhimg.com/t01a1e495cc2be1e651.png'</span> /&gt;55              &lt;View className=<span class=\"hljs-string\">'login-panel-main-footer'</span>&gt;56                &lt;View className=<span class=\"hljs-string\">'login-panel-main-footer-button cancel'</span> onClick={this.cancel.bind(this)}&gt;暂不登录&lt;/View&gt;57                &lt;Button className=<span class=\"hljs-string\">'btn-reset'</span> openType=<span class=\"hljs-string\">'getUserInfo'</span> onGetUserInfo={this.bindGetUserInfo}&gt;58                  &lt;View className=<span class=\"hljs-string\">'login-panel-main-footer-button confirm'</span>&gt;立即登录&lt;/View&gt;59                &lt;/Button&gt;60              &lt;/View&gt;61            &lt;/View&gt;62          &lt;/View&gt;63        }64      &lt;/Block&gt;65    );66  }67}6869AuthorizationView.defaultProps = {70  onAgree: () =&gt; {71  },72  onDeny: () =&gt; {73  },74};7576<span class=\"hljs-built_in\">export</span> default AuthorizationView;77<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>代码中只需要使用该组件包裹子组件即可使用<br></p><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">1 &lt;AuthorizationView onAgree={this.onAgree.bind(this)} onDeny={this.onDeny.bind(this)}&gt;2  &lt;View&gt;生成海报&lt;/View&gt;3&lt;/AuthorizationView&gt;4<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>以上两种方案都有在线上业务中使用，具体选型看业务决定</p><h1 data-id=\"heading-12\">优化及Bug追踪</h1><p>在维护阶段，我们会更加关注于用户反馈 bug 时如何复现场景及数据分析。</p><h2 data-id=\"heading-13\">日志收集</h2><p>在小程序基础库版本 2.1.0 后，微信提供了一套日志相关接口：LogManager 。</p><p>在用户反馈时，通过该接口记录的日志会同步上传至微信后台，可下载查看追踪 Bug。</p><p>我们通过简单的对其封装，实现一套日志收集机制。</p><p></p><p></p><p></p><pre class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">1 const _logger = Taro.getLogManager({ level: 0, }); 2 3const Logger = { 4  debug(...args) { 5    _logger.debug(`<span class=\"hljs-variable\">${dayjs().format('YYYY-MM-DD HH:mm:ss')}</span>  </code></pre></td>", "pub_time": "2019-12-31 00:21", "author": "Rolan"}
{"title": "给你的头像加个圣诞帽吧 ", "content": "<td id=\"article_content\"> \n                     \n                    <div><p>看着大伙都在弄这个，我自己也来试一哈，我分别用了两种方式来实现，一种是普通的方式，一种是wxs方式</p>\r\n<h2 class=\"heading\" data-id=\"heading-0\">普通方式</h2>\r\n<p>效果图如下：</p>\r\n<p></p><figure><p><a href=\"data/attachment/portal/201912/31/101902xdzdlu2ud1rgrkxw.gif\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/101902xdzdlu2ud1rgrkxw.gif\"></a></p><figcaption></figcaption></figure><p></p>\r\n<h3 class=\"heading\" data-id=\"heading-1\">思路</h3>\r\n<ul>\r\n<li>获取头像</li>\r\n<li>选择素材</li>\r\n<li>缩放，移动，旋转素材</li>\r\n<li>生成canvas</li>\r\n<li>生成图片，保存图片</li>\r\n</ul>\r\n<h3 class=\"heading\" data-id=\"heading-2\">实现方式</h3>\r\n<p></p><figure><p><a href=\"data/attachment/portal/201912/31/101713g6hosod0c6wohwfw.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/101713g6hosod0c6wohwfw.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<p>首先是获取头像，这个不用说，大家应该都会的。</p>\r\n<p>选择素材这里我准备了三张圣诞帽的素材，这个网上有很多，可以自己找下，然后我还做了一个选择手机相册的功能，如果你自己有素材的话也可以直接选择这个功能。</p>\r\n<p>缩放，移动，旋转素材都是通过触摸函数去实现的，这里是先将布局做好，然后在标签上面绑定各个触摸事件，通过返回的值在标签的style里设置实现各个效果。</p>\r\n<p>调整好了之后点击保存头像会获取所有参数并将头像画出来，再通过 <code>wx.canvasToTempFilePath()</code> 将canvas生成图片最后通过 <code>wx.saveImageToPhotosAlbum()</code> 保存图片。</p>\r\n<h3 class=\"heading\" data-id=\"heading-3\">主要代码</h3>\r\n<p>主要的函数就是下面这几个，代码片段我会放在文末，没有什么比较难的地方，就是要注意下计算的时候不要算错就行。</p>\r\n<p></p><figure><p><a href=\"data/attachment/portal/201912/31/101713kx55oxuso5oh5h15.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/101713kx55oxuso5oh5h15.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<h3 class=\"heading\" data-id=\"heading-4\">需要注意的点</h3>\r\n<p>由于素材的大小可能会有不同，所以在重新选择素材的时候高度要重新设置一下，这里我用了一个方法来重置高度，主要是每次重新选择素材的时候就用 <code>wx.getImageInfo()</code> 这个api去获取图片素材的宽高，再计算出宽高比。</p>\r\n<p></p><figure><p><a href=\"data/attachment/portal/201912/31/101713g00r7khdxjg04lzu.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/101713g00r7khdxjg04lzu.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<h2 class=\"heading\" data-id=\"heading-5\">wxs实现方式</h2>\r\n<h3 class=\"heading\" data-id=\"heading-6\">实现方式</h3>\r\n<p>思路跟普通方式是一样的，不同的是这里将绑定事件通过 <code>wxs</code> 去实现，直接设置标签的参数而不通过逻辑层去处理，在性能上会比较好一点，不过这种实现方式在进行旋转的时候最后生成的图片会有不准，后面会说到。</p>\r\n<p>参数的获取是通过在标签上设置style，然后点击保存的时候用  <code>wx.createSelectorQuery()</code> 获取各个参数的</p>\r\n<p></p><figure><p><a href=\"data/attachment/portal/201912/31/101926ux2jd33zdzj353q3.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/101926ux2jd33zdzj353q3.jpg\"></a></p></figure><figure><figcaption></figcaption></figure><p></p>\r\n<h3 class=\"heading\" data-id=\"heading-7\">获取旋转的值</h3>\r\n<p>由于 <code>wx.createSelectorQuery()</code> 并不能获取到 <code>rotate</code> 这个参数，所以我是通过下面这种方式来拿到旋转的值的，将旋转值以宽度的形式赋值给 <code>.vo-ro</code></p>\r\n<p></p><figure><p><a href=\"data/attachment/portal/201912/31/101926ehmdmt00idbbvtza.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/31/101926ehmdmt00idbbvtza.jpg\"></a></p></figure><figure><figcaption></figcaption></figure><p></p>\r\n<p>但是我发现旋转之后生成的图片不是正确的，原因是旋转之后通过 <code>wx.createSelectorQuery()</code> 拿到的宽高并不是图片大小的宽高，而是旋转之后的宽高，按理来说不应该是这样的，即使通过样式旋转，它的宽高应该保持不变才对，这样就造成了参数上的错误，所以画出来的图片是不准确的。</p>\r\n<p>因为加了旋转之后画出来的图片会不准确，暂时想不出别的方法，我把旋转的按钮先注释掉了，只支持缩放跟拖拽。</p>\r\n<h2 class=\"heading\" data-id=\"heading-8\">总结</h2>\r\n<p>两种方式，wxs性能要更好，但是效果没第一种的好，看你要哪种了，最后祝大家圣诞节快乐，祝你生活愉快</p>\r\n<p><a target=\"_blank\" href=\"https://developers.weixin.qq.com/s/Cizd1RmY7qdg\" rel=\"nofollow noopener noreferrer\">developers.weixin.qq.com/s/Cizd1RmY7…</a></p></div> </td>", "pub_time": "2019-12-31 00:43", "author": "Rolan"}
{"title": "微信小程序使用自定义组件导航实现当前页面高亮 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最近开发<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>，需要做一个导航，导航可以通过template写出来，但是这个项目需要在导航中处理一些逻辑，做成组件更方便些。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><br></p><p><a href=\"data/attachment/portal/202001/02/092202ba3482paprpm8kbz.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/092202ba3482paprpm8kbz.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><span style=\"text-indent: 1em;\">首先新建header文件夹，里面新建对应的js、json、wxml、wxss文件。</span></p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 公共头部组件 --&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'headers'</span>&gt;</span>\r\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">navigator</span> <span class=\"hljs-attr\">open-type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"redirectTo\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'logo'</span> <span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../index/index\"</span> <span class=\"hljs-attr\">hover-class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"none\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../../assets/img/logo2.png\"</span> <span class=\"hljs-attr\">mode</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"widthFix\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n     <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">navigator</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"phone_nav_switch\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"controlNav\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"iconfont icon-daohang\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{navIsShow}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"iconfont icon-guanbi\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{!navIsShow}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"nav\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"shadow </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{navIsShow ? 'active':''}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"controlNav\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"bg </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{navIsShow ? 'active':''}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'con'</span> <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{navs}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">wx:key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"item.url\"</span>&gt;</span>\r\n                 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">navigator</span> <span class=\"hljs-attr\">open-type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"redirect\"</span> <span class=\"hljs-attr\">data-index</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index === navActive ? 'active' : ''}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.url}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">hover-class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"none\"</span>&gt;</span>\r\n                    </span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.text}</span><span class=\"xml\">}\r\n                 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">navigator</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 返回顶部 --&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"backTop\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"goTop\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{floorstatus}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}'</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"icon iconfont icon-iconfonticontrianglecopy\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span></span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>header.js里的导航数据</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n   * 组件的属性列表\r\n   */</span>\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">properties</span>: {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 当前导航高亮</span>\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">navActive</span>: {\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 类型</span>\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">type</span>: Number,\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 默认值</span>\r\n      <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">value</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>\r\n    }\r\n  },\r\n\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: { \r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 导航开关 </span>\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">navIsShow</span>: false,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">currentIndexNav</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>,\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// floorstatus: false,</span>\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">navs</span>: [\r\n      {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'网站首页'</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../index/index'</span>\r\n      },\r\n      {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'招商加盟'</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../join/join'</span>\r\n      },\r\n      {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'关于煮田'</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../about/about'</span>\r\n      },\r\n      {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'煮田美食'</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../food/food'</span>\r\n      },\r\n      {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'最新资讯'</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../news/news'</span>\r\n      },\r\n      {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'门店查询'</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../search/search'</span>\r\n      },\r\n      {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'联系我们'</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../contact/contact'</span>\r\n      },\r\n      {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'视频列表'</span>,\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../videoItem/videoItem'</span>\r\n      }\r\n\r\n    ]\r\n  },</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>导航放在class=\"nav\"中，header.json文件中写入</p><pre class=\"hljs json\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n  <span class=\"hljs-attr\">\"component\"</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>需要引入组件的页面的json文件写入，比如index.json</p><pre class=\"prettyprint hljs json\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n  <span class=\"hljs-attr\">\"component\"</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n  <span class=\"hljs-attr\">\"usingComponents\"</span>: {\r\n    <span class=\"hljs-attr\">\"header\"</span>:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../header/header\"</span>\r\n  }\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后在index.wxml引入组件,navActive是传给组件的值，目的是为了对应导航组件内的导航每一项的index，比如首页的index为0，那我在首页内定义的navActive就是0，</p><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 头部组件 --&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'header'</span>&gt;</span> \r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 导航高亮传值 --&gt;</span>\r\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">header</span> <span class=\"hljs-attr\">navActive</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'0'</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">header</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span></pre><p><a href=\"data/attachment/portal/202001/02/092201nttt647tiya4t77i.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/092201nttt647tiya4t77i.png\"></a></p><p><a href=\"data/attachment/portal/202001/02/092200t6pqknlnol6qoq6z.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/092200t6pqknlnol6qoq6z.png\"></a></p><p><a href=\"data/attachment/portal/202001/02/092201bgejepepiw8efjef.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/092201bgejepepiw8efjef.png\"></a></p><p><a href=\"data/attachment/portal/202001/02/092159v7htcqquustugx2z.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/092159v7htcqquustugx2z.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果相等当前页面就会高亮</p><p><a href=\"data/attachment/portal/202001/02/092200o3o3zlend13d1r1u.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/092200o3o3zlend13d1r1u.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>需要在在heaer.js设置navActive的类型，通过上面的操作，我是能够实现当前页面导航高亮的</p><p><a href=\"data/attachment/portal/202001/02/092201vsilly7nibk8rv7b.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/092201vsilly7nibk8rv7b.png\"></a></p><p><a href=\"data/attachment/portal/202001/02/092201e77vtj9sijszx14s.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/092201e77vtj9sijszx14s.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>，</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>希望能帮到需要的人，如果觉得我上面写的不清楚的话，这是我的github</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://github.com/mazixiao/wechat_zhutian\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://github.com/mazixiao/w...</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>,这个是我做好了的</p> </td>", "pub_time": "2020-1-2 00:18", "author": "Rolan"}
{"title": "微信小程序canvas生成海报 文字自动换行 canvas高度动态设置 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>中分享，官网只提供分享给好友和群聊的能力，未提供分享到朋友圈的api。因此小程序分享到朋友圈通常做法就是利用canvas生成一张动态海报，上面贴一个小程序码图片，分享到朋友圈，长按识别小程序码进入小程序，以达到在朋友圈推广小程序的功能。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>初始化canvas</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1.在.wxml中 创建一个canvas, <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>canvasWidth</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>canvasWidth</code> 分别为创建的canvas的宽高。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>比如我们需要保存的海报尺寸为750px * 1350px; 我们就可以设置canvasWidth = 750；canvasWidth = 1350；这样导出来的图片比较清晰。</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"canvas-box\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">canvas</span> <span class=\"hljs-attr\">canvas-id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"canvas\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"canvas\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"width: </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{canvasWidth}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}px; height: </span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{canvasHeight}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}px;\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">canvas</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span></span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2.在小程序中canvas层级最高。因此我们需要隐藏canvas,在窗口中不可见。</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.canvas-box</span>{  \r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: fixed;  \r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1000px</span>;  \r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1000px</span>;  \r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">z-index</span>: -<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>;  \r\n}</pre><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">在js中获得canvas上下文</li></ol><pre class=\"hljs go\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> ctx = wx.createCanvasContext(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'canvas'</span>); <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// canvas-id</span></pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>绘制图片</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序绘制图片的api比较简单，一般可直接使用下面的方式</p><pre class=\"prettyprint hljs go\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> img = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/assets/images/bg.png'</span>;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> imgX = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 绘制图片在canvas中起点X坐标</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> imgY = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 绘制图片在canvas中起点Y坐标</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> imgWidth = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 绘制图片在canvas中宽度</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> imgHeight = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>; <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 绘制图片在canvas中高度</span>\r\nctx.drawImage(img, imgX, imgY, canvasWidth, canvasHeight);</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>本地图片</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序绘制本地图片可直接使用，例如上面的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>/assets/images/bg.png'</code> 可直接绘制到canvas上面。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>网络图片</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序不能直接绘制网络图片到canvas中。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1.需要通过 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.getImageInfo</code> 获取图片信息或 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.downloadFile</code> 下载到本地。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2.获取图片信息。网络图片需先配置download域名才能生效。如果需要绘制微信用户头像，也需要将腾讯的域名加入到白名单。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里使用wx.getImageInfo，在页面初始化的时候就请求所有需要绘制到canvas的网络图片.</p><pre class=\"prettyprint hljs php\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> localImgInfo = {}; <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 存储所有网络图片请求到本地的对象</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> imgList = [  \r\n  img1,\r\n  avatar,\r\n];  \r\nimgList.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">forEach</span>((item, index) =&gt; {  \r\n  wx.getImageInfo({  \r\n    src: item,  \r\n  success: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-params\">(res)</span> </span>{  \r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 保存到本地数组  </span>\r\n  localImgInfo[item] = res.path;  \r\n  }  \r\n  })  \r\n})\r\n\r\n... (确保网络图片加载完毕后)绘制网络图片\r\n\r\nctx.drawImage(localImgInfo[avatar], imgX, imgY, canvasWidth, canvasHeight);</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>绘制文字</h2><pre class=\"prettyprint hljs go\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>ctx.setFontSize(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30</span>);          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 文本字体大小</span>\r\nctx.setFillStyle(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#E1E6F0\"</span>);  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 颜色</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> text = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'我是文字'</span>;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> textX = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;  \r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> textY = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n\r\nctx.fillText(text, textStartX, textY);</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>绘制文字和图片有一个小区别需要注意一下，起始的x,y坐标不一致。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>绘制图片的x,y坐标是从图片的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>左上角</code> 开始计算位置的。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>绘制文字的x,y坐标是从文字的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>右下角</code> 开始计算位置的。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>文字自动换行</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ctx.measureText()</code> 能够获取canvas中文字的宽度，可通过此方法手动给文字换行</p><pre class=\"prettyprint hljs cs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 将文字绘制到行 长文本自动换行 并返回行数  </span>\r\n/\\*  \r\n\\* <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">params</span>  \r\n\\* @text 需要绘制的文本字符  \r\n\\* @startX 第一行文本的起始X坐标  \r\n\\* @startY 第一行文本的起始Y坐标  \r\n\\* @lineHeight 文本行高  \r\n\\* @MAX\\_WIDTH 单行文字最大宽度，超过临界值自动换行  \r\n\\*  \r\n\\* <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> rowLength 返回绘制文本的行数  \r\n\\* \\*/\r\n<span class=\"hljs-function\">function <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">drawText</span>(<span class=\"hljs-params\">text, startX, startY, lineHeight, MAX\\_WIDTH</span>) </span>{  \r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> allAtr \\= text.split(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>);  \r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> rowArr \\= \\[\\]; <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 拆分出来的每一行  </span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> rowStrArr \\= \\[\\]; <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 每一行的文字数组  </span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> i \\= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>; i &lt; allAtr.length; i++) {  \r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> currentStr \\= allAtr\\[i\\];  \r\n  rowStrArr.push(currentStr);  \r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> rowStr \\= rowStrArr.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">join</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>);  \r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (ctx.measureText(rowStr).width \\&gt; MAX\\_WIDTH) {  \r\n      rowStrArr.pop(); <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 删除最后一个  </span>\r\n  rowArr.push(rowStrArr.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">join</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>)); <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 完成一行  </span>\r\n  rowStrArr \\= \\[currentStr\\];  \r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">continue</span>;  \r\n  }  \r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 最后一个字母 直接添加到一行  </span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (i \\=== allAtr.length \\- <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>) {  \r\n      rowArr.push(rowStr); <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 完成一行  </span>\r\n  }  \r\n  }  \r\n  \r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> i \\= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>; i &lt; rowArr.length; i++) {  \r\n    ctx.fillText(rowArr\\[i\\], startX, startY \\+ i \\* lineHeight);  \r\n  }  \r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> rowArr.length;  \r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>drawText()</code> 函数主要的作用就是绘制传入的文本，使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ctx.measureText()</code> 判断单行文字的宽度是否超过单行最大宽度，如果超过就将ctx绘制文本的startY坐标设置为当前startY+文本行高，实现切换到下一行的效果</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>canvas高度动态设置</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于项目中生成的海报图片高度随内容变化，导致不同的内容生成的海报高度不一致，所以这边只需要将canvas的高度放在data中，然后根据不同的内容动态计算最终海报的高度，然后设置data中canvas的高度即刻。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下面是项目中的实际效果，在这里，海报由三个部分组成，头部，内容，底部。其中头部和底部高度固定，中间的内容高度由后台返回的书籍数量决定，其中可能需要换行的就是书籍的名称和副标题。</p><p><a href=\"data/attachment/portal/202001/02/092620tryrxrxybx6ls277.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/092620tryrxrxybx6ls277.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里简单的将每一本书作为一块区域，高度固定，因此 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>内容区域的高度 = 书籍数量 * 书籍高度</code>，通过此方法简单计算出中间内容区的高度，然后动态设置canvas的高度。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>源码</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://github.com/zhaosheng808/canvasPoster\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://github.com/zhaosheng808/canvasPoster</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>提供简单的微信小程序测试号demo，包含请求用户保存canvas图片的授权逻辑。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>测试号需要将不校验合法域名打开，不然无法下微信头像和外部图片。正式号需要在微信公众平台配置下载域名</p><p><a href=\"data/attachment/portal/202001/02/092624jx4efvyscfdycyd0.png\" target=\"_blank\"><img src=\"data/attachment/portal/202001/02/092624jx4efvyscfdycyd0.png\"></a></p> </td>", "pub_time": "2020-1-2 00:24", "author": "Rolan"}
{"title": "微信小程序setData复杂数组的更新、删除、添加、拼接 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">众所周知，微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>里所有对数据的修改只有在setData里修改才会在页面上渲染。在此分享小程序里复杂数组的更新、删除、添加、拼接</p><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\"> </p><h3 style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">初始数据</h3><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">数组嵌套对象</p><div class=\"cnblogs_code\" style='margin: 5px 0px; padding: 5px; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); overflow: auto; font-family: \"Courier New\" !important; font-size: 12px !important;'><pre style='margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: \"Courier New\" !important;'><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">data: {\r\n    cartList </span>= [{ id: 1, goods: {id: 1, name: <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">'</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">wechat</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">'</span>}, checked: true }, { id: 2, goods: {}, checked: false }, { id: 3<span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">, goods: {}, checked: true }]\r\n },</span></pre></div><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\"> </p><h3 style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">索引部分删除</h3><div class=\"cnblogs_code\" style='margin: 5px 0px; padding: 5px; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); overflow: auto; font-family: \"Courier New\" !important; font-size: 12px !important;'><div class=\"cnblogs_code_toolbar\" style=\"margin: 5px 0px 0px; padding: 0px;\"><span class=\"cnblogs_code_copy\" style=\"margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;\"><a title=\"复制代码\" style=\"margin: 0px; padding: 0px; text-decoration-line: underline; border: none !important;\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" style=\"margin: 0px; padding: 0px; max-width: 800px; height: auto; border: none !important;\"></a></span></div><pre style='margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: \"Courier New\" !important;'><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">1</span> let index = 2<span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">;\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">2</span> let cartList =<span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\"> this.data.cartList\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">3</span> cartList.splice(index, 1<span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">)\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">4</span> <span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">this.setData({\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">5</span> <span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">        cartList: cartList\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">6</span>       })</pre><div class=\"cnblogs_code_toolbar\" style=\"margin: 5px 0px 0px; padding: 0px;\"><span class=\"cnblogs_code_copy\" style=\"margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;\"><a title=\"复制代码\" style=\"margin: 0px; padding: 0px; text-decoration-line: underline; border: none !important;\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" style=\"margin: 0px; padding: 0px; max-width: 800px; height: auto; border: none !important;\"></a></span></div></div><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\"> </p><h3 style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">内部部分修改</h3><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">只修改数据内某项里的某属性。但此方法对于有引用到被修改的数据的wxs不会刷新页面显示，尚未清楚是bug还是小程序本身就不支持。</p><div class=\"cnblogs_code\" style='margin: 5px 0px; padding: 5px; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); overflow: auto; font-family: \"Courier New\" !important; font-size: 12px !important;'><pre style='margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: \"Courier New\" !important;'>let index = 2<span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">\r\nlet updateTodo </span>=<span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\"> `cartList[${index}].checked`\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">this</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">.setData({\r\n          [updateTodo]:  </span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">true</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">\r\n        })</span></pre></div><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">用一个变量接收要修改的数组，修改好后再整体setData赋值，如果原数据很大的话可能会影响性能。</p><div class=\"cnblogs_code\" style='margin: 5px 0px; padding: 5px; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); overflow: auto; font-family: \"Courier New\" !important; font-size: 12px !important;'><div class=\"cnblogs_code_toolbar\" style=\"margin: 5px 0px 0px; padding: 0px;\"><span class=\"cnblogs_code_copy\" style=\"margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;\"><a title=\"复制代码\" style=\"margin: 0px; padding: 0px; text-decoration-line: underline; border: none !important;\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" style=\"margin: 0px; padding: 0px; max-width: 800px; height: auto; border: none !important;\"></a></span></div><pre style='margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: \"Courier New\" !important;'><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">1</span> let index = 2\r\n<span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">2</span> let cartList = <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">this</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">.data.cartList;\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">3</span> cartList[index].checked =<span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\"> res.data.checked\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">4</span> <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">this</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">.setData({\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">5</span> <span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">          cartList: cartList\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">6</span>         })</pre><div class=\"cnblogs_code_toolbar\" style=\"margin: 5px 0px 0px; padding: 0px;\"><span class=\"cnblogs_code_copy\" style=\"margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;\"><a title=\"复制代码\" style=\"margin: 0px; padding: 0px; text-decoration-line: underline; border: none !important;\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" style=\"margin: 0px; padding: 0px; max-width: 800px; height: auto; border: none !important;\"></a></span></div></div><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\"> </p><h3 style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">添加、拼接</h3><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">push和concat</p><div class=\"cnblogs_code\" style='margin: 5px 0px; padding: 5px; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); overflow: auto; font-family: \"Courier New\" !important; font-size: 12px !important;'><div class=\"cnblogs_code_toolbar\" style=\"margin: 5px 0px 0px; padding: 0px;\"><span class=\"cnblogs_code_copy\" style=\"margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;\"><a title=\"复制代码\" style=\"margin: 0px; padding: 0px; text-decoration-line: underline; border: none !important;\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" style=\"margin: 0px; padding: 0px; max-width: 800px; height: auto; border: none !important;\"></a></span></div><pre style='margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: \"Courier New\" !important;'><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 1</span> <span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\"> push改变原数组</span>\r\n<span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 2</span> let newList=  [{ id: 4, goods: {}, checked: <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">true</span> }, { id: 5, goods: {}, checked: <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">false</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\"> }}]\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 3</span> let cartList = <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">this</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">.data.cartList;\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 4</span> <span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">cartList.push(...newList);\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 5</span> <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">this</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">.setData({\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 6</span> <span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">          cartList: cartList\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 7</span> <span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">        })\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 8</span> \r\n<span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 9</span> <span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\"> concat返回添加后的副本，并不会修改原有数组</span>\r\n<span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">10</span> let newList=  [{ id: 4, goods: {}, checked: <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">true</span> }, { id: 5, goods: {}, checked: <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">false</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\"> }}]\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">11</span> let cartList = <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">this</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">.data.cartList;\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">12</span> <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">this</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">.setData({\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">13</span> <span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">          cartList: cartList.concat(newList)\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">14</span>         })</pre><div class=\"cnblogs_code_toolbar\" style=\"margin: 5px 0px 0px; padding: 0px;\"><span class=\"cnblogs_code_copy\" style=\"margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;\"><a title=\"复制代码\" style=\"margin: 0px; padding: 0px; text-decoration-line: underline; border: none !important;\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" style=\"margin: 0px; padding: 0px; max-width: 800px; height: auto; border: none !important;\"></a></span></div></div> </td>", "pub_time": "2019-12-9 00:20", "author": "Rolan"}
{"title": "解决微信小程序安卓机器上 backgroundAudioManager 的一个坑 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一句话来说，问题的根源就在于</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>安卓机器上 backgroundAudioManager.pause() 后还会触发一两次 onTimeUpdate</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>背景</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在做的<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>中要做的一个功能是 AB 定次重复：重复播放音频中 A 秒到 B 秒的声音 N 次。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>根据我的需求，理想中流程是通过 backgroundAudioManager 的绑定事件完成功能（这里先不讨论 B == backgroundAudioManager.duration 的情况）。</p><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">设定backgroundAudioManager的title和src</li><li style=\"line-height: 1.7em;\">backgroundAudioManager.seek(A)</li><li style=\"line-height: 1.7em;\">backgroundAudioManager.onSeeking()</li><li style=\"line-height: 1.7em;\">backgroundAudioManager.onSeeked()\t<br>4.a backgroundAudioManager.play();</li><li style=\"line-height: 1.7em;\">backgroundAudioManager.onTimeUpdate\t<br>5.a 如果 backgroundAudioManager.currentTime &gt;= B, backgroundAudioManager.pause()\t<br>5.a.1 如果没达到重复次数，回到步骤2\t<br>5.b 如果 backgroundAudioManager.currentTime &lt; B，回到步骤5</li></ol><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>问题</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在几次摸索后 iOS 上可以完美完成，但是安卓上会跳次数，比如希望一共播放3次，在播放完第一次之后会直接跳过第二次进行第三次的播放，最后一共只播放了两次。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>解决</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我在网上搜的时候发现有人写到了\t<a href=\"https://juejin.im/post/5d2c2122f265da1b9613355c\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">backgroundAudioManager中的一些坑</a> ，其中提到</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>暂停状态下跳转到指定位置，在 onSeeked() 回调中，Android 的 currentTime 是跳转前的时间，而 iOS 是跳转后的时间。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一开始我以为完全是这个原因，seek 后第一次 onTimeUpdate 时 currentTime &gt;= B导致直接跳次数，所以我就加上一个 boolean 变量，在 onSeeked 中将它赋值为 true，用它判断是否刚执行 seek，如果否再进行 currentTime 的判断。但是改来改去问题还是存在。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在加了一堆 console.log，反复和 iOS的结果比较后为发现了问题的根本所在。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>安卓机器上 backgroundAudioManager.pause() 后还会触发一两次 onTimeUpdate找到了问题解决起来就比较简单啦，在 onTimeUpdate 中先判断 backgroundAudioManager.paused 是否为 true，只有在 backgroundAudioManager.paused == false 时才进行步骤5的流程。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>结论</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>backgroundAudioManager 和 innerAudioContext 写起来，测试起来都好痛苦。同样的代码 innerAudioContext 在 2.6.1 可以在开发工具中完成我要的效果，但是后面的版本就不行了。而且 iOS，Android 还有开发者工具上的行为都不一样，每次改一点就要用两个手机扫码预览还是挺不方便的。希望官方可以优化一下。</p><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">这篇文章我原本发在微信小程序交流专区</p><a href=\"https://developers.weixin.qq.com/community/develop/article/doc/00086c3f998a603d51899109151013\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://developers.weixin.qq.com/community/develop/article/doc/00086c3f998a603d51899109151013</a></div> </td>", "pub_time": "2019-12-9 10:32", "author": "Rolan"}
{"title": "小程序开发中的一些实践和踩坑 ", "content": "<td id=\"article_content\"> \n                     \n                    <div><br></div><div><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; text-align: start; font-size: 15px;'>在公司<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>也开发了一段时间了，中间遇到过很多问题，特此记录几个比较典型的问题和解决方案。</span><span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 16px; text-align: start;'></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><section style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; letter-spacing: 0.544px; text-align: justify; font-family: -apple-system-font, system-ui, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); word-wrap: break-word !important; overflow-wrap: break-word !important;'><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; overflow-wrap: break-word !important;\"><section class=\"\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; overflow-wrap: break-word !important;\"><section class=\"\" style=\"margin: 0px; padding: 0px 20px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; line-height: 0.8; overflow-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em; text-align: center; overflow-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; color: rgb(26, 173, 25); font-size: 24px; overflow-wrap: break-word !important;\">01</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em; text-align: center; overflow-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; letter-spacing: 0px; color: rgb(26, 173, 25); font-size: 20px; overflow-wrap: break-word !important;\">—</span></p></section></section></section></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important; overflow-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 20px; color: rgb(61, 167, 66); overflow-wrap: break-word !important;\">textarea 的高层级问题</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\"><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; box-sizing: border-box !important; word-wrap: break-word !important;'>此问题提供</span>源码demo<span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; box-sizing: border-box !important; word-wrap: break-word !important;'>，可导入微信开发者工具查看。复制到电脑上打开：</span><span style=\"margin: 0px; padding: 0px; max-width: 100%; text-decoration-line: underline; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;\">https://github.com/dunizb/CodeTest/tree/master/Wechat/textarea-test </span></span><span style=\"margin: 0px; padding: 0px; max-width: 100%; text-decoration-line: underline; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;'><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 18px;\">症状（表现）</span></strong></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>textarea 是小程序的原生组件，它的一个表现就是优先级很高，这导致了一些困扰，比如我们有一个表单页面，最下面就是一个textarea和一个保存按钮，这会导致textarea的文字会浮现在按钮上。如下图：</span><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'></span></p><p><a href=\"data/attachment/portal/201912/10/110407bqrj9iv5b445j544.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/10/110407bqrj9iv5b445j544.jpg\"></a></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>它最大的问题是会导致保存按钮可能点击无效或者会弹出键盘，并且开发者工具模拟器和真机表现不一样，这真是个坑！</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 18px;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">诊断（实验）</strong></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; text-align: start; font-size: 15px;'>模拟器中，针对 </span><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; text-align: start;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">position:fixed</span></code><span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; text-align: start; font-size: 15px;'> 定位的按钮，我们加一个 </span><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; text-align: start;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">z-index:10</span></code><span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; text-align: start; font-size: 15px;'> 即可， </span><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; text-align: start;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">z-index</span></code><span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; text-align: start; font-size: 15px;'> 等于多少合适不清楚，试了等于1是不行的，10就可以，其余的值没试过。</span><span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 16px; text-align: start;'></span></p><section class=\"code-snippet__fix code-snippet__js\" style='margin: 10px 0px; padding: 0px; max-width: 1000%; color: rgb(51, 51, 51); position: relative; background-color: rgba(0, 0, 0, 0.03); border: 1px solid rgb(240, 240, 240); border-radius: 2px; display: flex; line-height: 26px; font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; letter-spacing: 0.544px; text-align: justify; box-sizing: border-box !important; word-wrap: break-word !important;'><ul class=\"code-snippet__line-index code-snippet__js\" style=\"margin: 0px; padding: 1em; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; counter-reset: line 0; flex-shrink: 0; height: 288px; list-style-type: none;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"></ul><pre class=\"code-snippet__js\" data-lang=\"css\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 1em 1em 1em 0px; max-width: 1000%; overflow-x: auto; white-space: normal; -webkit-box-flex: 1; flex: 1 1 0%; box-sizing: border-box !important; word-wrap: break-word !important;\"><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"code-snippet__selector-class\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">.submit-cls</span> {</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">position</span>: fixed;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">left</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">30px</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">right</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">30px</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">bottom</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">300px</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">text-align</span>: center;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">background-color</span>: green;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">color</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">#fff</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">z-index</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">10</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</span></code></pre></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>模拟器中的表现：</span></p><p><a href=\"data/attachment/portal/201912/10/110408ipxp59o784hsppnp.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/10/110408ipxp59o784hsppnp.jpg\"></a></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>然儿，真机上（Android）依然无效！如下图：</span></p><p><a href=\"data/attachment/portal/201912/10/110408bd2sezhbhwm5yis8.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/10/110408bd2sezhbhwm5yis8.jpg\"></a></p><p style='margin: 0.83rem 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">于是我想到了 cover-view 标签，cover-view 是微信提供的一个原生组件，它是覆盖在原生组件之上的文本视图，可覆盖的原生组件包括 map、video、canvas、camera、live-player、live-pusher之上，只支持嵌套 cover-view、cover-image，可在 cover-view 中使用 button。</span></p><p style='margin: 0.83rem 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">用 cover-view 标签包裹 button 如何呢？郁闷的事情发生了，真机上按钮不见了！。。。这方法貌似不行。。</span></p><section class=\"code-snippet__fix code-snippet__js\" style='margin: 10px 0px; padding: 0px; max-width: 1000%; color: rgb(51, 51, 51); position: relative; background-color: rgba(0, 0, 0, 0.03); border: 1px solid rgb(240, 240, 240); border-radius: 2px; display: flex; line-height: 26px; font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; letter-spacing: 0.544px; text-align: justify; box-sizing: border-box !important; word-wrap: break-word !important;'><ul class=\"code-snippet__line-index code-snippet__js\" style=\"margin: 0px; padding: 1em; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; counter-reset: line 0; flex-shrink: 0; height: 106px; list-style-type: none;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"></ul><pre class=\"code-snippet__js\" data-lang=\"xml\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 1em 1em 1em 0px; max-width: 1000%; overflow-x: auto; white-space: normal; -webkit-box-flex: 1; flex: 1 1 0%; box-sizing: border-box !important; word-wrap: break-word !important;\"><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;<span class=\"code-snippet__name\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">cover-view</span>&gt;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__tag\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;<span class=\"code-snippet__name\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">button</span> <span class=\"code-snippet__attr\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">class</span>=<span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">\"submit-cls\"</span> <span class=\"code-snippet__attr\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">id</span>=<span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">'button'</span> <span class=\"code-snippet__attr\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">bindtap</span>=<span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">\"onClick\"</span>&gt;</span> Button z-index: 10 <span class=\"code-snippet__tag\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;/<span class=\"code-snippet__name\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">button</span>&gt;</span></span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;/<span class=\"code-snippet__name\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">cover-view</span>&gt;</span></code></pre></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>那我直接用 cover-view 标签作为按钮呢？</span><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'></span></p><section class=\"code-snippet__fix code-snippet__js\" style='margin: 10px 0px; padding: 0px; max-width: 1000%; color: rgb(51, 51, 51); position: relative; background-color: rgba(0, 0, 0, 0.03); border: 1px solid rgb(240, 240, 240); border-radius: 2px; display: flex; line-height: 26px; font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; letter-spacing: 0.544px; text-align: justify; box-sizing: border-box !important; word-wrap: break-word !important;'><ul class=\"code-snippet__line-index code-snippet__js\" style=\"margin: 0px; padding: 1em; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; counter-reset: line 0; flex-shrink: 0; height: 54px; list-style-type: none;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"></ul><pre class=\"code-snippet__js\" data-lang=\"javascript\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 1em 1em 1em 0px; max-width: 1000%; overflow-x: auto; white-space: normal; -webkit-box-flex: 1; flex: 1 1 0%; box-sizing: border-box !important; word-wrap: break-word !important;\"><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;cover-view <span class=\"code-snippet__class\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">class</span>=<span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">\"cover-view-clas\"</span> id=<span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">'cover-view'</span> bindtap=<span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">\"onClick\"</span>&gt; cover-view z-index: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">10</span> &lt;<span class=\"code-snippet__regexp\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(202, 125, 55);\">/cover-view&gt;</span></span></code></pre></section><section class=\"code-snippet__fix code-snippet__js\" style='margin: 10px 0px; padding: 0px; max-width: 1000%; color: rgb(51, 51, 51); position: relative; background-color: rgba(0, 0, 0, 0.03); border: 1px solid rgb(240, 240, 240); border-radius: 2px; display: flex; line-height: 26px; font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; letter-spacing: 0.544px; text-align: justify; box-sizing: border-box !important; word-wrap: break-word !important;'><ul class=\"code-snippet__line-index code-snippet__js\" style=\"margin: 0px; padding: 1em; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; counter-reset: line 0; flex-shrink: 0; height: 314px; list-style-type: none;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"></ul><pre class=\"code-snippet__js\" data-lang=\"css\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 1em 1em 1em 0px; max-width: 1000%; overflow-x: auto; white-space: normal; -webkit-box-flex: 1; flex: 1 1 0%; box-sizing: border-box !important; word-wrap: break-word !important;\"><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"code-snippet__selector-class\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">.cover-view-clas</span> {</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">position</span>: fixed;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">height</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">40px</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">line-height</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">40px</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">left</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">30px</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">right</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">30px</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">bottom</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">250px</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">text-align</span>: center;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">background-color</span>: orangered;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">color</span>: <span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">#fff</span>;</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</span></code></pre></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>结果在模拟器里不行</span><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'></span></p><p><a href=\"data/attachment/portal/201912/10/110408kiusj1ulhmhul3fl.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/10/110408kiusj1ulhmhul3fl.jpg\"></a></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'></span><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>但是真机上表现很好。于是我也加了一个 </span><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">z-index: 10</span></code><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'> ，这样模拟器和真机表现就一致。</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;'><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; text-align: start; font-size: 18px;'>药方（总结）</span></strong><span style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; text-align: start; font-size: 15px;'></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>综上所述，要解决这个问题似乎只有一个办法，那就是用 <code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'>cover-view</code> + <code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'>z-index:10</code> ，然儿这样会导致一个的副作用，没法使用微信的开放能力比如 <code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'>open-type</code>。</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><section style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; letter-spacing: 0.544px; text-align: justify; font-family: -apple-system-font, system-ui, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); word-wrap: break-word !important; overflow-wrap: break-word !important;'><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; overflow-wrap: break-word !important;\"><section class=\"\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; overflow-wrap: break-word !important;\"><section class=\"\" style=\"margin: 0px; padding: 0px 20px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; line-height: 0.8; overflow-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em; text-align: center; overflow-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; color: rgb(26, 173, 25); font-size: 24px; overflow-wrap: break-word !important;\">02</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em; text-align: center; overflow-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; letter-spacing: 0px; color: rgb(26, 173, 25); font-size: 20px; overflow-wrap: break-word !important;\">—</span></p></section></section></section></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important; overflow-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 20px; color: rgb(61, 167, 66); overflow-wrap: break-word !important;\">setData优化</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0.83rem 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">我们知道，与传统的浏览器Web页面最大区别在于，小程序的是基于 双线程 模型的，在这种架构中，小程序的渲染层使用 WebView 作为渲染载体，而逻辑层则由独立的 JsCore 线程运行 JS 脚本，双方并不具备数据直接共享的通道，因此渲染层和逻辑层的通信要由 Native 的 JSBrigde 做中转。<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">每当小程序视图数据需要更新时，逻辑层会调用小程序宿主环境提供的 </span><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; font-size: 16px; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">setData</span></code><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> 方法将数据从逻辑层传递到视图层，经过一系列渲染步骤之后完成UI视图更新。然而当 </span><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; font-size: 16px; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">setData</span></code><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> 传递大量的新数据、频繁的执行 </span><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; font-size: 16px; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">setData</span></code><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> 操作、过多的页面节点数时会影响渲染性能。<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 18px;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; text-align: start;\">区分数据类别</span></strong></span><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; text-align: start; font-size: 15px;\"></span><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;\">意思是， setData 只用来通知页面更新，只有需要通知页面更新的时候，页面引用了某个 data 字段时才使用，其它字段数据我们有时候可能只是为了让 js 方便使用。比如如下数据</span><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><section class=\"code-snippet__fix code-snippet__js\" style='margin: 10px 0px; padding: 0px; max-width: 1000%; color: rgb(51, 51, 51); position: relative; background-color: rgba(0, 0, 0, 0.03); border: 1px solid rgb(240, 240, 240); border-radius: 2px; display: flex; line-height: 26px; font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; letter-spacing: 0.544px; text-align: justify; box-sizing: border-box !important; word-wrap: break-word !important;'><ul class=\"code-snippet__line-index code-snippet__js\" style=\"margin: 0px; padding: 1em; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; counter-reset: line 0; flex-shrink: 0; height: 210px; list-style-type: none;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"></ul><pre class=\"code-snippet__js\" data-lang=\"css\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 1em 1em 1em 0px; max-width: 1000%; overflow-x: auto; white-space: normal; -webkit-box-flex: 1; flex: 1 1 0%; box-sizing: border-box !important; word-wrap: break-word !important;\"><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"code-snippet__selector-tag\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(202, 125, 55);\">data</span>: {</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">    <span class=\"code-snippet__attribute\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">form</span>: {</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">        name: <span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">'xxxx'</span>,</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">        ... ...</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">    },</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">    <span class=\"code-snippet__selector-tag\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(202, 125, 55);\">index</span>: 0</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</span></code></pre></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>假如 页面上根本没用到 index 来展示，只是我们的逻辑变量，那么我们在赋值的时候就直接 </span><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\">this.data.index = xxx</span></code><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'> 即可，不要用 setData 去赋值了。</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 18px;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">合理利用局部更新</strong></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>setData 是支持使用 数据路径 的方式对对象的局部字段进行更新，我们可能会遇到这样的场景：list 列表是从后台获取的数据，并展示在页面上，当 list 列表的第一项数据的 src 字段需要更新时，一般情况下我们会从后台获取新的 list 列表，执行 setData 更新整个 list 列表。</span><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'></span></p><section class=\"code-snippet__fix code-snippet__js\" style='margin: 10px 0px; padding: 0px; max-width: 1000%; color: rgb(51, 51, 51); position: relative; background-color: rgba(0, 0, 0, 0.03); border: 1px solid rgb(240, 240, 240); border-radius: 2px; display: flex; line-height: 26px; font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; letter-spacing: 0.544px; text-align: justify; box-sizing: border-box !important; word-wrap: break-word !important;'><ul class=\"code-snippet__line-index code-snippet__js\" style=\"margin: 0px; padding: 1em; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; counter-reset: line 0; flex-shrink: 0; height: 132px; list-style-type: none;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"></ul><pre class=\"code-snippet__js\" data-lang=\"cpp\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 1em 1em 1em 0px; max-width: 1000%; overflow-x: auto; white-space: normal; -webkit-box-flex: 1; flex: 1 1 0%; box-sizing: border-box !important; word-wrap: break-word !important;\"><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">// 后台获取列表数据</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"code-snippet__keyword\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(202, 125, 55);\">const</span> <span class=\"code-snippet__built_in\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(202, 125, 55);\">list</span> = requestSync(); </span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">// 更新整个列表</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"code-snippet__keyword\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(202, 125, 55);\">this</span>.setData({ <span class=\"code-snippet__built_in\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(202, 125, 55);\">list</span> });</span></code></pre></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;\">实际上，只有个别字段需要更新时，我们可以这么写来避免整个 list 列表更新:</span><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><section class=\"code-snippet__fix code-snippet__js\" style='margin: 10px 0px; padding: 0px; max-width: 1000%; color: rgb(51, 51, 51); position: relative; background-color: rgba(0, 0, 0, 0.03); border: 1px solid rgb(240, 240, 240); border-radius: 2px; display: flex; line-height: 26px; font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; letter-spacing: 0.544px; text-align: justify; box-sizing: border-box !important; word-wrap: break-word !important;'><ul class=\"code-snippet__line-index code-snippet__js\" style=\"margin: 0px; padding: 1em; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; counter-reset: line 0; flex-shrink: 0; height: 184px; list-style-type: none;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"></ul><pre class=\"code-snippet__js\" data-lang=\"php\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 1em 1em 1em 0px; max-width: 1000%; overflow-x: auto; white-space: normal; -webkit-box-flex: 1; flex: 1 1 0%; box-sizing: border-box !important; word-wrap: break-word !important;\"><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">// 后台获取列表数据</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"code-snippet__keyword\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(202, 125, 55);\">const</span> <span class=\"code-snippet__keyword\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(202, 125, 55);\">list</span> = requestSync(); </span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">// 局部更新列表</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">this.setData({ </span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">  <span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">'list[0].src'</span>: <span class=\"code-snippet__keyword\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(202, 125, 55);\">list</span>[<span class=\"code-snippet__number\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(14, 156, 229);\">0</span>].src</span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">});</span></code></pre></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;'><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 18px;\">善用自定义组件</span></strong></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>小程序自定义组件的实现是由小程序官方设计的 Exparser 框架所支持，框架实现的自定义组件的组件模型与 Web Components 标准的 Shadow DOM 相似：</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p><a href=\"data/attachment/portal/201912/10/110408xa175ewy8kk1y59v.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/10/110408xa175ewy8kk1y59v.jpg\"></a></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; font-size: 15px; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>在页面引用自定义组件后，当初始化页面时，Exparser 会在创建页面实例的同时，也会根据自定义组件的注册信息进行组件实例化，然后根据组件自带的 data 数据和组件WXML，构造出独立的 Shadow Tree ，并追加到页面 Composed Tree 。创建出来的 Shadow Tree 拥有着自己独立的逻辑空间、数据、样式环境及setData调用，这是组件化带来的好处。</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>基于自定义组件的 Shadow DOM 模型设计，我们可以将页面中一些需要高频执行 setData 更新的功能模块（如倒计时、进度条等）封装成自定义组件嵌入到页面中。当这些自定义组件视图需要更新时，执行的是组件自己的 setData ，新旧节点树的对比计算和渲染树的更新都只限于组件内有限的节点数量，有效降低渲染时间开销。</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><section style='margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; letter-spacing: 0.544px; text-align: justify; font-family: -apple-system-font, system-ui, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); word-wrap: break-word !important; overflow-wrap: break-word !important;'><section class=\"\" powered-by=\"xiumi.us\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; overflow-wrap: break-word !important;\"><section class=\"\" style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; overflow-wrap: break-word !important;\"><section class=\"\" style=\"margin: 0px; padding: 0px 20px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; line-height: 0.8; overflow-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em; text-align: center; overflow-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; color: rgb(26, 173, 25); font-size: 24px; overflow-wrap: break-word !important;\">03</span></p><p style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; clear: both; min-height: 1em; text-align: center; overflow-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; letter-spacing: 0px; color: rgb(26, 173, 25); font-size: 20px; overflow-wrap: break-word !important;\">—</span></p></section></section></section></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important; overflow-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 20px; color: rgb(61, 167, 66); overflow-wrap: break-word !important;\">大表单交互的一点实践经验</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>在项目中，有一个预约模块，字段忒多，保险业务嘛，需要用户填写各种数据的，为了用户体验拆成了多个步骤，如图</span><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p><a href=\"data/attachment/portal/201912/10/110408ga7rp0akpalal602.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/10/110408ga7rp0akpalal602.jpg\"></a></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'></span><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\"><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; box-sizing: border-box !important; word-wrap: break-word !important;'>一开始，业务上要求切换tab的时候数据要缓存，跟Vue的 keep-alive 一样，但是小程序没有这样的机制，所以利用小程序的 </span><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'>hidden</code><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; box-sizing: border-box !important; word-wrap: break-word !important;'> 属性，也就是 Vue 中的 </span><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'>v-show</code><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; box-sizing: border-box !important; word-wrap: break-word !important;'>，组件始终会被渲染，只是简单的控制显示与隐藏。</span>关于wx:if 和 hidden。</span></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>这样的导致页面节点太多，在低性能手机上会出现卡死的现象，直接无法渲染或者渲染太慢。</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 15px;\"><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; box-sizing: border-box !important; word-wrap: break-word !important;'>后来改为 </span><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><code style='margin: 0px 2px; padding: 2px 4px; max-width: 100%; white-space: pre-wrap; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; overflow-wrap: break-word; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;'>wx:if</code><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; box-sizing: border-box !important; word-wrap: break-word !important;'> 来切换</span></span></span><span style='margin: 0px; padding: 0px; max-width: 100%; font-size: 15px; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; box-sizing: border-box !important; word-wrap: break-word !important;'></span></p><section class=\"code-snippet__fix code-snippet__js\" style='margin: 10px 0px; padding: 0px; max-width: 1000%; color: rgb(51, 51, 51); position: relative; background-color: rgba(0, 0, 0, 0.03); border: 1px solid rgb(240, 240, 240); border-radius: 2px; display: flex; line-height: 26px; font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; letter-spacing: 0.544px; text-align: justify; box-sizing: border-box !important; word-wrap: break-word !important;'><ul class=\"code-snippet__line-index code-snippet__js\" style=\"margin: 0px; padding: 1em; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; counter-reset: line 0; flex-shrink: 0; height: 158px; list-style-type: none;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"><li style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; list-style-type: none; text-align: right;\"></ul><pre class=\"code-snippet__js\" data-lang=\"xml\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 1em 1em 1em 0px; max-width: 1000%; overflow-x: auto; white-space: normal; -webkit-box-flex: 1; flex: 1 1 0%; box-sizing: border-box !important; word-wrap: break-word !important;\"><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"code-snippet__tag\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;<span class=\"code-snippet__name\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">view</span> <span class=\"code-snippet__attr\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">wx:if</span>=<span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">\"{{current === 0}}\"</span>&gt;</span>......<span class=\"code-snippet__tag\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;/<span class=\"code-snippet__name\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">view</span>&gt;</span></span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"code-snippet__tag\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;<span class=\"code-snippet__name\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">view</span> <span class=\"code-snippet__attr\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">wx:if</span>=<span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">\"{{current === 1}}\"</span>&gt;</span>......<span class=\"code-snippet__tag\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;/<span class=\"code-snippet__name\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">view</span>&gt;</span></span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"code-snippet__tag\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;<span class=\"code-snippet__name\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">view</span> <span class=\"code-snippet__attr\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">wx:if</span>=<span class=\"code-snippet__string\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important; color: rgb(221, 17, 68);\">\"{{current === 2}}\"</span>&gt;</span>......<span class=\"code-snippet__tag\" style=\"margin: 0px; padding: 0px; max-width: 1000%; color: rgb(14, 156, 229); box-sizing: border-box !important; word-wrap: break-word !important;\">&lt;/<span class=\"code-snippet__name\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">view</span>&gt;</span></span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></code><code style='margin: 0px; padding: 0px; max-width: 1000%; text-align: left; white-space: pre; display: flex; position: relative; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; box-sizing: border-box !important; word-wrap: break-word !important;'><span class=\"code-snippet_outer\" style=\"margin: 0px; padding: 0px; max-width: 1000%; box-sizing: border-box !important; word-wrap: break-word !important;\">... ...</span></code></pre></section><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>这样一来一次渲染节点太多的问题解决了，但是怎么实现tab切换的时候输入的内容杯缓存呢？其实我们的笨办法就是切换的时候把前一个表单内容保存到 localStorage 或 gloabData 中，切换回去的时候再取出来填充，这中间会有一个明显的渲染过程，肉眼可见，没办法，目前只能牺牲一点点体验了。</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>对于这种大型表单，数据处理和逻辑交互的时候要非常注意，很容易出现性能问题。</span></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style='margin: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;'><span style='margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 0, 0); font-family: Helvetica, \"Hiragino Sans GB\", 微软雅黑, \"Microsoft YaHei UI\", SimSun, SimHei, arial, sans-serif; font-size: 15px; box-sizing: border-box !important; word-wrap: break-word !important;'>这次就说这么多吧，文章如有什么错误，或有什么想法，请留言，不吝赐教！</span></p></div> </td>", "pub_time": "2019-12-10 00:23", "author": "Rolan"}
{"title": "Kbone原理解析 & 小程序技术选型 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>转载自微信开放社区： <a href=\"https://developers.weixin.qq.com/community/develop/article/doc/0006a6326b8d38e56b998833456813\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://developers.weixin.qq.com/community/develop/article/doc/0006a6326b8d38e56b998833456813</a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>官方介绍</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>“Kbone 是一个致力于微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>和 Web 端同构的解决方案。”</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Web端框架基本原理</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先我们来看下普通Web端框架，以Vue框架为例，一份Vue模板对应一个组件，在代码构建阶段编译成调用Dom接口的JS函数，执行此JS函数就会创建出组件对应的Dom树，从而渲染到浏览器页面上。</p><p><a href=\"data/attachment/portal/201912/12/105210ukstgj9gs2fk4jj5.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105210ukstgj9gs2fk4jj5.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然而，小程序是双线程的，并没有Dom树的概念，逻辑层和视图层完全分离，逻辑层是一个纯粹的JSCore,开发者可以编写JS脚本，但是无法直接调用Dom/Bom的api, 没有任何浏览器相关的实现。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在小程序中，视图层和逻辑层的交互是通过数据和时间驱动的。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>因此，要实现跨端同构，问题是：怎么将web端代码转为小程序代码？</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>业界常规做法</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>目前业界流行的第三方跨端框架们，常规做法都是：静态编译兼容。</p><p><a href=\"data/attachment/portal/201912/12/105209iqcnnc60h5hado92.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105209iqcnnc60h5hado92.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>原理是把代码语法分析一遍，然后将其中的模板部分翻译成对应的跨端需求的模板（微信小程序、支付宝小程序、H5、APP等）。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>静态编译最大的局限性是无法保证转换的完整性，因为Vue模板和WXML模板的语法并不是直接对等的，Vue的特性设计也和小程序的设计无法划等号，这自然就导致了部分Vue特性的丢失。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>比如像Vue中的v-html指令、ref获取Dom节点、过滤器等就通通用不了。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>除了Vue自身的特性外，一些原本依赖Dom/Bom接口的Vue插件页无法使用，例如Vue-Router。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Kbone的做法</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>Kbone是通过提供 适配器 的方式来实现同构，即运行时兼容，而非静态编译。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>Kbone的适配器核心包含两个部分：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>miniprogram-render： 仿造Dom/Bom接口，构造仿造Dom树；</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>miniprogram-element: 监听仿造Dom树变化，渲染到页面，同时监听用户行为，触发事件。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>仿造Dom树和浏览器的运行时对比：</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>仿造Dom树：</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>利用内置组件和自定义组件的自引用来进行递归，创建组件树。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如图，自定义custom-dom为递归自引用组件：</p><p><a href=\"data/attachment/portal/201912/12/105223cwibd7dvell47gv2.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105223cwibd7dvell47gv2.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>递归的终止条件是遇到特定节点、文本节点或者children空节点。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在创建出组件树猴，将Dom节点和自定义组件实例进行绑定，以便后续的Dom更新和操作。</p><p><a href=\"data/attachment/portal/201912/12/105224dsrj7fnfwmgnie4f.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105224dsrj7fnfwmgnie4f.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>kbone这里还对节点数进行了优化：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果一个dom节点对应一个自定义组件的话，就会创建很多自定义组件，这样会很浪费开销，这里做了子树的合并，也就是说3层才创建一个自定义组件，节省开销。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>优化前：17个dom=17个自定义组件； 优化后：17个dom=4个自定义组件，蓝色那个是单节点，会合并到上面的树；</p><p><a href=\"data/attachment/portal/201912/12/105224pu26as1braas5zib.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105224pu26as1braas5zib.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>dom 子树作为自定义组件渲染的层级数是可以通过配置传入，理论上层级越多，使用自定义组件数量越少，性能也就越好。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一棵很大的 Dom 树，一次性 setData 到视图层，可能会超过 setData 的大小限制（1024kB），拆分成多棵子 Dom 树，然后分批的 setData 到视图层，可以节省开销。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>事件监听</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序的事件是视图层到逻辑层的通讯方式，事件绑定在组件上，当被触发时，就会执行逻辑层中对应的事件处理函数。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序的捕获冒泡是在视图层view端，因此逻辑层在整个捕获冒泡流程中各个节点接收到的事件不是同一个对象，小程序事件的捕获冒泡和阻止冒泡等操作必须在WXML模板中生命，无法使用接口实现。</p><p><a href=\"data/attachment/portal/201912/12/105224r0je4c0t65kwkt0i.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105224r0je4c0t65kwkt0i.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为了能够让web端和小程序端的事件系统行为一致，kbone除了仿造了一份Dom树外，也把整个事件系统仿造了一份，即在仿造Dom树上进行捕获冒泡。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当自定义组件监听到用户的操作后，就将事件发往仿造Dom树，后续自定义组件监听到的同一个事件的冒泡就直接忽略。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当触发改节点，仿造Dom树接收到事件后，再进行捕获和冒泡，让事件在各个节点触发。</p><p><a href=\"data/attachment/portal/201912/12/105224xlilemji4jnczqh4.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105224xlilemji4jnczqh4.jpg\"></a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Kbone的优势</h4><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">支持多个前端框架：Vue、React、Preact 等</li><li style=\"line-height: 1.7em; list-style-type: disc;\">支持更为完整的前端框架特性： Vue 中的 v-html 指令、Vue-router 插件等</li><li style=\"line-height: 1.7em; list-style-type: disc;\">提供了常用的 dom/bom 接口</li><li style=\"line-height: 1.7em; list-style-type: disc;\">可以使用小程序本身的特性： live-player 内置组件、分包功能等</li><li style=\"line-height: 1.7em; list-style-type: disc;\">提供一些 Dom 扩展接口：getComputedStyle 接口等</li></ul><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Kbone实践</h2><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>脚手架kbone-cli</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>官方已经提供了kbone-cli可以用来快速开发：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>用npm全局安装kbone-cli</p><p><a href=\"data/attachment/portal/201912/12/105224j36hu3r6bh7yd6iu.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105224j36hu3r6bh7yd6iu.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以根据自己的技术栈选择不同的开发模板：React/Vue/Omi/Preact</p><p><a href=\"data/attachment/portal/201912/12/105225mz4eeg3srmlmejn7.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105225mz4eeg3srmlmejn7.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后就可以愉快的进行开发啦~</p><p><a href=\"data/attachment/portal/201912/12/105225yxy3cc9ogn3f0tm0.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105225yxy3cc9ogn3f0tm0.jpg\"></a></p><p class=\"img_text_center\" style='margin: 0px 0px 0.75em; text-align: center; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>生成的demo项目结构如下：</p><p><a href=\"data/attachment/portal/201912/12/105225t1v8r2rxdvdz821l.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105225t1v8r2rxdvdz821l.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>demo中包含了多页跳转、vue-router、vuex等的使用示例，以及mp-webpack-plugin的配置示例。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>对于多页面的应用，在 Web 端可以直接通过 a 标签或者 location 对象进行跳转，但是在小程序中则行不通。同时 Web 端的页面 url 实现和小程序页面路由也是完全不一样的。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Demo示例对比</h4><p><a href=\"data/attachment/portal/201912/12/105225uiwe65hhysi6ss6h.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105225uiwe65hhysi6ss6h.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其中，有一部分两端差异的业务逻辑功能，也给出了3中不同的解决方案：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>利用vue-improve-loader，在构建时对dom树节点进行删减，在需要提出的节点加上check-reduce属性 利用reduce-loader，将业务中不需要被打包的代码进行去除，使用行内loader和环境变量来判断 使用样式隐藏，即设置不需要显示的节点样式为 display:none</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>其他问题</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在实际开发中，还会碰到一些细节，例如：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">多页面开发：修改webpack和mp-webpack-plugin配置</li><li style=\"line-height: 1.7em; list-style-type: disc;\">小程序内置组件： 部分用html标签代替，其他用wx-component + behavior标签</li><li style=\"line-height: 1.7em; list-style-type: disc;\">小程序自定义组件：修改mp-webpack-plugin配置，补充wxCustomComponents字段，将自定义组件放入组件根目录，使用自定义组件</li><li style=\"line-height: 1.7em; list-style-type: disc;\">自定义app.js和app.wxss：监听app的生命周期，修改webpack配置补充app.js的构建入口，修改插件配置的generate.app字段，补充app.js</li><li style=\"line-height: 1.7em; list-style-type: disc;\">扩展dom/bom对象和API：使用 window.$$extend追加方法</li><li style=\"line-height: 1.7em; list-style-type: disc;\">代码优化：用reduce-loader做体积精简，dom树精简用vue-improve-loader</li><li style=\"line-height: 1.7em; list-style-type: disc;\">区分环境实现不同功能：process.env.isMiniprogram<h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility;\">更新迭代</h4>kbone由于目前在快速发展期，更新迭代非常迅速，以下特性是对比了8月份的版本和11月份版本，可以看出已经解决了近2/3的问题。</li></ul><p><a href=\"data/attachment/portal/201912/12/105225e8xenc7t0nldxs1p.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105225e8xenc7t0nldxs1p.jpg\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序技术选型</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>详细了解了kbone之后，我们来分析下小程序技术框架到底应该怎么选？</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>kbone &amp; 小程序原生</h4><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">已有web版，需要小程序版：kbone</li><li style=\"line-height: 1.7em; list-style-type: disc;\">跨平台需求（web + 小程序）：kbone</li><li style=\"line-height: 1.7em; list-style-type: disc;\">对性能特别苛刻 or 追求稳定 or 要用最新功能：小程序原生</li><li style=\"line-height: 1.7em; list-style-type: disc;\">页面节点数量特别多（ 1000 节点以上），且对渲染性能要求高：静态模板转义方案（第三方框架：mpvue/taro等）<h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility;\">第三方框架</h4></li><li style=\"line-height: 1.7em; list-style-type: disc;\">MpVue ：不推荐再用了，坑越来越多，内部也表示之后不会投入太多维护</li><li style=\"line-height: 1.7em; list-style-type: disc;\">WePY 1.7.x ：不推荐再用了：1.7.x 的版本在最初的设计上的缺陷导致遗留了很多比较严重的问题</li><li style=\"line-height: 1.7em; list-style-type: disc;\">WePY 2.0：现在还是 alpha 阶段，内外部有一些小程序在跑，体验和反馈还可以。但依然 issue 比较多。害怕踩坑的也不推荐使用</li><li style=\"line-height: 1.7em; list-style-type: disc;\">Taro: 也还是有不少问题，但相对来说应该是比 mpVue 和 WePY 更稳定一点</li><li style=\"line-height: 1.7em; list-style-type: disc;\">Uni-app：mpvue的衍生版，跨端 (官方示例有6端) 支持的很好，在H5端实现了一套微信模拟器，可以尝试，是目前唯一支持app端的商用方案，有独立的编辑器HBuildX</li><li style=\"line-height: 1.7em; list-style-type: disc;\">Chameleon: 统一的多态协议，渐进式跨端，提供脚手架命令工具，规划比较宏大</li><li style=\"line-height: 1.7em; list-style-type: disc;\">Omi ：基于Taro完成的框架，kbone有支持omi的模板</li><li style=\"line-height: 1.7em; list-style-type: disc;\">Nanachi: 基于react的编译期间的转义框架<h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility;\">总结</h4>没有跨端需求，只需要微信小程序 ==&gt; 小程序原生</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>web端转小程序 or 两端 or 想要尝鲜 ==&gt; kbone</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>多端 or Vue 技术栈 ==&gt; uni-app</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>多端 or React 技术栈 ==&gt; taro</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>不介意学习新技术栈 ==&gt; wepy 2.0 or chaemeleon</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>写在最后</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序在非常快速的更新迭代，就算是原生框架也还是有一些坑的，因此没有哪种框架是百分之百完美，需要根据业务具体需求以及自身技术栈偏好来进行选择。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>文章中提及到的部分第三方框架只是参考了官方文档，没有逐个一一尝试，有问题麻烦指出，鞠躬~~</p><p><a href=\"data/attachment/portal/201912/12/105225wzutb6kdrbuj7izd.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/12/105225wzutb6kdrbuj7izd.jpg\"></a></p> </td>", "pub_time": "2019-12-12 00:24", "author": "Rolan"}
{"title": "微信小程序极致的scroll-view的下拉刷新扩展组件 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其实原理很简单，和普通H5以及市面上有的下拉刷新没有特别大的区别，都是基于 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>touch</code> 手势检测事件来实现下拉刷新的。 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>touchstart</code> 的时候记录当前触摸点， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>touchmove</code> 的时候开始计算移动方向和移动距离, <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>touchend</code> 的时候计算是否要进行下拉刷新操作。如图所示：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/13/100613naa4y7yuoo5jacm4.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/13/100613naa4y7yuoo5jacm4.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现方法</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>调研了一些实现方法，目前大部分都是通过js计算，然后setData来改变元素的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>transform</code> 值实现下拉刷新。考虑到性能问题，此处使用了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wxs</code> 的响应式能力来实现整个计算逻辑，不用通过逻辑层和视图层通信，直接在视图层进行渲染。具体文档请参考 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/interactive-animation.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">wxs响应事件</a> 。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>list</code> 组件(由 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scroll-view</code> 组成)下抽出了一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scroll.wxs</code> 作为响应事件的事件处理函数集合，源码基本上就在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scroll.wxs</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>list</code> 组件。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scroll.wxs</code> 定义了如下变量和函数：</p><pre class=\"prettyprint hljs typescript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> moveStartPosition = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>     <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//开始位置</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> moveDistance = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//移动距离</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> moveRefreshDistance = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//达到刷新的阈值</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> moveMaxDistance = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100</span>     <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//最大可滑动距离</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> isRefreshMaxDown = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//是否达到了最大距离， 用来判断是否要震动提示</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> loading = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>           <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//是否正在loading</span>\r\n\r\n... ...\r\n\r\n<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">module</span>.exports = {\r\n  touchStart: touchStart, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//手指开始触摸事件</span>\r\n  touchMove: touchMove, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//手指移动事件</span>\r\n  touchEnd: touchEnd, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//手指离开屏幕事件</span>\r\n  loadingTypeChange: loadingTypeChange, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//请求状态变化监听，监听刷新请求开始和请求完成</span>\r\n  triggerRefresh: triggerRefresh <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//主动触发刷新操作，比如点击页面上一个按钮，重新刷新list，这就需要用到这个方法</span>\r\n}\r\n复制代码</pre><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>touchStart</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>touchMove</code> 就不用说了，代码注释都很明白，普通的监听移动和处理逻辑。</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>touchEnd</code> 主要是判断移动距离是否达到了阈值，然后根据结果，调用监听实例的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>callMethod</code> 方法触发 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>refreshStart</code> 或者 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>refreshCancel</code> 方法，这两个方法都是写到 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>list</code> 组件里面的，用来触发刷新方法或者取消刷新。</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>loadingTypeChange</code> 方法主要是监听刷新是否完成，以此来触发动画效果。</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>triggerRefresh</code> 通过监听主动触发的变量来处理。如果需要主动触发刷新，则调用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>list</code> 组件内部的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>forceRefresh</code> 方法，具体使用示例在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>index/index/js</code> 的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>onLoad</code> 函数有: <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>this.selectComponent('.list').forceRefresh()</code></p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scroll.wxs</code> 里面还有一个未导出的方法，叫 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>drawTransitionY</code> ，这个方法主要是因为 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ios12</code>对于 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>transition</code> 动画效果支持的不好，所以自己写了个Y轴方向的动画（ <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>linear</code> 线性的），大佬们可以自己往上添加各种 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ease-in-out</code> 效果。</p></li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>里面具体的实现可以查看代码注释哦~</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>好了，前面讲了实现的原理和方法，那么在代码里面，应该怎么直接使用呢？如下代码所示：</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 使用示例 --&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">list</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"list\"</span> <span class=\"hljs-attr\">refresh-loading</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{refreshLoading}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">loading</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{loading}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">bindrefresh</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"initList\"</span> <span class=\"hljs-attr\">bindloadmore</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"loadmore\"</span>&gt;</span>\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- your code --&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">list</span>&gt;</span>\r\n复制代码</span></pre><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>refresh-loading</code> 属性用来通过外部loading态来控制刷新动画的开始结束，因为每当变化 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>refresh-loading</code> 的值时，会将变化同步到组件内的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>showRefresh</code> 属性， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wxs</code> 通过监听 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>showRefresh</code> 来处理动画逻辑。</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>loading</code> 属性是上拉加载更多的时候触发的loading态展示，跟刷新无关</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>bindrefresh</code> 是刷新触发时绑定的函数，下拉刷新动画成功开始后触发这个函数</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>bindloadmore</code> 透传 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scroll-view</code> 的加载更多方法</p></li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当然，源码里面也包含了一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>list-item</code> 组件，这个跟本文没太大关系，是用来做瀑布流长列表内容太多时的内存不足问题解决方案的，具体请看 <a target=\"_blank\" href=\"https://juejin.im/post/5de8cc166fb9a0160a312404\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">解决小程序渲染复杂长列表，内存不足问题</a></p> </td>", "pub_time": "2019-12-13 00:11", "author": "Rolan"}
{"title": "小程序Canvas性能优化实战 ", "content": "<td id=\"article_content\"> \n                     \n                    <h2 id=\"案例背景\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'>案例背景</h2><h3 id=\"需求：\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E9%9C%80%E6%B1%82%EF%BC%9A\" class=\"headerlink\" title=\"需求：\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>需求：</h3><ol style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; padding-left: 2em; color: rgb(51, 51, 51); font-size: 15px; background-color: rgb(255, 255, 255);'><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">在<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>中使用canvas组件绘制地铁图，地铁图包括地铁线路、站点图标、线及站点名称文字，绘制元素为线、圆、图片、文字。</li><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">支持拖动平移和双指缩放。</li></ol><h3 id=\"问题：\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E9%97%AE%E9%A2%98%EF%BC%9A\" class=\"headerlink\" title=\"问题：\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>问题：</h3><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>小程序中的canvas性能有限，特别在交互的过程中不断触发重绘会引发严重卡顿。</p><h2 id=\"基本实现\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E5%9F%BA%E6%9C%AC%E5%AE%9E%E7%8E%B0\" class=\"headerlink\" title=\"基本实现\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>基本实现</h2><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>在不考虑优化的情况下，先说说如何实现绘制和交互。</p><h3 id=\"数据格式\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F\" class=\"headerlink\" title=\"数据格式\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>数据格式</h3><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>首先看看数据，服务返回的数据中每个元素都是独立的，包括该元素的样式及坐标<br></p><figure class=\"highlight plain\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; overflow: auto; margin: 20px 0px; padding: 0px; font-size: 13px; color: rgb(77, 77, 76); background: rgb(247, 247, 247); line-height: 1.6; border-radius: 1px;'><table style=\"margin: 0px; width: auto; border: none;\"><tbody><tr><td class=\"gutter\" style=\"user-select: none; border: none; padding: 0px;\"><pre style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; overflow: auto; margin-top: 0px; margin-bottom: 0px; padding: 10px; font-size: 13px; color: rgb(134, 145, 148); background: rgb(239, 242, 243); line-height: 1.6; border: none; text-align: right;'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>1</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>2</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>3</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>4</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>5</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>6</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>7</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>8</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>9</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>10</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>11</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>12</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>13</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>14</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'></pre></td><td class=\"code\" style=\"border: none; padding: 0px;\"><pre style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; overflow: auto; margin-top: 0px; margin-bottom: 0px; padding: 10px; font-size: 13px; color: rgb(77, 77, 76); background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 1.6; border: none; width: 382px;'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>// 线路数据</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>lineData = { path: [x0, y0, x1, y1, ...], strokeColor, strokeWidth }</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'></span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>// 站点数据：分为普通站点和换乘站点</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>// 普通站点绘制简单圆形</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>stationData = { x, y, r, fillColor, strokeColor, strokeWidth }</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>// 换乘站点绘制换乘图标（png图片）</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>stationData_transfer = { x, y, width, height }</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'></span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>// 线路名称</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>lineNameData = { text, x, y, fillColor }</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'></span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>// 站点名称</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>stationNameData = { text, x, y }</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'></pre></td></tr></tbody></table></figure><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'></p><h3 id=\"绘图API\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E7%BB%98%E5%9B%BEAPI\" class=\"headerlink\" title=\"绘图API\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>绘图API</h3><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>绘制的时候遍历绘制元素数组，根据元素类型设置上下文样式，绘制及填充。接口参考：<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/CanvasContext.html%E3%80%82\" target=\"_blank\" rel=\"noopener\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\">https://developers.weixin.qq.com/miniprogram/dev/api/CanvasContext.html。</a></p><ul style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; padding-left: 2em; color: rgb(51, 51, 51); font-size: 15px; background-color: rgb(255, 255, 255);'><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">设置样式：setStrokeStyle, setFillStyle, setLineWidth, setFontSize</li><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">绘制路线：moveTo, lineTo, stroke</li><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">绘制站点：moveTo, arc, stroke, fill</li><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">绘制图片：drawImage</li><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">绘制文字：fillText</li></ul><h3 id=\"交互实现\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E4%BA%A4%E4%BA%92%E5%AE%9E%E7%8E%B0\" class=\"headerlink\" title=\"交互实现\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>交互实现</h3><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>实现交互主要步骤如下：</p><ol style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; padding-left: 2em; color: rgb(51, 51, 51); font-size: 15px; background-color: rgb(255, 255, 255);'><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">通过<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>bindtouchstart</code>、<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>bindtouchmove</code>、<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>bindtouchend</code>实现对用户拖动和双指缩放的监听，得到拖动位移向量、缩放比例，触发重绘</li><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">绘制时通过<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>scale</code>和<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>translate</code>在不用对数据坐标进行处理的情况下实现缩放和平移</li></ol><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>最终得到的结果如下，平均渲染时长为<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>42.82</code>ms，真机（ios）验证：龟速移动，画面延迟非常大。</p><p><a href=\"data/attachment/portal/201912/17/112300ykx0kbkh515dk1x1.gif\" target=\"_blank\"><img src=\"data/attachment/portal/201912/17/112300ykx0kbkh515dk1x1.gif\"></a></p><span style='color: rgb(51, 51, 51); font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; font-size: 15px; background-color: rgb(255, 255, 255);'></span><h2 id=\"优化方法\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95\" class=\"headerlink\" title=\"优化方法\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>优化方法</h2><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>完全不了解canvas优化方案的同学可以先看看： <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\" target=\"_blank\" rel=\"noopener\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\">canvas的优化</a>。</p><h3 id=\"避免不必要的画布状态改变\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E9%81%BF%E5%85%8D%E4%B8%8D%E5%BF%85%E8%A6%81%E7%9A%84%E7%94%BB%E5%B8%83%E7%8A%B6%E6%80%81%E6%94%B9%E5%8F%98\" class=\"headerlink\" title=\"避免不必要的画布状态改变\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>避免不必要的画布状态改变</h3><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>参考<a href=\"http://taobaofed.org/blog/2016/02/22/canvas-performance/\" target=\"_blank\" rel=\"noopener\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\">Canvas 最佳实践（性能篇）</a> ，绘图上下文是一个状态机，状态的改变是有一定开销的。画布状态改变这里主要指<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>strokeStyle</code>、<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>fillStyle</code>等样式的改变。</p><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>如何减少这部分的开销呢？我们可以尽量让样式相同的元素放在一起进行一次性的绘制。观察一下数据可以发现，很多站点元素样式都是相同的，那么在绘制之前可以先做一次数据的聚合，将样式相同的数据组合成一条数据：<br></p><figure class=\"highlight plain\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; overflow: auto; margin: 20px 0px; padding: 0px; font-size: 13px; color: rgb(77, 77, 76); background: rgb(247, 247, 247); line-height: 1.6; border-radius: 1px;'><table style=\"margin: 0px; width: auto; border: none;\"><tbody><tr><td class=\"gutter\" style=\"user-select: none; border: none; padding: 0px;\"><pre style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; overflow: auto; margin-top: 0px; margin-bottom: 0px; padding: 10px; font-size: 13px; color: rgb(134, 145, 148); background: rgb(239, 242, 243); line-height: 1.6; border: none; text-align: right;'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>1</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>2</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>3</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>4</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>5</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>6</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>7</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>8</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>9</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>10</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>11</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>12</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>13</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>14</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>15</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>16</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'></pre></td><td class=\"code\" style=\"border: none; padding: 0px;\"><pre style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; overflow: auto; margin-top: 0px; margin-bottom: 0px; padding: 10px; font-size: 13px; color: rgb(77, 77, 76); background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 1.6; border: none; width: 502px;'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>function mergeStationData(mapStation) {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  let mergedData = {}</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'></span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  mapStation.forEach(station =&gt; {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>    let coord = `${station.x},${station.y},${station.r}`</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>    let stationStyle = `${station.fillColor}|${station.strokeColor}|${station.strokeWidth}`</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'></span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>    if (mergedData[stationStyle]) {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>      mergedData[stationStyle].push(coord)</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>    } else {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>      mergedData[stationStyle] = [coord]</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>    }</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  })</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'></span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  return mergedData</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>}</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'></pre></td></tr></tbody></table></figure><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'></p><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>聚合后，329条站点数据合并为24条，有效的减少了90%的冗余状态改变开销。修改之后测试一下，平均渲染时长降到了<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>20.48</code>ms，真机验证：移动稍快了一些，但画面仍有较高延迟。</p><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>合并数据的时候需要注意，此应用场景下各站点是没有互相压盖的，而如果有压盖顺序的话，在合并时只能合并相邻且样式相同的数据。</p><h3 id=\"减少绘制物\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E5%87%8F%E5%B0%91%E7%BB%98%E5%88%B6%E7%89%A9\" class=\"headerlink\" title=\"减少绘制物\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>减少绘制物</h3><ol style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; padding-left: 2em; color: rgb(51, 51, 51); font-size: 15px; background-color: rgb(255, 255, 255);'><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\"><p style=\"text-indent: 2em; line-height: 30px; display: inline;\">筛除视野外的绘制物：</p> <p style=\"text-indent: 2em; line-height: 30px; display: inline;\">当用户在放大图像时，其实大部分绘制物都消失在了视野范围之外，避免绘制视野外的元素可以节省不必要的开销。点元素是比较容易判断是否在视野范围之外的，而站点、站点名、线路名都可以作为点元素处理；线路也可以计算出在视野范围内的部分线段，较为复杂，这里先不做处理。筛除掉视野外的绘制物之后测试一下，平均渲染时长<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>17.02</code>ms，真机验证：同上，没有太多变化。</p></li><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\"><p style=\"text-indent: 2em; line-height: 30px; display: inline;\">筛除过小的绘制物：</p> <p style=\"text-indent: 2em; line-height: 30px; display: inline;\">当用户在缩小图像时，文字和站点会由于尺寸太小而看不大清，在不影响用户体验的前提下可以考虑直接去掉。根据测试，最终决定在显示比例小于30%时去除文字和站点，这个级别下的渲染时长从<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>22.12</code>ms，减少到了<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>9.68</code>ms。</p></li></ol><p><a href=\"data/attachment/portal/201912/17/112402t44kkdpydu4dduzu.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/17/112402t44kkdpydu4dduzu.jpg\"></a></p><span style='color: rgb(51, 51, 51); font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; font-size: 15px; background-color: rgb(255, 255, 255);'></span><h3 id=\"降低重绘频率\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E9%99%8D%E4%BD%8E%E9%87%8D%E7%BB%98%E9%A2%91%E7%8E%87\" class=\"headerlink\" title=\"降低重绘频率\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>降低重绘频率</h3><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>虽然平均渲染时长已经低了很多，但是在交互时却仍有较高的延迟，这是因为每次<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>ontouchmove</code>都会将渲染任务加入到异步队列中，事件触发频率远高于每秒能够执行的渲染次数，导致渲染任务严重积压，不断滞后。在PC端一般使用<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>requestAnimationFrame</code>解决这个问题，小程序里没有，但是可以自己实现，参考<a href=\"http://web.zhaicool.net/1125.html\" target=\"_blank\" rel=\"noopener\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\">微信小程序中使用requestAnimationFrame</a>：<br></p><figure class=\"highlight plain\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; overflow: auto; margin: 20px 0px; padding: 0px; font-size: 13px; color: rgb(77, 77, 76); background: rgb(247, 247, 247); line-height: 1.6; border-radius: 1px;'><table style=\"margin: 0px; width: auto; border: none;\"><tbody><tr><td class=\"gutter\" style=\"user-select: none; border: none; padding: 0px;\"><pre style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; overflow: auto; margin-top: 0px; margin-bottom: 0px; padding: 10px; font-size: 13px; color: rgb(134, 145, 148); background: rgb(239, 242, 243); line-height: 1.6; border: none; text-align: right;'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>1</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>2</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>3</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>4</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>5</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>6</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>7</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>8</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>9</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>10</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>11</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>12</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>13</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>14</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>15</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>16</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>17</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'></pre></td><td class=\"code\" style=\"border: none; padding: 0px;\"><pre style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; overflow: auto; margin-top: 0px; margin-bottom: 0px; padding: 10px; font-size: 13px; color: rgb(77, 77, 76); background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 1.6; border: none; width: 377px;'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>const requestAnimationFrame = function (callback, lastTime) {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  var lastTime;</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  if (typeof lastTime === 'undefined') {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>    lastTime = 0</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  }</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  var currTime = new Date().getTime();</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  var timeToCall = Math.max(0, 30 - (currTime - lastTime));</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  lastTime = currTime + timeToCall;</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  var id = setTimeout(function () {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>    callback(lastTime);</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  }, timeToCall);</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  return id;</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>};</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'></span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>const cancelAnimationFrame = function (id) {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  clearTimeout(id);</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>};</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'></pre></td></tr></tbody></table></figure><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'></p><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>PC端我们一般将渲染间隔控制在16ms左右，但是在小程序中考虑到性能限制，且移动端各机型性能不一，所以这里留了一些空间，控制在30ms，对应到30FPS左右。</p><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>但如果一直循环调用也会造成静止状态下不必要的开销，所以可以在交互开始<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>ontouchstart</code>和结束<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>ontouchend</code>时分别开启、停止动画：<br></p><figure class=\"highlight plain\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; overflow: auto; margin: 20px 0px; padding: 0px; font-size: 13px; color: rgb(77, 77, 76); background: rgb(247, 247, 247); line-height: 1.6; border-radius: 1px;'><table style=\"margin: 0px; width: auto; border: none;\"><tbody><tr><td class=\"gutter\" style=\"user-select: none; border: none; padding: 0px;\"><pre style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; overflow: auto; margin-top: 0px; margin-bottom: 0px; padding: 10px; font-size: 13px; color: rgb(134, 145, 148); background: rgb(239, 242, 243); line-height: 1.6; border: none; text-align: right;'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>1</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>2</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>3</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>4</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>5</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>6</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>7</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>8</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>9</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>10</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'></pre></td><td class=\"code\" style=\"border: none; padding: 0px;\"><pre style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; overflow: auto; margin-top: 0px; margin-bottom: 0px; padding: 10px; font-size: 13px; color: rgb(77, 77, 76); background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 1.6; border: none; width: 306px;'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>animate(lastTime) {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  this.animateId = requestAnimationFrame((t) =&gt; {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>    this.render()</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>    this.animate(t)</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  }, lastTime)</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>},</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'></span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>stop() {</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>  cancelAnimationFrame(this.animateId)</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'><span class=\"line\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; height: 20px;'>},</span><br style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\";'></pre></td></tr></tbody></table></figure><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'></p><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>修改之后真机验证一下：画面比较流程，有轻微卡顿，但不会延迟。</p><h3 id=\"其他注意\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E5%85%B6%E4%BB%96%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"其他注意\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>其他注意</h3><ol style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; padding-left: 2em; color: rgb(51, 51, 51); font-size: 15px; background-color: rgb(255, 255, 255);'><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">由于本例中缩放和平移状态是以绝对状态保存的，所以<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>scale</code>和<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>translate</code>要搭配<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>save</code>和<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>restore</code>一起使用；但也可以使用<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>setTransform</code>直接重置矩阵。从理论上看这样应该能节省开销，但实际测试并没什么效果，平均渲染时长在<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>18.12</code>ms。这个问题有待研究。</li><li style=\"list-style: none; color: rgb(64, 64, 64); font-size: 14px; line-height: 30px; text-indent: 2em; letter-spacing: 1px; margin-bottom: 5px; margin-top: 5px;\">小程序中避免使用<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>setData</code>保存与界面渲染无关的数据，以避免引起页面重绘。</li></ol><h2 id=\"优化结果\" style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(51, 51, 51); margin-top: 20px; margin-bottom: 20px; background-color: rgb(255, 255, 255);'><a href=\"https://blog.totoroxiao.com/canvas-perf-mini/#%E4%BC%98%E5%8C%96%E7%BB%93%E6%9E%9C\" class=\"headerlink\" title=\"优化结果\" style=\"text-decoration-line: none; color: rgb(73, 144, 226);\"></a>优化结果</h2><p style='font-family: italic, Helvetica, Arial, \"Heiti SC\", \"Microsoft YaHei\"; color: rgb(64, 64, 64); line-height: 30px; letter-spacing: 1px; background-color: rgb(255, 255, 255);'>经过以上优化，渲染时长从<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>42</code>降到了<code style='font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace; padding: 2px 4px; word-wrap: break-word; color: rgb(85, 85, 85); background: rgb(238, 238, 238); border-radius: 3px; font-size: 13px;'>17</code>ms左右，真机验证下安卓机型普遍非常流畅，体验很好；ios机型有轻微卡顿，且随着使用时长卡顿逐渐明显，后期可以深入研究下是否有内存管理的问题。</p><p><a href=\"data/attachment/portal/201912/17/112300ykx0kbkh515dk1x1.gif\" target=\"_blank\"><img src=\"data/attachment/portal/201912/17/112300ykx0kbkh515dk1x1.gif\"></a></p> </td>", "pub_time": "2019-12-17 00:18", "author": "Rolan"}
{"title": "小程序跨页面数据传递与事件响应 ", "content": "<td id=\"article_content\"> \n                     \n                    <div><p>在实际工作中有很多场景需要在第二个页面中将用户操作之后的将数据回传到上一页面。接下来将我的方案分享给小伙伴。</p>\r\n<blockquote>\r\n<p>本次示例采用 <a target=\"_blank\" href=\"https://uniapp.dcloud.io/\" rel=\"nofollow noopener noreferrer\">uni-app</a> 框架和 <a target=\"_blank\" href=\"https://weui.io/\" rel=\"nofollow noopener noreferrer\">weui</a> 样式库</p>\r\n</blockquote>\r\n<h3 class=\"heading\" data-id=\"heading-0\">实现思路</h3>\r\n<ol>\r\n<li>创建一个 <code>Emitter</code>，用于事件处理</li>\r\n<li>创建一个全局的 <code>Storage</code></li>\r\n<li>在第一个页面创建一个 <code>emitter</code> 对象，并添加事件监听，将 <code>emitter</code> 存储到 <code>Storage</code> 中</li>\r\n<li>在第二个页面从 <code>Storage</code> 中取出 <code>emitter</code> 对象， 并触发事件，将数据传递到第一个页面中做处理</li>\r\n</ol>\r\n<h3 class=\"heading\" data-id=\"heading-1\">创建 <code>Emitter</code></h3>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isFunc</span>(<span class=\"hljs-params\">fn</span>) </span>{\r\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">typeof</span> fn === <span class=\"hljs-string\">'function'</span>;\r\n}\r\n\r\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Emitter</span> </span>{\r\n  <span class=\"hljs-keyword\">constructor</span>() {\r\n    <span class=\"hljs-keyword\">this</span>._store = {};\r\n  }\r\n\r\n  <span class=\"hljs-comment\">/**\r\n   * 事件监听\r\n   * @param {String} event 事件名\r\n   * @param {Function} listener 事件回调函数\r\n   */</span>\r\n  on(event, listener) {\r\n    <span class=\"hljs-keyword\">const</span> listeners = <span class=\"hljs-keyword\">this</span>._store[event] || (<span class=\"hljs-keyword\">this</span>._store[event] = []);\r\n\r\n    listeners.push(listener);\r\n  }\r\n\r\n  <span class=\"hljs-comment\">/**\r\n   * 取消事件监听\r\n   * @param {String} event 事件名\r\n   * @param {Function} listener 事件回调函数\r\n   */</span>\r\n  off(event, listener) {\r\n    <span class=\"hljs-keyword\">const</span> listeners = <span class=\"hljs-keyword\">this</span>._store[event] || (<span class=\"hljs-keyword\">this</span>._store[event] = []);\r\n\r\n    listeners.splice(listeners.findIndex(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item === listener), <span class=\"hljs-number\">1</span>);\r\n  }\r\n\r\n  <span class=\"hljs-comment\">/**\r\n   * 事件监听 仅监听一次\r\n   * @param {String} event 事件名\r\n   * @param {Function} listener 事件回调函数\r\n   */</span>\r\n  once(event, listener) {\r\n    <span class=\"hljs-keyword\">const</span> proxyListener = <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> {\r\n      isFunc(listener) &amp;&amp; listener.call(<span class=\"hljs-literal\">null</span>, data);\r\n\r\n      <span class=\"hljs-keyword\">this</span>.off(event, proxyListener);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">this</span>.on(event, proxyListener);\r\n  }\r\n\r\n  <span class=\"hljs-comment\">/**\r\n   * 触发事件\r\n   * @param {String} 事件名\r\n   * @param {Object} 传给事件回调函数的参数\r\n   */</span>\r\n  emit(event, data) {\r\n    <span class=\"hljs-keyword\">const</span> listeners = <span class=\"hljs-keyword\">this</span>._store[event] || (<span class=\"hljs-keyword\">this</span>._store[event] = []);\r\n\r\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> listener <span class=\"hljs-keyword\">of</span> listeners) {\r\n      isFunc(listener) &amp;&amp; listener.call(<span class=\"hljs-literal\">null</span>, data);\r\n    }\r\n  }\r\n}\r\n\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><h3 class=\"heading\" data-id=\"heading-2\">创建 <code>Storage</code></h3>\r\n<pre><code class=\"hljs js copyable\" lang=\"js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Storage</span> </span>{\r\n  <span class=\"hljs-keyword\">constructor</span>() {\r\n    <span class=\"hljs-keyword\">this</span>._store = {};\r\n  }\r\n\r\n  add(key, val) {\r\n    <span class=\"hljs-keyword\">this</span>._store[key] = val;\r\n  }\r\n  \r\n  get(key) {\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>._store[key];\r\n  }\r\n  \r\n  remove(key) {\r\n    <span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">this</span>._store[key];\r\n  }\r\n  \r\n  clear() {\r\n    <span class=\"hljs-keyword\">this</span>._store = {};\r\n  }\r\n}\r\n\r\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">new</span> Storage();\r\n\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><h3 class=\"heading\" data-id=\"heading-3\">第一个页面中的处理</h3>\r\n<pre><code class=\"hljs html copyable\" lang=\"html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"page\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"weui-cells__title\"</span>&gt;</span>选择城市<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"weui-cells weui-cells_after-title\"</span>&gt;</span>\r\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">navigator</span> <span class=\"hljs-attr\">:url</span>=<span class=\"hljs-string\">\"`../select/select?id=${cityId}`\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"weui-cell weui-cell_access\"</span> <span class=\"hljs-attr\">hover-class</span>=<span class=\"hljs-string\">\"weui-cell_active\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"weui-cell__hd weui-label\"</span>&gt;</span>所在城市<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"weui-cell__bd\"</span> <span class=\"hljs-attr\">:style</span>=<span class=\"hljs-string\">\"{color: cityName || '#999'}\"</span>&gt;</span>{{ cityName || '请选择' }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"weui-cell__ft weui-cell__ft_in-access\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\r\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">navigator</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\r\n<span class=\"hljs-keyword\">import</span> Emitter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../../utils/emitter'</span>;\r\n<span class=\"hljs-keyword\">import</span> storage <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../../utils/storage'</span>;\r\n\r\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\r\n  data() {\r\n    <span class=\"hljs-keyword\">return</span> {\r\n      <span class=\"hljs-attr\">cityId</span>: <span class=\"hljs-string\">''</span>,\r\n      <span class=\"hljs-attr\">cityName</span>: <span class=\"hljs-string\">''</span>,\r\n    }\r\n  },\r\n  onLoad() {\r\n    <span class=\"hljs-keyword\">const</span> emitter = <span class=\"hljs-keyword\">new</span> Emitter();\r\n\r\n    <span class=\"hljs-comment\">// 将emitter存到storage中</span>\r\n    storage.add(<span class=\"hljs-string\">'indexEmitter'</span>, emitter);\r\n\r\n    <span class=\"hljs-comment\">// 添加事件监听</span>\r\n    emitter.on(<span class=\"hljs-string\">'onSelect'</span>, <span class=\"hljs-keyword\">this</span>.handleSelect);\r\n  },\r\n  <span class=\"hljs-attr\">methods</span>: {\r\n    <span class=\"hljs-comment\">// 事件处理</span>\r\n    handleSelect(data) {\r\n      <span class=\"hljs-keyword\">this</span>.cityId = data.id;\r\n      <span class=\"hljs-keyword\">this</span>.cityName = data.text;\r\n    }\r\n  }\r\n}\r\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\r\n\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><h3 class=\"heading\" data-id=\"heading-4\">第二个页面中的处理</h3>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">&lt;template&gt;\r\n  &lt;div class=<span class=\"hljs-string\">\"page\"</span>&gt;\r\n    &lt;div class=<span class=\"hljs-string\">\"weui-cells__title\"</span>&gt;城市列表&lt;/div&gt;\r\n    &lt;div class=<span class=\"hljs-string\">\"weui-cells weui-cells_after-title\"</span>&gt;\r\n      &lt;radio-group @change=<span class=\"hljs-string\">\"handleChange\"</span>&gt;\r\n        &lt;label class=<span class=\"hljs-string\">\"weui-cell weui-check__label\"</span> v-for=<span class=\"hljs-string\">\"item in list\"</span> :key=<span class=\"hljs-string\">\"item.id\"</span>&gt;\r\n          &lt;radio class=<span class=\"hljs-string\">\"weui-check\"</span> :value=<span class=\"hljs-string\">\"item.id\"</span> :checked=<span class=\"hljs-string\">\"`<span class=\"hljs-variable\">${item.id}</span>` === selectedId\"</span> /&gt;\r\n          &lt;div class=<span class=\"hljs-string\">\"weui-cell__bd\"</span>&gt;{{ item.text }}&lt;/div&gt;\r\n          &lt;div v-if=<span class=\"hljs-string\">\"`<span class=\"hljs-variable\">${item.id}</span>` === selectedId\"</span> class=<span class=\"hljs-string\">\"weui-cell__ft weui-cell__ft_in-radio\"</span>&gt;\r\n            &lt;icon class=<span class=\"hljs-string\">\"weui-icon-radio\"</span> <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">\"success_no_circle\"</span> size=<span class=\"hljs-string\">\"16\"</span> /&gt;\r\n          &lt;/div&gt;\r\n        &lt;/label&gt;\r\n      &lt;/radio-group&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nimport storage from <span class=\"hljs-string\">'../../utils/storage'</span>;\r\n\r\n<span class=\"hljs-built_in\">export</span> default {\r\n  <span class=\"hljs-function\"><span class=\"hljs-title\">data</span></span>() {\r\n    <span class=\"hljs-built_in\">return</span> {\r\n      list: [\r\n        { id: 0, text: <span class=\"hljs-string\">'北京'</span> },\r\n        { id: 1, text: <span class=\"hljs-string\">'上海'</span> },\r\n        { id: 2, text: <span class=\"hljs-string\">'广州'</span> },\r\n        { id: 3, text: <span class=\"hljs-string\">'深圳'</span> },\r\n        { id: 4, text: <span class=\"hljs-string\">'杭州'</span> },\r\n      ],\r\n      selectedId: <span class=\"hljs-string\">''</span>\r\n    }\r\n  },\r\n  onLoad({ id }) {\r\n    this.selectedId = id;\r\n    \r\n    // 取出 emitter\r\n    this.emitter = storage.get(<span class=\"hljs-string\">'indexEmitter'</span>);\r\n  },\r\n  methods: {\r\n    handleChange(e) {\r\n      this.selectedId = e.detail.value;\r\n\r\n      const item = this.list.find(({ id }) =&gt; `<span class=\"hljs-variable\">${id}</span>` === e.detail.value);\r\n\r\n      // 触发事件并传递数据\r\n      this.emitter.emit(<span class=\"hljs-string\">'onSelect'</span>, { ...item });\r\n    }\r\n  }\r\n}\r\n&lt;/script&gt;\r\n\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><h3 class=\"heading\" data-id=\"heading-5\">效果展示</h3>\r\n<p></p><figure><p><a href=\"data/attachment/portal/201912/17/113008d0c6130v10izvldk.gif\" target=\"_blank\"><img src=\"data/attachment/portal/201912/17/113008d0c6130v10izvldk.gif\"></a></p></figure><h3 class=\"heading\" data-id=\"heading-6\">传送门</h3>\r\n<p><a target=\"_blank\" href=\"https://github.com/hukaibaihu/uni-cpc\" rel=\"nofollow noopener noreferrer\">github</a></p>\r\n<h3 class=\"heading\" data-id=\"heading-7\">总结</h3>\r\n<p>之所以将<code>Storage</code>定义成全局的，是为了保证第一个页面放到<code>Storage</code>中和第二个页面从 <code>Storage</code> 中取出的<code>emitter</code>是同一个实例，如此第一个页面才能正确监听到第二个页面触发的事件。也可以使用 <a target=\"_blank\" href=\"https://vuex.vuejs.org/\" rel=\"nofollow noopener noreferrer\">vuex</a>，将 <code>emitter</code> 放到 <code>state</code> 中。</p></div> </td>", "pub_time": "2019-12-17 00:27", "author": "Rolan"}
{"title": "小程序 input 使用setData触发bindinput事件 ", "content": "<td id=\"article_content\"> \n                     \n                    <div><h3 class=\"heading\" data-id=\"heading-0\">背景</h3>\r\n<p>UI设计如下图\r\n</p><figure><p><a href=\"data/attachment/portal/201912/17/113432qafqb5p0fpxa54q8.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/17/113432qafqb5p0fpxa54q8.jpg\"></a></p><figcaption></figcaption></figure>\r\n当有输入内容后显示后面的清除按钮，点击清除删除input里的内容<p></p>\r\n<h3 class=\"heading\" data-id=\"heading-1\">代码实现</h3>\r\n<p>我的代码实现是监听<code>bindinput</code>事件，将输入框中的值<code>this.setData({inputValue})</code>, 清除按钮监听点击事件，触发后<code>this.setData({inputValue: ''})</code></p>\r\n<h3 class=\"heading\" data-id=\"heading-2\">问题</h3>\r\n<p>android手机上存在一个问题，当<code>input</code>组件是<code>focus</code>状态时，点击清除按钮输入框会闪一下，键盘保持弹出状态，输入框中的内容并没有删除，再次点击后才能删除， 开发者工具和ios均没有上述问题</p>\r\n<h3 class=\"heading\" data-id=\"heading-3\">解决</h3>\r\n<p>我发现出现上面的问题是因为在点击清除按钮时额外的触发了一次<code>bindinput</code>事件，将输入框中的值又重新赋值给<code>inputValue</code>了，我一开始以为，额外触发<code>bindinput</code>事件是因为input失焦导致的，但是后面又发现我点击空白的地方并不会触发<code>bindinput</code>事件</p>\r\n<p>后来我发现是setData导致的，找到了原因就可以对症下药了，查看开发文档发现bindinput的返回值中有一个<code>keyCode</code>属性，这个属性只有在键盘输入的时候才会有，用于记录输入的键值，所以我在bindinput中加了一层判断，如果有<code>keyCode</code>这个属性才会进行后面的运算。</p>\r\n<h3 class=\"heading\" data-id=\"heading-4\">缺陷</h3>\r\n<p>在开发者工具中使用键盘输入bindinput的返回值中并没有keyCode这个属性，所以在调试时就会存在输入的值并不会赋值给inputValue,需要注释对keyCode的判断。</p>\r\n<h3 class=\"heading\" data-id=\"heading-5\">疑问</h3>\r\n<p>上面的问题只会在input组件是focus状态时才会出现，如果一开始不是focus时直接点击清除按钮并不会出现上述问题，所以这个bug可能还和同时监听bindinput和bindblur或者bindfocus有关，这个有待后面进行验证。</p></div><br> </td>", "pub_time": "2019-12-17 00:33", "author": "Rolan"}
{"title": "某相册类小程序项目总结 ", "content": "<td id=\"article_content\"> \n                     \n                    <h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>某相册类<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>项目总结</h2><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1.项目简介</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一款为家庭设计的亲密社交产品，分为云端存储、智能电视、小程序三个平台，小程序端主要功能包括：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">建立相册，上传图片、视频，</li><li style=\"line-height: 1.7em; list-style-type: disc;\">单张图片(视频)的预览、分享、下载、评论</li><li style=\"line-height: 1.7em; list-style-type: disc;\">相册集预览、分享、下载、评论</li><li style=\"line-height: 1.7em; list-style-type: disc;\">相册内容管理，删除、下载、设置封面、重命名、设置成开机视屏及屏保图片等</li><li style=\"line-height: 1.7em; list-style-type: disc;\">照片共享，手机、电视多端家庭内容同步和管理</li><li style=\"line-height: 1.7em; list-style-type: disc;\">邀请、删除家庭成员，添加、删除绑定设备</li><li style=\"line-height: 1.7em; list-style-type: disc;\">个性化设置家庭昵称、自己昵称、相册名称</li></ul><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2. 主要工作和疑难点汇总</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2.1 主要工作</h4><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">封装api请求，改造wx.requeset方法，封装http请求</li><li style=\"line-height: 1.7em;\">抽取公共样式文件，在每个page文件夹的.wxss文件中，通过import 引入，\t<br>如：@import \"../../lib/base.wxss\";</li><li style=\"line-height: 1.7em;\">抽取公共组件，如单个相册组件、弹出卡片组件、个人头像组件、照片卡片组件，通过在各个页面配置usingComponents参数使用。</li><li style=\"line-height: 1.7em;\">封装全局公共函数</li><li style=\"line-height: 1.7em;\">业务逻辑</li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">接入百度统计, 统计实时数据</p><pre class=\"prettyprint hljs vbscript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>在我的应用中添加小程序appkey，下载解压后的js文件到utils文件夹中去，同时将百度添加到<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">request</span>合法域名中去。</pre></li></ol><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2.2 业务亮点</h4><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2.3 疑难点汇总</h4><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">如何在小程序中使用less，可以实时转化为 .wxss文件？</li><li style=\"line-height: 1.7em;\">小程序Page里的函数比app.js先执行的解决办法</li><li style=\"line-height: 1.7em;\">fixed 元素 auto 不生效原因</li><li style=\"line-height: 1.7em;\">封装一个有输入框的modal层组件</li><li style=\"line-height: 1.7em;\">微信小程序去除button默认边框样式</li><li style=\"line-height: 1.7em;\">小程序如何获取点击元素信息</li><li style=\"line-height: 1.7em;\">小程序如何在页面间传递数组对象？</li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">小程序如何批量上传图片</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>chooseImage、chooseVideo的回调函数中，wx.uploadFile\r\n上传，更新进度\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.updated_length + <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>\r\n\r\n当所有照片都上传成功，updated_length == total_length时，\r\n显示完全上传完毕\r\n\r\n视频的进度显示和图片的不一样\r\n图片是每次上传成功一张，updated_length + <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>\r\n视频是调用\r\nwx.uploadFile 对象的 onProgressUpdate 函数，看到视频上传进度，每<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">500</span>毫秒更新一次</pre></li><li style=\"line-height: 1.7em;\">小程序几个组件</li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">如何让swiper 跳转到点击的index ？</p><pre class=\"prettyprint hljs awk\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>current 参数\r\npreview了, 还能点击图片么,  失败，不使用\r\nhttps:<span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span>www.cnblogs.com<span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">/BlueCc/</span>p<span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">/10172742.html</span></pre></li><li style=\"line-height: 1.7em;\">动态设置小程序背景图片</li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">如何实现分享、点赞功能</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>分享： onShareAppMessage, 点赞：根据本人是否点赞过，是否有点赞权限\r\n\r\nonShareAppMessage: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">res</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> obj = {\r\n      <span class=\"hljs-attr\">from</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'sharephoto'</span>,\r\n      <span class=\"hljs-attr\">mac</span>: app.globalData.mac,\r\n      <span class=\"hljs-attr\">open_id</span>: app.globalData.open_id,\r\n      <span class=\"hljs-attr\">member_id</span>: app.globalData.current_member.member_id,\r\n      <span class=\"hljs-attr\">family_id</span>: app.globalData.family_id,\r\n      <span class=\"hljs-attr\">album_id</span>: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.album_id\r\n    }\r\n    obj = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">JSON</span>.stringify(obj);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> name = app.globalData.current_member.nick_name;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> shareObj = {\r\n　　　　<span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${name}</span>跟你分享了一本有趣的相册集‘<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.album_title}</span>’`</span>,        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 默认是小程序的名称(可以写slogan等)</span>\r\n       path:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`pages/login/login?message=<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${obj}</span>`</span>,\r\n　　　　<span class=\"hljs-attr\">imageUrl</span>: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.album_cover,     <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//自定义图片路径，可以是本地文件路径、代码包文件路径或者网络图片路径，支持PNG及JPG，不传入 imageUrl 则使用默认截图。显示图片长宽比是 5:4</span>\r\n　　　　success: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">res</span>)</span>{\r\n　　　　},\r\n　　　　<span class=\"hljs-attr\">fail</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>)</span>{\r\n　　　　}\r\n　　};\r\n　　<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> shareObj;\r\n  },\r\n        \r\n\r\n\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//节流,300ms才能点一次</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.timer) {\r\n  clearTimeout(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.timer)\r\n}\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.timer = setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n  <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'点击点赞'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.like_id);\r\n  server.like(family_id, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.album_id, mac, member_id, open_id, app.globalData.open_id, form_id,  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.like_id).then(<span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>)=&gt;</span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.getPhotoBlock();\r\n  })\r\n}, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">300</span>)</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">如何实现全选、单选功能</p><pre class=\"prettyprint hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>对某一天日期的照片，如果没张都选了，传递今天整个相册\r\n每次单选照片都会重新判断是否全选</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">小程序时间过滤器 formatTime util的使用</p><pre class=\"hljs vbscript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>wxs中<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Date</span>()等js方法不可用,  所以不能用过滤器，还是用方法</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">为什么多个 formId 会重复，</p><pre class=\"hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>因为不支持同时获取多个 formId, 每次只能获取一个</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">如何实现预览照片，点击后跳转到单张照片？</p><pre class=\"prettyprint hljs sql\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>wx.previewImage，这里注意 swiper中，currentIndex 左右滑动是否一致，<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">change</span>函数的处理。</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">如何支持同时预览图片和视频？</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>直接使用 <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.previewImage</span>缺点：不能支持视频，不支持对单张照片做其他操作，智能预览，所以先跳转到 <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper</span>页面\r\n点击照片，预览单张照片。点击视频，跳转到<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">vediofull</span>页面。</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">视频播放是否全屏</p><pre class=\"prettyprint hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>videofullchange，监听全屏事件，小程序视频根据尺寸判断全屏\r\n在 chooseVideo 的时候， 获取视频的高宽</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">解决，如果有其他照片上传失败怎么办？</p><pre class=\"hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>每次调用 showProgress</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">如何判断小程序来源？分享？邀请？</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.message.from几个值判断，一共有<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">9</span>种情况\r\n\r\n邀请、分享、在家庭中，不在家庭中，是不是管理员，是否来源扫一扫\r\n\r\n单张相片\r\n相册\r\n受到邀请，不在家庭\r\n受到邀请，在家庭中\r\n扫一扫，不在家庭中\r\n扫一扫，在家庭中，是管理员\r\n扫一扫，在家庭中，不是管理员\r\n不是成员，不是扫一扫\r\n已经在家庭中\r\n其他</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">showActionSheet 有长度限制吗？</p><pre class=\"hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>有6个，超过怎么办？二层底部弹卡</pre></li><li style=\"line-height: 1.7em;\">如何见人照片与视频</li><li style=\"line-height: 1.7em;\">内容过滤</li><li style=\"line-height: 1.7em;\">接入百度移动统计</li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">授权问题</p><pre class=\"prettyprint hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>问题出现在，分享给第三人单张照片的时候，未先授权小程序前，不能查看照片，改变login页面逻辑，去掉入门授权，在点击分享、下载时候再询问授权\r\n首页、家庭页，操作后才授权，点击前会有蒙层</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">安全问题</p><pre class=\"prettyprint hljs tcl\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>需要操作的页面，onLoad都会 checkInFamily，如果不在任何家庭中，跳转到<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">scan</span>页面</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">哪些情况下展示红包？</p><pre class=\"hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>创建相册、邀请成功成员</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">如何通过扫描二维码获得数据</p><pre class=\"hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.scanCode</span>, 获取返回参数</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">如何判断自己有没有全选评论、点赞、编辑？</p><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">如果照片、视频来源于分享者，且分享人的id=评论id，用分享人的信息给后端传递参数。无论是获取评论、删除评论、发送评论，被分享人都是使用的分享者信息。</p></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">一级tab页面需要哪些验证？</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>1，首先检查有没有授权，<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.getUserInfo</span>，授权后下一步操作  \r\n2，检查<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">checkIn</span>，在不在家庭中，有没有操作权限，没有退出  \r\n3，获取成员信息，检查有没有红包，有，领取后下一步操作</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">如何拿到信息扫描？</p><pre class=\"hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>wx.scanCode({\r\n      succes<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">s:</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>)...\r\n      \r\n  通过<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>值获取</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">获取验证码逻辑</p><pre class=\"prettyprint hljs vbscript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">me</span>.data.timerFun = setInterval(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> () {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">me</span>.data.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">timer</span> &gt; <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">me</span>.setData({<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">timer</span>:<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">me</span>.data.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">timer</span><span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">-1</span>})\r\n    }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">me</span>.setData({<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">timer</span>:<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">'重新发送'})</span>\r\n      clearInterval(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">me</span>.data.timerFun);\r\n    }\r\n    }, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1000</span>);</pre></li></ol><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4. 业务逻辑梳理</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4.1 项目哪几个page组成？有几个组件？</h4><pre class=\"prettyprint hljs ruby\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-params\">| 16个page  |</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">5</span>个组件 <span class=\"hljs-params\">|\r\n|</span>  ----  <span class=\"hljs-params\">| ----  |</span>\r\n<span class=\"hljs-params\">| login  |</span> 获取token、管理跳转 <span class=\"hljs-params\">|\r\n|</span> le_login  <span class=\"hljs-params\">| 同步账号 |</span>\r\n<span class=\"hljs-params\">| about |</span> 账号绑定、消息、关于、意见反馈 <span class=\"hljs-params\">|\r\n|</span>  photo-edit <span class=\"hljs-params\">| 照片编辑页 |</span>\r\n<span class=\"hljs-params\">| select-device |</span> 选择屏保页面 <span class=\"hljs-params\">|\r\n|</span> h5 <span class=\"hljs-params\">| 红包页面 |</span>\r\n<span class=\"hljs-params\">| comment |</span> 评论列表页面 <span class=\"hljs-params\">|\r\n|</span> swiperphotos <span class=\"hljs-params\">| 视频、照片滑动页面 |</span>\r\n<span class=\"hljs-params\">| vediofull |</span> 全屏播放视频页面 <span class=\"hljs-params\">|\r\n|</span> photomanage <span class=\"hljs-params\">| 照片管理页面，全选、反选、下载 |</span>\r\n<span class=\"hljs-params\">| photos |</span> 相册所有照片页面 <span class=\"hljs-params\">|\r\n|</span> one-photo <span class=\"hljs-params\">| 单张照片分享页面 |</span>\r\n<span class=\"hljs-params\">| homepage |</span> 首页，我的相册页面 <span class=\"hljs-params\">|\r\n|</span> familypage <span class=\"hljs-params\">| 家庭首页 |</span>\r\n<span class=\"hljs-params\">| del-member |</span> 删除成员、设备页面 <span class=\"hljs-params\">|\r\n|</span> my-modal <span class=\"hljs-params\">| 弹卡组件|</span>\r\n<span class=\"hljs-params\">| member-icon |</span> 头像组件<span class=\"hljs-params\">|\r\n|</span> photo-album <span class=\"hljs-params\">| 相册组件|</span>\r\n<span class=\"hljs-params\">| photo-detail |</span> 相册详情组件<span class=\"hljs-params\">|\r\n|</span> red-packet <span class=\"hljs-params\">| 红包组件|</span></pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4.2 挑几个页面看看</h4><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">family 页面？</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">1.1 邀请成员</p><pre class=\"prettyprint hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>主要通过 onShareAppMessage 函数，将邀请人的信息添加在 path的参数中，在login页面中获得</pre><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">1.2 添加设备</p><pre class=\"hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>调整到 homescan页面</pre><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">1.3 退出家庭</p><pre class=\"hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//如果只剩本人自己, 解散家庭，否则按照退出家庭算</span></pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">photomanage 页面？（点击，下载、设置壁纸，设置屏保后跳转的页面）</p><pre class=\"prettyprint hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>全选，反选逻辑\r\n\r\n\r\n\r\n设置封面逻辑，如何做到 所有天，只有一个封面？每一天的照片、视频，是一个组件\r\n\r\nselect_photos  所有选中的照片\r\n\r\n\r\n选照片、下载、删除逻辑：\r\n传值过来的是 按日期分布的数组，按照日期对应，修改当天的照片数组。\r\n遍历所有天的照片，计算选中张数，编号。\r\n\r\n设置封面逻辑：\r\n所有天照片，只有有一天选中了，其他所有置灰。</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">photos 页面？ 点击相册进入的页面</p><pre class=\"hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>功能：上传照片、视频，点赞、评论</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">vediofull 页面</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>首先需要创建视频播放上下文对象   \r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.createVideoContext</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'myVideo'</span>);\r\n\r\n退出：\r\n视频对象 <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">pause</span>，退出全屏， 对象置为<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">null</span>\r\n\r\n监听是否需要横屏：\r\n如果视频宽度大于高度，横屏</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">swiperphotos 页面</p><pre class=\"prettyprint hljs sql\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>如何支持，同时预览照片和视频？  \r\n不使用原生自带的 wx.previewImage\r\n视频，跳转到 vediofull 页面\r\n\r\n定位到当前照片是，所有 swiper数组的第几章照片  \r\n初始状态，当前滑动照片数，预览照片上面的显示数字，current_index，和 swiper组件绑定的，current值差1，<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">change</span>函数滑动照片，改变current_index值</pre></li></ol><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>5. 几个组件简介</h3><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">member-icon:</p><pre class=\"hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>支持头像组件两种形态：文字在头像下方、文字在头像右方</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">my-modal:</p><pre class=\"prettyprint hljs verilog\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>支持弹出会话层有<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>文本框，支持编辑和新建功能\r\n    \r\n    新建相册名称为空，编辑相册名称为相册名称，怎么做到的？\r\n    新建，文本框内容为update_value，编辑为从父类传过来的数据，textvalue\r\n    \r\n    如何在操作完编辑后，新建，相册名称为空？\r\n    每次确认后，<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>框内容置空\r\n    \r\n    实时计算文本框字数？\r\n    bindinput函数</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">photo-album: 相册组件</p><pre class=\"hljs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>每个相册组件，点击跳转到该相册详情页面</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">red-packet: 红包组件</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\">//将红包信息参数发送给后端，传递给前端一个web-view 地址链接\r\n    //webview src指向网页的链接。（承载网页的容器，会自动铺满整个小程序页面）\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">web-view</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{link}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">web-view</span>&gt;</span></span></pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">photo-detail: 相册详情组件，支持同一天照片全选、反选，设置屏保、删除、下载等功能</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>如何区分对照片的操作类型？设置封面？下载？删除？根据前一个页面传过来的操作类型判断\r\n    photo-detail只是一天的照片、视频操作，如何将所有日期选中照片传递给后端？\r\n    每次触发某一天的照片，是一个数组，向父元素触发事件，\r\n    \r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.photo_block.forEach((item, index)=&gt; {\r\n     <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(item.days == photo.days) {\r\n       <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.photo_block[index] = photo;\r\n     }\r\n   })\r\n   \r\n     \r\n     如何统计总数？\r\n     每次重新计算选中照片。遍历。</pre></li></ol><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>6. 问题汇总解答</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1. 如何在小程序中使用less，可以实时转化为 .wxss文件？</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序只支持原生css写法，但是很浪费时间，使用 wxss-cli 可以实时将编写的 .less 文件自动编译为 .wxss 文件</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1、npm或者yarn全局安装wxss-cli</p><pre class=\"hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">npm</span> install -g wxss-cli</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2、运行wxss-cli命令(miniProject为小程序目录)，less文件保存时自动编译</p><pre class=\"hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wxss</span> ./miniProject</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://developers.weixin.qq.com/community/develop/doc/00086c05ce0b780c3d072925955c06\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">参考资料</a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2. 小程序Page里的函数比app.js先执行的解决办法</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>问题描述：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当我们初始化一个小程序时，默认文件 app.js 中有onLaunch函数，</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>onLaunch: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onLaunch\"</span>);\r\n    wx.login({\r\n      <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"login\"</span>);\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 发送 res.code 到后台换取 openId, sessionKey, unionId</span>\r\n      }\r\n    })\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>默认目录，\"pages/index/index\", 中index.js 有 onLoad函数</p><pre class=\"hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>onLoad: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"index onLoad\"</span>);\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序网络请求默认为异步请求，在app.js的onLaunch运行后进行异步请求时，程序不会停止，index.js页已执行onload, onload里面的数据会因为没有获取到app.js里的东西而报错, 我们希望onLaunch执行完后再执行onLoad。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>他们的执行顺序是，onLaunch &gt; index onLoad &gt; login</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们希望的执行顺序是：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>onLaunch &gt; login &gt; index onLoad</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>解决办法</p><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">定义回调函数, onload里获取不到东西就一直获取，不执行下一步操作，直到获取到app.js的数据才继续执行。若login返回为空，则给app.js注册一个loginSuccessCallback回调，这个回调方法的执行时机，就是app.js中的异步请求完毕</li><li style=\"line-height: 1.7em;\">把 app.js 中的 onLaunch 中方法拿到 index.js 文件中，按照自己的逻辑写</li><li style=\"line-height: 1.7em;\">使用promise</li></ol><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>方法1：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>App({\r\n  <span class=\"hljs-attr\">onLaunch</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"></span>) </span>{\r\n    wx.login({\r\n      <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.globalData.checkLogin = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>;\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//由于这里是网络请求，可能会在 Page.onLoad 之后才返回</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 所以此处加入 callback 以防止这种情况</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.checkLoginReadyCallback){\r\n          <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.checkLoginReadyCallback(res);\r\n        }\r\n      }\r\n    })\r\n  },\r\n  <span class=\"hljs-attr\">globalData</span>: {\r\n    <span class=\"hljs-attr\">checkLogin</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n  }\r\n  \r\n  ...\r\n})\r\n \r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//index.js</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取应用实例</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> app = getApp()\r\n \r\nPage({\r\n  <span class=\"hljs-attr\">data</span>: {\r\n    <span class=\"hljs-attr\">test</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n  },\r\n  <span class=\"hljs-attr\">onLoad</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>;\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//判断onLaunch是否执行完毕</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (app.globalData.checkLogin){\r\n      that.setData({\r\n        <span class=\"hljs-attr\">test</span>:<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n      })\r\n    }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n      app.checkLoginReadyCallback = <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//登陆成功后自己希望执行的，和上面一样</span>\r\n        that.setData({\r\n          <span class=\"hljs-attr\">test</span>:<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n        })\r\n      };\r\n    }\r\n  }\r\n})</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>方法2：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>把 app.js 中的 onLaunch 中登陆后才执行的方法拿到 index.js 文件中，这是最简单的方法</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//index.js</span>\r\n\r\nonLoad: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"></span>) </span>{ \r\n    wx.login({\r\n      <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n        resolve(res); \r\n      }\r\n    })\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>方法3：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// app.js中定义一个新的方法</span>\r\nApp({\r\n  <span class=\"hljs-attr\">onLaunch</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"></span>) </span>{\r\n      ...\r\n  },\r\n  <span class=\"hljs-attr\">getAuthKey</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">argument</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Promise</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">resolve, reject</span>)</span>{\r\n        wx.login({\r\n          <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n            resolve(res); \r\n          }\r\n        })\r\n    })\r\n  }\r\n  ...\r\n  \r\n})\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//index.js</span>\r\nonLoad: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\"></span>) </span>{\r\n    ...\r\n        \r\n    app.getAuthKey().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">res</span>)</span>{\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'res'</span>)\r\n    })\r\n }</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>参考资料：\t<a href=\"https://blog.csdn.net/zuorishu/article/details/94441997\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">参考1</a> <a href=\"https://blog.csdn.net/vipbin520/article/details/84099338\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">参考2</a> <a href=\"https://blog.csdn.net/qq_34289109/article/details/88615276\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">参考3</a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3. fixed 元素 auto 必须要同时设置 top、left</h4><pre class=\"prettyprint hljs scss\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: fixed;\r\n<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">132</span>rpx;\r\n<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30</span>rpx;\r\n<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">690</span>rpx;\r\n<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span> auto;</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4.封装一个有输入框的modal层组件</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其实很简单，就是在modal中添加新的 input,</p><pre class=\"prettyprint hljs django\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">modal</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"modal\"</span> <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{!hiddenModal}}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span>\r\n     <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{title}}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span> <span class=\"hljs-attr\">confirm-text</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"确定\"</span> <span class=\"hljs-attr\">cancel-text</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"取消\"</span> <span class=\"hljs-attr\">bindconfirm</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"modalconfirm\"</span> <span class=\"hljs-attr\">bindcancel</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"modalcancel\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"input-line\"</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'请输入内容'</span> <span class=\"hljs-attr\">maxlength</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ maxlength }}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span> <span class=\"hljs-attr\">bindinput</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'input'</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"text\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"text\"</span>  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ textvalue }}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span> /&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ currentlength}}</span><span class=\"xml\">/</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ maxlength }}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">modal</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n\r\n.modal{\r\n    width: 540rpx;\r\n    max-width: 540rpx;\r\n    border-radius: 28rpx;\r\n    .input-line {\r\n        display: flex;\r\n        border: 2rpx solid rgba(0, 0, 0, 0.05);\r\n        font-size: 28rpx;\r\n        padding: 16rpx;\r\n        height: 40rpx;\r\n        line-height: 40rpx;\r\n    }\r\n    input,  text{\r\n        display: inline-block;\r\n        vertical-align: top;\r\n    }\r\n    input {\r\n        flex: 1;\r\n    }\r\n    text {\r\n        width: 90rpx;\r\n        color: #FFA004 ;\r\n    }\r\n}</span></pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>5.微信小程序去除button默认边框样式</h4><pre class=\"hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span><span class=\"hljs-selector-pseudo\" style=\"color: rgb(188, 96, 96);\">::after</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border</span>: none;\r\n}</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>6.小程序如何获取点击元素信息</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用驼峰模式，给点击元素绑定 data-\t<em>*</em> ，通过 event.currentTarget.dataset 获取</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;image src=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{ item.mini_pic }}\"</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span></span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{ item.show_opacity ? 'show_opacity' : ''}}\"</span> bindtap=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"tap\"</span> data-message=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{ item }}\"</span>&gt;\r\n<span class=\"xml\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 获取的点击节点元素是一个对象</span>\r\n tap: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">event</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> message = event.currentTarget.dataset.message;\r\n}</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>7. 小程序如何在页面间传递数组对象？</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>方法1：A页面跳转链接添加参数，B页面onLoad 接受</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>方法2：设置全局变量 globalData，用的少，一般适用于全局共享的一份信息，如用户open_id等</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// A页面</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 数组、对象都需要stringify</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> listData = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">JSON</span>.stringify(that.data.listData)\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> taskArray = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">JSON</span>.stringify(that.data.taskArray)\r\nwx.navigateTo({\r\n    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../workRecord/updateBatch?listData='</span> + listData + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'&amp;taskArray='</span> + taskArray \r\n})\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//B页面</span>\r\nonLoad: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">options</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> that = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> listData = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">JSON</span>.parse(options.listData)\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> taskArray = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">JSON</span>.parse(options.taskArray)\r\n}\r\n\r\n\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//A页面：</span>\r\napp.globalData.open_id = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">3</span>;\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//B页面：</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> lala = app.globalData.open_id;</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>8. 小程序如何批量上传图片</h4><pre class=\"hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">chooseImage</span>、的回调函数中，<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.uploadFile</span>\r\n    上传，更新进度</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>6. 其他</h3><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">封装http请求</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">class HTTP{</p><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>request({url,data={},method=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'POST'</span>, header={<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'content-type'</span>:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'application/json'</span>} }){\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> Promise((<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">resolve</span>, reject)=&gt;{\r\n                this._request(url,<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">resolve</span>,reject,data, method, header)\r\n            })\r\n        }\r\n        _request(url,<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">resolve</span>, reject, data={}, method=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'POST'</span>, header){\r\n            wx.request({\r\n                ur<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">l:url</span>,\r\n                method:method,\r\n                dat<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">a:data</span>,\r\n                header: header,\r\n                succes<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">s:</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>)=&gt;{\r\n                    const code = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.statusCode.toString()\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (code.startsWith(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'2'</span>) &amp;&amp; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data.errno == <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10000</span>){\r\n                        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">resolve</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data)\r\n                    }\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span>{\r\n                        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span> &amp;&amp; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data &amp;&amp; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data.errmsg) {\r\n                            this._show_error(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data.errmsg)\r\n                        }\r\n                        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n                            this._show_error(tips[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>])\r\n                        }\r\n                        console.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'错111111111'</span>)\r\n                        reject(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>)\r\n                    }\r\n                },\r\n                fai<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">l:</span>(err)=&gt;{\r\n                    reject(err)\r\n                    console.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'错22222222'</span>)\r\n                    this._show_error(tips[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>])\r\n                }\r\n            })\r\n    \r\n        }\r\n    \r\n        _show_error(tip){\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(!tip){\r\n                tip = tips[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>]\r\n            }\r\n            wx.showToast({\r\n                title: tip,\r\n                icon:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n                duration:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2000</span>\r\n            })\r\n        }\r\n    }</pre></li></ol> </td>", "pub_time": "2019-12-19 00:02", "author": "Rolan"}
{"title": "实战：在小程序中获取用户所在城市信息 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最近在做自己的<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>《看啥好呢》，这个小程序是使用云开发的方式开发的，功能特别简单，就是获取豆瓣、大麦网的数据展示，虽然功能简单，但还是记录下开发过程和一些技术点，大约会有两篇博文产出，这是第二篇。 <a href=\"https://github.com/dunizb/what-to-see-wxapp\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">GitHub地址</a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>背景</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在《看啥好呢》中有个本地好看 Tab，进去后会获取用户当前所在城市，然后显示该城市的数据，并且显示在导航栏和 Tab上。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序中，我们可以通过调用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.getLocation()</code> 获取到设备当前的地理位置信息，这个信息是当前位置的经纬度。如果我们想获取当前位置是处于哪个国家，哪个城市等信息，该如何实现呢？</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序中并没有提供这样的API，但是没关系，有 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.getLocation()</code> 得到的经纬度作为基础就够了，其他的，我们可以使用其他第三方地图服务可以来实现，比如腾讯地图或百度地图的API。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>所以整个步骤就是：</p><pre class=\"hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.getLocation</span>\r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">reverseGeocoder</span>(<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">options</span>:Object)\r\n</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>在小程序中获取当前的地理位置</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在小程序中，调用 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.getLocation.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">wx.getLocation</a> ，使用前需要用户授权 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scope.userLocation</code> ，代码如下</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>checkAuth(callback) {\r\n  wx.getSetting({\r\n    success(res) {\r\n      if (!res.authSetting\\[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'scope.userLocation'</span>\\]) {\r\n        wx.authorize({\r\n          scope: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'scope.userLocation'</span>,\r\n          success() {\r\n            wx.getLocation({\r\n              type: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wgs84'</span>, \r\n              success(res) {\r\n                callback(res.latitude, res.longitude)\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  })\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其中 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>type</code> 的取值可以为：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wgs84</code> 意思返回 gps 坐标</li><li style=\"line-height: 1.7em; list-style-type: disc;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>gcj02</code> 返回可用于 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.openLocation</code> 的坐标。</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>运行后会提示如下信息，还需要在 app.json 中配置 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>permission</code> 字段</p><p><a href=\"data/attachment/portal/201912/19/094045pyhissaqwawwuyzi.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/19/094045pyhissaqwawwuyzi.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>查询 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">文档</a> 后得知，得知需要如下配置</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"permission\"</span>: {\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"scope.userLocation\"</span>: {\r\n      <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"desc\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"你的位置信息将用于小程序位置接口的效果展示\"</span>\r\n    }\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>desc 用于在弹出的授权提示框中展示，如下</p><p><a href=\"data/attachment/portal/201912/19/094045x61f441cs9k4wwyw.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/19/094045x61f441cs9k4wwyw.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>允许后即可获取接口返回的信息，此过程会在右上角胶囊按钮上显示箭头图标</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">accuracy</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">65</span>\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">errMsg</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getLocation:ok\"</span>\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">horizontalAccuracy</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">65</span>\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">latitude</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30.25961</span>    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 纬度，范围为 -90~90，负数表示南纬</span>\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">longitude</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">120.13026</span>    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 经度，范围为 -180~180，负数表示西经</span>\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">speed</span>: \\-<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">verticalAccuracy</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">65</span>\r\n}</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>latitude</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>longitude</code> 即是我们需要的两个字段</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>腾讯地图接口逆地址解析</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以腾讯地图为例，我们可以去腾讯地图开放平台注册一个账号，然后在它的管理后台创建一个密钥(key)，以及进行KEY设置，按照 <a href=\"https://lbs.qq.com/qqmap_wx_jssdk/index.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">微信小程序JavaScript SDK</a> 入门及使用限制文档</p><p><a href=\"data/attachment/portal/201912/19/094046dor4go7tkstqsrtq.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/19/094046dor4go7tkstqsrtq.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在 KEY设置的启用产品中，勾选 WebServiceAPI，选择签名校验方式，因为我是使用云开发的方式，所以没有什么域名也没有授权IP。</p><p><a href=\"data/attachment/portal/201912/19/094046s0db496jbwb1pz3j.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/19/094046s0db496jbwb1pz3j.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这部分代码逻辑如下</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> QQMapWX <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../../scripts/qqmap-wx-jssdk.min.js'</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> qqmapsdk\r\nPage({\r\n    <span class=\"hljs-attr\">onLoad</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">options</span>) </span>{\r\n      <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 实例化API核心类</span>\r\n      qqmapsdk = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> QQMapWX({\r\n         <span class=\"hljs-attr\">key</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'开发密钥（key）'</span>    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填</span>\r\n      });\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.checkAuth(<span class=\"hljs-function\">(<span class=\"hljs-params\">latitude, longitude</span>) =&gt;</span> {\r\n         <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// https://lbs.qq.com/qqmap\\_wx\\_jssdk/method-reverseGeocoder.html</span>\r\n         qqmapsdk.reverseGeocoder({\r\n           <span class=\"hljs-attr\">sig</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'KEY设置中生成的SK字符串'</span>,    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 必填</span>\r\n            location: {latitude, longitude},\r\n            success(res) {\r\n                wx.setStorageSync(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'loca\\_city'</span>, res.result.ad\\_info.city)\r\n            },\r\n            fail(err) {\r\n               <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(err)\r\n               wx.showToast(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'获取城市失败'</span>)\r\n            },\r\n            complete() {\r\n               <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 做点什么</span>\r\n            }\r\n         })\r\n      })\r\n    }\r\n}）</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://lbs.qq.com/qqmap_wx_jssdk/method-reverseGeocoder.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">reverseGeocoder</a> 接口返回的结果，这里面的字段比较多，详细可以看接口文档，里面好几个字段可以取到城市，其中 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ad_info</code> 是行政区划信息，我就取这里面的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>city</code> 了。</p><p><a href=\"data/attachment/portal/201912/19/094046qa3qo0sqfowqlzl8.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/19/094046qa3qo0sqfowqlzl8.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>全文完。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>关注公众号，第一时间接收最新文章。如果对你有一点点帮助，可以点喜欢点赞点收藏，还可以小额打赏作者，以鼓励作者写出更多更好的文章。</p><p><a href=\"data/attachment/portal/201912/19/094144cfl9bxndi20p55pb.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/19/094144cfl9bxndi20p55pb.jpg\"></a></p> </td>", "pub_time": "2019-12-19 00:18", "author": "Rolan"}
{"title": "微信小程序文本展开/收起功能 ", "content": "<td id=\"article_content\"> \n                     \n                    <p data-anchor-id=\"4k2u\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'><b>微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>中，有时候文本需要实现这样的功能 </b><br>1、文本超过n行显示省略号 <br>2、省略时，显示 展开/收起 按钮 <br>3、文本不超过n行时，不显示省略号和展开/收起按钮 </p><p><a href=\"data/attachment/portal/201912/19/094908z1h1171pse21fgp2.gif\" target=\"_blank\"><img src=\"data/attachment/portal/201912/19/094908z1h1171pse21fgp2.gif\"></a></p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"3ioc\" id=\"实现思路\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>实现思路</h3><p data-anchor-id=\"mni6\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>文本过长显示省略号、展开和收起功能，通过css样式即可实现 <br>判断是否显示展开/收起按钮： <br>通过嵌套元素，可以实现text既显示省略号，其高度又是全显示时的高度 <br>通过SelectorQuery选择器，获取text及其父元素的高度，判断text高度是否超过其父元素高度，决定是否显示展开/收起按钮即可</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"r9rf\" id=\"代码\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>代码</h3><p data-anchor-id=\"v60v\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>wxss</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"8j37\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">frame </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  width</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  max</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">height</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">206rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  text</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">align</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  display</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">box</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  overflow</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> hidden</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  text</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">overflow</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> ellipsis</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  word</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">wrap</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">break</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">word</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  white</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">space</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> normal </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">!</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">important</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">line</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">clamp</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">3</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">box</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">orient</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> vertical</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">nofold </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  display</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> block</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  text</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">overflow</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> unset</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">line</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">clamp</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> unset</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  max</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">height</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> unset</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li></ol></pre><p data-anchor-id=\"o2lo\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>frame样式设置最大高度，超过3行后出现省略号。overflow为hidden，使得text的超出父元素部分隐藏掉。nofold样式则将最大高度、出现省略号的行数去除，以展示全文。</p><p data-anchor-id=\"f1ch\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>wxml</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"kqlg\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"frame\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">'frame {{fold == false ? \"nofold\":\"\"}}'</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;text</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"content\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">{{detail}}</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/text&gt;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/view&gt;</span></code></li></ol></pre><p data-anchor-id=\"5sev\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>wxml中，在view元素中嵌套text元素。样式写在view中，text不加任何样式（重要）。分别写上id，方便js代码获取其尺寸信息。 <br>javascript</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"il9b\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> query </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">createSelectorQuery</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">();</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">query</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">select</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'#content'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">).</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">boundingClientRect</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">();</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">query</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">select</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'#frame'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">).</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">boundingClientRect</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">();</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">query</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">exec</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">]</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&amp;&amp;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">].</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">height</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">].</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">height </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">].</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">height</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">self</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">setData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        fold</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">true</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">else</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">self</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">setData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        fold</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li></ol></pre><p data-anchor-id=\"04hc\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>js代码中，通过选择器获取两者的高度，如果text高度高于view，则说明有省略文本，显示展开/收起按钮。 <br>js的选择器如果是写在onshow/onload方法中，最好加上延迟，以防止出现判断时元素尚未渲染出来的情况。</p> </td>", "pub_time": "2019-12-19 00:44", "author": "Rolan"}
{"title": "基于微信小程序picker组件开发的时间自定义功能 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>背景需求：</p><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最近接了一个需求，需要做一个类似电影院的选座功能，不同的是需要自己选择日期，预定时间段，然后根据日期+时间段查询座位信息，结合图片说下需求。<p><a href=\"data/attachment/portal/201912/23/104906zvsl4zuzgcsq4vvv.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/104906zvsl4zuzgcsq4vvv.png\"></a></p></div><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>a、日期组件可选2天内（当天+第二天）。进入页面默认展示当天日期，预定开始时间为当前时间，预定结束时间为开始时间之后30分钟。</p><p><a href=\"data/attachment/portal/201912/23/104906dl83ris8d44831rb.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/104906dl83ris8d44831rb.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>b、日期确定后才能选择预定开始时间，开始时间以及结束时间我这边是固定的时间点（08:30-22:30）。开始时间分钟段以5分钟为倍数设置往后推算展示，其余时段不显示。如果当前时间为22:00，则不展示当天时间，自动切换到第二天。</p><p><a href=\"data/attachment/portal/201912/23/104906vfd2mtn5qpuhiasd.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/104906vfd2mtn5qpuhiasd.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>c、选择预定结束时间。结束时间已开始时间为标记，半小时为倍数生成规则，其余时段不显示。两个时间段确定以后算出预定时长（小时为单位），并调后端接口查询座位信息。</p> </td>", "pub_time": "2019-12-23 00:33", "author": "Rolan"}
{"title": "使用阿里云函数计算构建小程序 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在用户使用HyperMotion产品过程中，用户可以通过扫描产品中二维码方式，自助进行Licnese申请。用户提交申请后，请求将发送到钉钉流程中。完成审批后，后台服务将自动根据用户的特征码、申请的数量、可使用的时间将生成好的正式Licnese发送到客户的邮箱中。</p><p><a href=\"data/attachment/portal/201912/23/105850y9q9a6391wweb9aa.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/105850y9q9a6391wweb9aa.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在原有设计中，使用了Python Flask提供WEB界面，后台使用Celery异步的将用户请求发送至钉钉中，之后采用轮询方式监控审批工单状态，当工单完成审批后，将生成好的License发送至客户提供的邮箱中。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实现的效果：</p><p><a href=\"data/attachment/portal/201912/23/105842c46336rub6z4ge3s.jpeg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/105842c46336rub6z4ge3s.jpeg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这种方式虽然可以满足需求，但是在使用过程中也发现有如下痛点：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1、由于对于可用性要求比较高，所以将整套应用以容器化方式部署在云主机上，程序高可用性依赖于底层的平台，基于成本考虑并没有在多可用区进行部署。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2、当业务变化时，需要专人将容器从本地容器库上传后进行更新，更新速度慢，敏捷性低。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>3、需要专人对操作系统层进行维护，并且由于该云主机还运行了其他程序，所以管控上也存在安全风险。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>基于以上出现的问题，决定对原有二维码程序进行重构，并重新部署在阿里云函数计算服务上。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1、第一阶段的改造主要是将二维码扫描程序移植到函数计算服务中。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2、第二阶段的改造主要是将发送二维码程序改造为函数计算服务，使用钉钉流程接口中的Callback方法调用该接口，在审批结束后触发发送License流程。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2、函数计算服务——无服务，零运维</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最早接触Serverless的雏形是在2011年开发Cloud Foundry项目时，当时留下一个非常深的印象就是把写好的应用直接上传就完成了部署、扩展等。但是当时Cloud Foundry有一个非常大的局限性，受限于几种开发语言和框架。记得当时的Cloud Foundry只支持Node.js、Python、Java、PHP、Ruby on Rails等，脱离了这个范围则就无法支持，所以当时我其实对这种形态的应用场景存在很大的疑问。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这种困惑直到2013年Docker的出现而逐步解开，Docker的出现让开发语言、框架不再是问题，巧妙的解决了Cloud Foundry上述局限性。但是Docker毕竟只是一种工具形态，还不能称得上是平台，紧接着k8s的出现弥补了这一空白，使得Docker从游击队变成了正规军。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在这个发展过程中我们不难看出，软件领域发展出现了重大变革，从服务器为王逐渐演进到应用为王的阶段。如果说虚拟化改变了整个物理机的格局，那么无服务化的出现则改变了整个软件开发行业。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于网上各种文档太多了，这里就不对Serverless基本概念进行介绍了，借用一张图说明下。另外还有一点，我们从这里面看到IT行业里的某些岗位，注定要消失的，比如传统运维。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'></h2><p><a href=\"data/attachment/portal/201912/23/105850nz7j457xj8sij1xz.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/105850nz7j457xj8sij1xz.png\"></a></p>3、应用架构<p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>整个架构上，分为两个函数计算服务完成：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">二维码前端：主要用于显示页面，并承担HTTP请求转发代理的角色，将请求转发至二维码后端，发给钉钉，采用HTTP触发器，允许公网访问。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">二维码后端：用于将用户请求发送给钉钉，该部分服务仍然采用HTTP触发器，不同于前端，该服务是不允许公网直接访问的，但是需要配置NAT网关，通过网关访问钉钉，实现固定IP访问钉钉的效果。</li></ul><p><a href=\"data/attachment/portal/201912/23/105920f0hgz10cayec1u4x.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/105920f0hgz10cayec1u4x.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>从逻辑上讲，整个应用并不复杂，但是在实际使用时遇到最大的问题来自钉钉白名单。由于函数服务对外连接的IP并不固定，所以无法在钉钉中添加，那么就要求函数服务对外连接的IP地址一定要固定。社区中提供的方法主要分为：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">ECI（运行Nginx充当Proxy），优势是便宜，劣势是高可用性需要自己维护</li><li style=\"line-height: 1.7em; list-style-type: disc;\">NAT网关，优势是高可用性，劣势是比ECI贵</li></ul><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4、构建过程</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于篇幅原因，这里只介绍关键步骤。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4.1 构建模板</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为了后续管理和扩展方便，选用了阿里云函数计算中使用flask-web模板进行构建，同时可以将前端静态文件模板存放于项目下（出于统一管理的需要，也可以存放于阿里云的OSS中，作为静态网站发布）。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>前端我们使用flask-web作为模板创建函数，后端我们直接采用最简单的HTTP函数。</p><p><a href=\"data/attachment/portal/201912/23/105850xoxocx1lgchrrohf.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/105850xoxocx1lgchrrohf.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>函数入口配置，及触发器配置：</p><p><a href=\"data/attachment/portal/201912/23/105850e8rh8f1xozys1fhz.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/105850e8rh8f1xozys1fhz.png\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>服务配置，包含公网访问权限，专有网络配置，日志配置，权限配置。</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">前端服务需要公网访问权限，不需要专有网络配置，需要的权限为：AliyunLogFullAccess。</li><li style=\"line-height: 1.7em; list-style-type: disc;\">后端服务不需要公网访问权限，但是需要配置好的NAT映射的专有网络，由于函数服务在北京2区中在cn-beijing-c和cn-beijing-f，所以在新建交换机时需要使用这两个区。还需要选择安全组，由于出方向并没有明确禁止，所以不需要特别的安全组规则设定。需要的权限为：AliyunLogFullAccess/AliyunECSNetworkInterfaceManagementAccess。</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>配置好后，通过导出功能，分别下载前端和后端代码和配置，在本地进行开发调试。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'></h2><p><a href=\"data/attachment/portal/201912/23/105851svda4h7q494i9qzf.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/23/105851svda4h7q494i9qzf.png\"></a></p>4.2 前端开发<p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们的前端采用Vue.js进行开发，在main.py同级新建templates目录。Vue编译好的静态文件可以放入该目录中，后续Flask会加载该文件作为入口文件。</p><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs delphi\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>├── templates\r\n│   ├── <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">index</span>.html\r\n│   ├── <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span>\r\n├── main.py\r\n</pre></div></div><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs python\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\"># main.py sample</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> flask <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> render_template\r\n\r\nLICENSE_URL = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://[x](https://.cn-beijing-internal.fc.aliyuncs.com/2016-08-15/proxy/QR_code/apply_license/license)x[x](https://xx.cn-beijing-internal.fc.aliyuncs.com/2016-08-15/proxy/QR_code/apply_license/license)x[x](https://xxxx.cn-beijing-internal.fc.aliyuncs.com/2016-08-15/proxy/QR_code/apply_license/license)x[x](https://xxxxxx.cn-beijing-internal.fc.aliyuncs.com/2016-08-15/proxy/QR_code/apply_license/license).cn-beijing-internal.fc.aliyuncs.com/2016-08-15/proxy/QR_code/apply_license/license\"</span>\r\n\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@app.route('/qr_code', methods=['GET'])</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">def</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">index</span><span class=\"hljs-params\">()</span>:</span>\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> render_template(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'index.html'</span>)\r\n\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">      @app.route('/qr_code/license', methods=['POST'])</span>\r\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">def</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">create</span><span class=\"hljs-params\">()</span>:</span>\r\n            payload = request.json\r\n                resp = requests.post(LICENSE_URL,\r\n                                                 json=payload,\r\n                                                                              headers=DEFAULT_HEADERS)\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> make_response(resp.text, resp.status_code)\r\n</pre></div></div><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4.3 后端开发</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>后端的开发较为简单，实现一个函数支持POST请求，将转发的结果发送至钉钉即可。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4.4 本地调试</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>阿里云在本地开发时提供了fun应用部署和开发工具，详细使用方法见： <a href=\"https://help.aliyun.com/document_detail/64204.html\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://help.aliyun.com/document_detail/64204.html</a> 。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>安装fun</h3><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs markdown\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>npm config set registry [<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">https://registry.npm.taobao.org</span>](<span class=\"hljs-link\" style=\"color: rgb(188, 96, 96);\">https://registry.npm.taobao.org/</span>) --global\r\nnpm config set disturl [<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">https://npm.taobao.org/dist</span>](<span class=\"hljs-link\" style=\"color: rgb(188, 96, 96);\">https://npm.taobao.org/dist</span>) --global\r\n\r\nnpm install @alicloud/fun -g\r\n</pre></div></div><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>配置fun</h3><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\"><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">fun</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">config</span></span>\r\n\r\n(venv) [<span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">root@</span>ray-dev test_func]# <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">fun</span> config</span>\r\n? Aliyun Account ID xxxxxxxx\r\n? Aliyun Access Key ID ***********r5Qd\r\n? Aliyun Access Key Secret ***********kCCi\r\n? Default region name cn-beijing\r\n? The timeout <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">in</span> seconds <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> each SDK client invoking <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>\r\n? The maximum number of retries <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> each SDK client <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">3</span>\r\n? Allow to anonymously report usage statistics to improve the tool over time? Yes\r\n</pre></div></div><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Http Trigger本地运行</h3><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\"><pre class=\"hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">fun</span> local start</span>\r\n</pre></div></div><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>部署</h3><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\"><pre class=\"hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">fun</span> deploy</span>\r\n</pre></div></div><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4.5 配置域名解析</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>部署完成后有一点需要特别注意，必须要绑定域名，并且设定必要的路由。如果在没有绑定域名的情况下，服务端会为 response header中强制添加 content-disposition: attachment字段，此字段会使得返回结果在浏览器中以附件的方式打开。（ <a href=\"https://www.alibabacloud.com/help/zh/doc-detail/56103.htm\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://www.alibabacloud.com/help/zh/doc-detail/56103.htm</a> ）</p> </td>", "pub_time": "2019-12-23 00:43", "author": "Rolan"}
{"title": "如何使用不到50行代码实现一个小而美的依赖收集库？ ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>现代web开发，大多数都遵循着视图与逻辑分离的开发原则，一反面使得代码更加易懂且易扩展，另一方面带来的问题就是如何优雅的管理数据。因而，社区诞生了很多优秀的状态管理库，比如为React而生的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Redux</code> ，专为 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Vue</code> 服务的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Vuex</code> ，还有不限定框架的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Mobx</code> 等等。在为使用这些库提升开发效率而叫好的同时，我觉得我们也应该从内部去真正的了解它们的核心原理，就比如今天这篇文章的主题 <strong style=\"text-indent: 0px;\">依赖收集</strong> ，就是其中的一个很大的核心知识。这篇文章将会带您一步一步的以最少的代码去实现一个小而美的依赖收集库，同时给您展现如何将这个库运用到<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>中去实现跨页面的状态共享。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>二 实现过程</h2><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1. 基本原理</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>依赖收集的基本原理可以概括为以下3步：</p><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">创建一个可观察（observable）对象</li><li style=\"line-height: 1.7em;\">视图或者函数（effect）引用这个对象的某个属性，触发依赖收集</li><li style=\"line-height: 1.7em;\">改变数据，视图或者函数自动更新或运行</li></ol><p><a href=\"data/attachment/portal/201912/02/100919ajnvqjxdwdjkyxnw.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/02/100919ajnvqjxdwdjkyxnw.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们要实现的例子：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> { observable, observe } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"micro-reaction\"</span>;\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> ob = observable({\r\n    <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>\r\n});\r\n\r\nobserve(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(ob.a));\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// logs: 1</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// logs: 2</span>\r\nob.a = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>;\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下面开始我将一步一步的进行实现过程讲解</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2. 创建一个可观察对象</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先，我们需要创建一个可观察对象，其本质就是将传入的对象进行代理，并且返回这个代理对象，这里我们使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>es6</code> 的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Proxy</code> 来修改对象的一些行为，从而实现在返回真正对象前作一些拦截操作。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们定义了一个名叫 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observable</code> 方法来代理对象，代码如下：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">observable</span>(<span class=\"hljs-params\">obj = {}</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> createObservable(obj)\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">createObservable</span>(<span class=\"hljs-params\">obj</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> proxyObj = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Proxy</span>(obj, handlers());\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> proxyObj\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以看到 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observable</code> 方法内部就是通过 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>new Proxy（obj,handler）</code> 生成一个代理对象，传参分别是原始对象和代理操作方法 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>handlers</code> ， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>handlers</code> 返回一个对象，定义了对象的原始方法，例如 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>get</code> 、 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>set</code> ，通过重新定义这两个方法，我们可以修改对象的行为，从而完成代理操作，我们来看看 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>handlers</code> 方法。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handlers</span>(<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n        <span class=\"hljs-attr\">get</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">target, key, receiver</span>) =&gt;</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> result = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Reflect</span>.get(target, key, receiver);\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> result\r\n        },\r\n        <span class=\"hljs-attr\">set</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">target, key, value, receiver</span>) =&gt;</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> result = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Reflect</span>.set(target, key, value, receiver);\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> result\r\n        }\r\n    }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如上，我们在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>get</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>set</code> 方法里面没有做任何操作，取值赋值操作都是原样返回。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>3. 关联副作用函数effect</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>完成了对数据的初始定义，我们明确下我们的目的，我们的最终目的是数据改变，副作用函数 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>effect</code> 自动运行，而这其中的关键就是必须有个地方引用我们创建的代理对象，从而触发代理对象内部的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>get</code> 或者 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>set</code> 方法，方便我们在这两个方法内部做一些依赖收集和依赖执行的工作。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>因而，这里我们定义了一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observe</code> 方法，参数是一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Function</code> ，我们先看看这个方法的实现：</p><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>export function observe(fn) {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!--这一行可以先忽略，后面会有介绍--&gt;</span>\r\n    storeFns.push(fn);\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!--Reflect.apply()就相当于fn.call(this.arguments)--&gt;</span>\r\n    Reflect.apply(fn, this, arguments)\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以看到，内部执行了传入的函数，而我们传入的函数是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>() =&gt; console.log(ob.a.b)</code> ，函数执行，输出 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ob.a</code> ，引用了代理对象的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>a</code> 属性值，就触发了代理对象内部的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>get</code> 方法。 在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>get</code>方法内部我们就可以进行依赖收集。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handlers</span>(<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n        <span class=\"hljs-attr\">get</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">target, key, receiver</span>) =&gt;</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> result = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Reflect</span>.get(target, key, receiver);\r\n            <span class=\"xml\"><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!--触发依赖收集--&gt;</span>\r\n            depsCollect({ target, key })\r\n            return result\r\n        },\r\n        set: (target, key, value, receiver) =&gt; {\r\n            const result = Reflect.set(target, key, value, receiver);\r\n            return result\r\n        }\r\n    }\r\n}\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>depsCollect</code> 依赖收集方法需要做的操作就是将当前的依赖也就是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>() =&gt; console.log(ob.a)</code>这个函数 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>fn</code> 保存起来，那 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>fn</code> 怎么传过来呢？ <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>get</code> 方法本身的入参是没有这个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>fn</code> 的，回顾之前的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observe</code> 方法，这个方法有传入 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>fn</code> ，其中内部有个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>storeFns.push(fn)</code> 这样的操作，就是通过一个数组将当前依赖函数临时收集起来。可光收集没用，我们还要和对应的属性进行映射，以便后续某个属性变化时，我们能够找出对应的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>effect</code> ，故我们定义了一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Map</code> 对象来存储相应的映射关系，那需要怎样的一个映射关系呢？一个对象有多个属性，每个属性可能都有对应的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>effect</code> ，结构看起来应该是这样的：</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">obj</span>:{\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"key-1\"</span>:fn1,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"key-2\"</span>:fn2,\r\n        ....\r\n    }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们定义了一个全局变量 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>storeReactions</code> 来存储整个映射关系，它的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>key</code> 是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>obj</code> ，就是原始对象， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>obj</code> 的值也是个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Map</code> 结构，存储了其属性和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>effect</code> 的映射关系。我们的最终目的其实也就是建立一个这样的关系。理清楚了数据存储，再来看看我们的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>depsCollect</code> 方法，其实就是将临时保存在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>storeFns</code> 里面的函数取出和属性 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>key</code> 映射。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 存储依赖对象</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> storeReactions = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">WeakMap</span>();\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 中转数组，用来临时存储当前可观察对象的反应函数，完成收集之后立即释放</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> storeFns = [];\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">depsCollect</span>(<span class=\"hljs-params\">{ target, key }</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> fn = storeFns[storeFns.length - <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>];\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (fn) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> mapReactions = storeReactions.get(target);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!mapReactions.get(key)) {\r\n            mapReactions.set(key, fn)\r\n        }\r\n    }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>至此，我们的依赖收集算是完成了，接下来就是要实现如何监听数据改变，对应 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>effect</code> 自动运行了。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>4. 数据变更，effect自动运行</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>数据变更，就是重新设置数据，类似 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>a=2</code> 的操作，就会触发代理对象里面的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>set</code> 方法，我们只需要在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>set</code> 方法里面取出对应的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>effect</code> 运行即可。</p><pre class=\"prettyprint hljs cs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">set</span>: (target, key, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">value</span>, receiver) =&gt; {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> result = Reflect.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">set</span>(target, key, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">value</span>, receiver);\r\n        executeReactions({ target, key })\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> result\r\n    }\r\n    \r\n<span class=\"hljs-function\">function <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">executeReactions</span>(<span class=\"hljs-params\">{ target, key }</span>) </span>{\r\n    &lt;!-- 一时看不懂的，回顾下我们的映射关系 --&gt;\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> mapReactions = storeReactions.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>(target);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (mapReactions.has(key)) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> reaction = mapReactions.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>(key);\r\n        reaction();\r\n    }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>ok，我们的例子的实现过程讲解完了，整个实现过程还是很清晰的，最后看看我们的整个代码，去掉空行不到50行代码。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> storeReactions = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">WeakMap</span>(),storeFns = [];\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">observable</span>(<span class=\"hljs-params\">obj = {}</span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> proxyObj = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Proxy</span>(obj, handlers());\r\n  storeReactions.set(obj, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Map</span>());\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> proxyObj\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">observe</span>(<span class=\"hljs-params\">fn</span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (storeFns.indexOf(fn) === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">-1</span>) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n      storeFns.push(fn);\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Reflect</span>.apply(fn, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">arguments</span>)\r\n    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">finally</span> {\r\n      storeFns.pop()\r\n    }\r\n  }\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handlers</span>(<span class=\"hljs-params\"></span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n    <span class=\"hljs-attr\">get</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">target, key, receiver</span>) =&gt;</span> {\r\n      depsCollect({ target, key })\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Reflect</span>.get(target, key, receiver)\r\n    },\r\n    <span class=\"hljs-attr\">set</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">target, key, value, receiver</span>) =&gt;</span> {\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Reflect</span>.set(target, key, value, receiver)\r\n      executeReactions({ target, key })\r\n    }\r\n  }\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">depsCollect</span>(<span class=\"hljs-params\">{ target, key }</span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> fn = storeFns[storeFns.length - <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>];\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (fn) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> mapReactions = storeReactions.get(target);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!mapReactions.get(key)) {\r\n      mapReactions.set(key, fn)\r\n    }\r\n  }\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">executeReactions</span>(<span class=\"hljs-params\">{ target, key }</span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> mapReactions = storeReactions.get(target);\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (mapReactions.has(key)) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> reaction = mapReactions.get(key);\r\n    reaction();\r\n  }\r\n}\r\n复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>5. 多层级数据结构</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>到目前为止，我们实现的还只能观察单级的对象，如果一个对象的层级深了，类似 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ob.a.b</code> 的结构，我们的库就无法观察数据的变动， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>effect</code> 也不会自动运行。那如何支持呢？核心原理就是在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>get</code> 方法里面判断返回的值，如果返回的值是个对象，就递归调用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observable</code> 方法，递归调用完，接着运行 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observe</code> 方法就会构建出完整的一个属性 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>key</code> 和反应 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>effect</code> 的映射关系。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handlers</span>(<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n        <span class=\"hljs-attr\">get</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">target, key, receiver</span>) =&gt;</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> result = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Reflect</span>.get(target, key, receiver);\r\n            depsCollect({ target, key })\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">typeof</span> result === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'object'</span> &amp;&amp; result != <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span> &amp;&amp; storeFns.length &gt; <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> observable(result)\r\n            }\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> result\r\n        }\r\n    }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>回到 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ob.a.b</code> 这样的结构，此时实际的代理对象应该是这样的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>{proxy(proxy(c))}</code> ，如果这个时候我们去修改数据，比如 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ob.a.b = 2</code> 这样。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ob.a.b = 2</code> 的运行过程会是怎样？要知道js这门语言是先编译后执行的，所以js引擎首先会去分析这段代码（编译阶段），先分析左边的表达式 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ob.a.b</code> ，故先会编译 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ob.a</code> ，触发了第一次 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>get</code> 方法，在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>get</code> 方法中， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>result</code> 得到的值是个对象，如果按照上述代码，又去重新观察这个对象，会导致 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observe</code> 方法中构建好的映射关系丢失，其中就是对象 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>{b:1}</code> 中 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>key</code> 为 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>b</code> 对应的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>fn</code> 丢失，因为我们存储 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>fn</code> 是在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observe</code> 方法中执行的，那怎么办呢？方法是我们应该在第一次 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observable</code> 方法执行的时候，将每一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>key</code> 对应的代理对象都保存起来，在赋值操作再一次触发 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>get</code> 方法的时候，如果已经代理过，直接返回就行，不需要重新代理。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 存储代理对象</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> storeProxys = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">WeakMap</span>();\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">observable</span>(<span class=\"hljs-params\">obj = {}</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> storeProxys.get(obj) || createObservable(obj)\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">createObservable</span>(<span class=\"hljs-params\">obj</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> proxyObj = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Proxy</span>(obj, handlers());\r\n    storeReactions.set(obj, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Map</span>())\r\n    storeProxys.set(obj, proxyObj)\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> proxyObj\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">handlers</span>(<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n        <span class=\"hljs-attr\">get</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">target, key, receiver</span>) =&gt;</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> result = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Reflect</span>.get(target, key, receiver);\r\n            depsCollect({ target, key })\r\n            &lt;!--如果代理存储中有某个key对应的代理直接返回即可--&gt;\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> observableResult = storeProxys.get(result);\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">typeof</span> result === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'object'</span> &amp;&amp; result != <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span> &amp;&amp; storeFns.length &gt; <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> observable(result)\r\n            }\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> observableResult || result\r\n        }\r\n    }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如此， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ob.a.b = 2</code> ，控制台就会依次输出 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>1</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>2</code> ，另外说一句，数组也是对象，故动态增加数组的值或者赋值操作都能触发响应的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>effect</code> 。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> ob = observable({\r\n  <span class=\"hljs-attr\">a</span>: {\r\n    <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>,\r\n    <span class=\"hljs-attr\">c</span>: []\r\n  }\r\n});\r\n\r\nobserve(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(ob.a.c.join(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\", \"</span>)));\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//logs: 2</span>\r\nob.a.c.push(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>);\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>三 如何结合小程序使用</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>全部完整代码我已发布到我的github中，名字叫做 <a target=\"_blank\" href=\"https://github.com/simplefeel/micro-reaction\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">micro-reaction</a> ，这个库完全无依赖的，纯粹的，故可以为其它界面框架状态管理提供能量，由于小程序跨页面状态共享相关的库不多，故这里以小程序举例，如何结合 <a target=\"_blank\" href=\"https://github.com/simplefeel/micro-reaction\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">micro-reaction</a> 实现跨页面状态共享。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1. 核心原理</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>描述下场景，有两个页面 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>A</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>B</code> ，全局数据 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>C</code> ， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>A</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>B</code> 都引用了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>C</code> ，之后，页面 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>A</code> 中某个交互改变了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>C</code> ， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>A</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>B</code> 都需要自动渲染页面。结合我们的库， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>C</code> 肯定是需要 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observable</code>的， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observe</code> 方法传入的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>fn</code> 是会动态执行的，小程序渲染页面的方式是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>setData</code> 方法，故 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observe</code> 方法里面肯定执行了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>setData()</code> ，因而只要我们在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observe</code> 方法里面引用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>C</code> ，就会触发依赖收集，从而在下次 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>C</code> 改变之后， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>setData</code> 方法重新运行渲染页面。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2. 关键步骤</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先，我们需要拿到每个小程序页面的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>this</code> 对象，以便自动渲染使用，故我们需要代理 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Page</code>方法里面传入的参数，我们定一个了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>mapToData</code> 方法来代理，代码如下：</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!--全局数据--&gt;</span>\r\nimport homeStore from \"../../store\"\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!--将数据映射到页面，同时出发依赖收集，保存页面栈对象--&gt;</span>\r\nimport </span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{ mapToData }</span><span class=\"xml\"> from \"micro-reaction-miniprogram\"\r\nconst connect = mapToData((store) =&gt; (</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{ count: store.credits.count }</span><span class=\"xml\">), 'home')\r\n\r\nPage(connect(</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{\r\n  onTap(e) {\r\n    homeStore.credits.count++\r\n  }</span><span class=\"xml\">,\r\n  onJump(e) </span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{\r\n    wx.navigateTo({\r\n      url: \"/pages/logs/logs\"\r\n    }</span><span class=\"xml\">)\r\n  }\r\n}))\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>mapToData</code> 方法返回一个函数， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>function mapToData(fn,name){return function(pageOpt){}}</code>，这里用到了闭包，外部函数为我们传入的函数，作用是将全局数据映射到我们的页面 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>data</code> 中并触发依赖收集，内部函数传入的参数为小程序页面本身的参数，里面包含了小程序的生命周期方法，因而我们就可以在内部重写这些方法，并拿到当前页面对象并存储起来供下一次页面渲染使用。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> { STORE_TREE } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"./createStore\"</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> { observe, observable } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'micro-reaction'</span>;\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">mapToData</span>(<span class=\"hljs-params\">fn, name</span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">pageOpt</span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> { onLoad } = pageOpt;\r\n    pageOpt.onLoad = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">opt</span>) </span>{\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> self = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> dataFromStore = fn.call(self, STORE_TREE[name], opt)\r\n      self.setData(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.assign({}, self.data, dataFromStore))\r\n\r\n      observe(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n        &lt;!--映射方法执行，触发依赖收集--&gt;\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> dataFromStore = fn.call(self, STORE_TREE[name], opt)\r\n        self.setData(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Object</span>.assign({}, self.data, dataFromStore))\r\n      })\r\n\r\n      onLoad &amp;&amp; onLoad.call(self, opt)\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> pageOpt\r\n  }\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> { mapToData, observable }\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后，页面 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>A</code> 改变了数据 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>C</code> ， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>observe</code> 方法参数 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>fn</code> 自动执行，触发 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>this.setData</code> 方法，从而页面重新渲染，完整代码点击 <a target=\"_blank\" href=\"https://github.com/simplefeel/micro-reaction-miniprogram\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">micro-reaction-miniprogram</a> ，也可以点击查看 <a target=\"_blank\" href=\"https://si.geilicdn.com/img-42df0000016eaab674490a21924a-unadjust_375_716.gif\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">在线Demo</a>。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>四 总结</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>希望我的文章能够让您对依赖收集的认识更深，以及如何举一反三的学会使用，此外，最近在学习周爱民老师的《JavaScript核心原理解析》这门课程，其中有句话对我触动很深，引用的是金庸射雕英雄传里面的文本： <strong style=\"text-indent: 0px;\">教而不得其法，学而不得其道</strong> ，意思就是说，传授的人没有用对方法，学习的人就不会学懂，其实我自己对学习的方法也一直都很困惑，前端发展越来越快，什么 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>SSR</code> ，什么 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>serverless</code> ，什么 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>前端工程化</code> ，什么 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>搭建系统</code> 各种知识概念越来越多，不知道该怎么学习，说不焦虑是不可能的，但坚信只有一个良好的基础，理解一些技术的本质，才能在快速发展的前端技术浪潮中，不至于被冲走，与局共勉！</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最后，在贴下文章提及的两个库，欢迎star试用，提pr，感谢~</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>依赖收集库 <a target=\"_blank\" href=\"https://github.com/simplefeel/micro-reaction\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">micro-reaction</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序状态管理库 <a target=\"_blank\" href=\"https://github.com/simplefeel/micro-reaction-miniprogram\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">micro-reaction-miniprogram</a></p> </td>", "pub_time": "2019-12-2 00:02", "author": "Rolan"}
{"title": "小程序图像处理：图片配色分析 ", "content": "<td id=\"article_content\"> \n                     \n                    <h1 class=\"heading\" data-id=\"heading-0\">背景</h1>\r\n<p><a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的canvas是微信基于原生组件自行封装的，因此接口跟web的canvas有不少区别，早期更是没有支持像素级的处理能力。<br>\r\n在18年初的小程序基础库1.9.0版本更新中，出现了<code>wx.canvasGetImageData和wx.canvasPutImageData</code>两个重要的API，补全了像素处理能力，因此，小程序在客户端进行图片处理成为了可能。<br>\r\n具体可以参考：<br>\r\n<a target=\"_blank\" href=\"https://cloud.tencent.com/developer/article/1101033\" rel=\"nofollow noopener noreferrer\">偷偷迭代的重磅功能---小程序的像素处理能力</a><br>\r\n<a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.canvasGetImageData.html\" rel=\"nofollow noopener noreferrer\">wx.canvasGetImageData</a></p>\r\n<h1 class=\"heading\" data-id=\"heading-1\">图片配色分析小程序：小色卡</h1>\r\n<p>为了尝试小程序的图像处理能力，我做了个用于图片配色分析的小程序-小色卡。<br>\r\n功能主要是：用户选择一张图片，程序会分析图片的配色，并把配色展示为一张色卡给用户。用户可以保存、编辑、复制自己的色卡。这个功能对初级的UI设计师有一定的帮助（可能吧...）。<br>\r\n源码：<a target=\"_blank\" href=\"https://github.com/javanli/mini-color-card\" rel=\"nofollow noopener noreferrer\">github：mini-color-card</a><br>\r\n体验小程序：<br>\r\n</p><figure><p><a href=\"data/attachment/portal/201912/02/101211dhs7vvvjjhabheja.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/02/101211dhs7vvvjjhabheja.jpg\"></a></p><figcaption></figcaption></figure><p></p>\r\n<h2 class=\"heading\" data-id=\"heading-2\">原理</h2>\r\n<p>小程序实现配色分析主要步骤如下：</p>\r\n<ol>\r\n<li>用户选择图片，拿到imgPath后绘制到canvas上。</li>\r\n<li>通过wx.canvasGetImageData这个接口读取图片数据</li>\r\n<li>对图片数据进行预处理，剔除alpha比较小并且不是白色的点。（非必要）</li>\r\n<li>对图片像素数据进行聚类。每个像素的颜色可以作为一个三维向量来看。</li>\r\n</ol>\r\n<p>基本逻辑如下：</p>\r\n<pre><code class=\"hljs bash copyable\" lang=\"bash\">wx.chooseImage({\r\n  count: 1,\r\n  sizeType: [<span class=\"hljs-string\">'original'</span>, <span class=\"hljs-string\">'compressed'</span>],\r\n  <span class=\"hljs-built_in\">source</span>Type: [<span class=\"hljs-string\">'album'</span>, <span class=\"hljs-string\">'camera'</span>],\r\n  success: (res) =&gt; {\r\n    wx.getImageInfo({\r\n      src: res.tempFilePaths[0],\r\n      success: (imgInfo) =&gt; {\r\n        <span class=\"hljs-built_in\">let</span> {\r\n          width,\r\n          height,\r\n          imgPath\r\n        } = imgInfo;\r\n        <span class=\"hljs-built_in\">let</span> ctx = wx.createCanvasContext(this.canvasID);\r\n        ctx.drawImage(imgPath,0,0,width,height);\r\n        ctx.draw(<span class=\"hljs-literal\">false</span>,()=&gt;{\r\n          wx.canvasGetImageData({\r\n            canvasId: this.canvasID,\r\n            x: 0,\r\n            y: 0,\r\n            width: width,\r\n            height: height,\r\n            success(res) {\r\n              var pixels = res.data;\r\n              var pixelCount = width*height;\r\n              var pixelArray = [];\r\n              // 对像素数据进行预处理\r\n              <span class=\"hljs-keyword\">for</span> (var i = 0, offset, r, g, b, a; i &lt; pixelCount; i = i + quality) {\r\n                offset = i * 4;\r\n                r = pixels[offset + 0];\r\n                g = pixels[offset + 1];\r\n                b = pixels[offset + 2];\r\n                a = pixels[offset + 3];\r\n                <span class=\"hljs-keyword\">if</span> (a &gt;= 125) {\r\n                  <span class=\"hljs-keyword\">if</span> (!(r &gt; 250 &amp;&amp; g &gt; 250 &amp;&amp; b &gt; 250)) {\r\n                    pixelArray.push([r, g, b]);\r\n                  }\r\n                }\r\n              }\r\n              var cmap = MMCQ.quantize(pixelArray, colorCount);//聚类，MMCQ是个用于图像分析的库\r\n              var palette = cmap ? cmap.palette() : null;\r\n              console.log(<span class=\"hljs-string\">'配色为：'</span>,palette);\r\n            }\r\n          })\r\n        })\r\n      }\r\n    })\r\n  }\r\n})\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><h1 class=\"heading\" data-id=\"heading-3\">小结</h1>\r\n<p>一开始我是不想把canvas显示出来的，只想用它获取图像内容，但是实践下来是不可行的。小程序的canvas并不允许离屏渲染，想要用它进行图片处理，就要老老实实用它进行展示。<br>\r\n这里只实践了<code>wx.canvasGetImageData</code>读取数据进行图像分析，不过结合<code>wx.canvasPutImageData</code>，滤镜之类的图像处理应该都是可以做了。小程序的想象空间还是挺大的。</p> </td>", "pub_time": "2019-12-2 00:10", "author": "Rolan"}
{"title": "微信小程序把base64的图片保存到手机相册 ", "content": "<td id=\"article_content\"> \n                     \n                    <div class=\"article_body\" id=\"nei\" style='padding: 20px 5px 25px; margin-bottom: 0px; overflow-x: hidden; word-wrap: break-word; word-break: break-all; min-height: 340px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif;'><div style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\"><br></p><pre class=\"prettyprint hljs php\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> file = wx.getFileSystemManager();\r\nconsole.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'1'</span>)\r\nfile.writeFile({\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//读写文件路径filePath需要使用wx.env.USER_DATA_PATH + '/tmp.txt'才可以读写成功。</span>\r\n    filePath:  wx.env.USER_DATA_PATH + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/poster.png'</span>,\r\n    data: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.preurl.slice(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">22</span>),\r\n    encoding:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'base64'</span>,\r\n    success:async()=&gt;{\r\n        console.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'123'</span>)\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> res2 = await wepy.saveImageToPhotosAlbum({\r\n            filePath: wx.env.USER_DATA_PATH + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/poster.png'</span>\r\n        })\r\n        wepy.$toast(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'图片已保存到相册，赶紧晒一下吧~'</span>)\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.isShow = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">false</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">self</span>.$apply();\r\n    },\r\n    fail:<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span><span class=\"hljs-params\">(e)</span></span>{\r\n        console.log(e)\r\n    }\r\n})</pre><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">wx.getFileSystemManager()  是获取文件管理器对象；</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">aa.writeFile  是写文件，详细参数可\t<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/file/FileSystemManager.writeFile.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">点击查看</a> 官方文档说明。</p><div style=\"line-height: 1.7em;\"><h4 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.7em; color: inherit; text-rendering: optimizeLegibility; text-indent: 1em;\">String wx.env.USER_DATA_PATH</h4><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">文件系统中的用户目录路径</p></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">wx.env.USER_DATA_PATH +'/test.png'  这里是创建一个临时文件的文件名。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">that.data.scene.slice(22)   这里是把 data:image/png;base64这一段去除，需要注意的是去除这一段之后 base64 编码之间放到image组件的src里面是不能显示图片的。</p></div></div> </td>", "pub_time": "2019-12-2 00:17", "author": "Rolan"}
{"title": "最简单的小程序状态管理方案! - mobx-mini ", "content": "<td id=\"article_content\"> \n                     \n                    <div><h2 class=\"heading\" data-id=\"heading-0\">写在前面</h2>\r\n<p>状态管理可以说是现代前端开发中最核心的一环。为了解决前端应用的复杂度，生态圈里诞生了各式各样的状态管理方案，按编程范式分类有函数式（redux），响应式（rxjs），透明的函数响应式（mobx），按状态存储分类有单 store 和 多 store 的，有专门处理异步代码的（rxjs），还有连异步都不处理的（redux）.....，基本上可以满足各种场景的前端应用。</p>\r\n<p>然而受制于<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>封闭的生态，各种状态方案的绑定库都无法在小程序内使用。已有的绑定库不能用？那就写一个呗。\r\n<a name=\"xQ5Y5\"></a></p>\r\n<h2 class=\"heading\" data-id=\"heading-1\">状态管理的目标</h2>\r\n<p>在迈入正文前，先说一下我们对状态管理方案的一些诉求：</p>\r\n<ol>\r\n<li>基于已有的状态管理方案，redux, mobx, rxjs，最大程度复用现有生态</li>\r\n<li>Typescript 友好（ts 真香）</li>\r\n<li>API 简单清晰，性能基线高，无需手动优化就能达到不错的性能。</li>\r\n<li>少模板代码，代码敲多了手疼（说的就是 redux）</li>\r\n</ol>\r\n<p>rxjs 学习曲线过于陡峭，也没定义状态如何存储，划掉；redux 概念挺多，模板代码和概念一样多，不要。那就剩下 mobx 了。\r\n<a name=\"ATuKw\"></a></p>\r\n<h2 class=\"heading\" data-id=\"heading-2\">API</h2>\r\n<p>首先定义 store，并连接到页面。\r\n<a name=\"HeFxu\"></a></p>\r\n<h4 class=\"heading\" data-id=\"heading-3\"><code>observer(context, mapState)</code></h4>\r\n<pre><code class=\"hljs javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">import</span> { observable } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'mobx'</span>;\r\n<span class=\"hljs-keyword\">import</span> { observer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'mobx-mini'</span>;\r\n<span class=\"hljs-keyword\">const</span> rootStore = observable({\r\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'mobx-app'</span>\r\n});\r\n<span class=\"hljs-keyword\">const</span> store = observable({\r\n  <span class=\"hljs-attr\">count</span>: <span class=\"hljs-number\">0</span>,\r\n  get isOdd() {\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.seconds % <span class=\"hljs-number\">2</span> === <span class=\"hljs-number\">1</span>;\r\n  },\r\n  tick() {\r\n    <span class=\"hljs-keyword\">this</span>.count += <span class=\"hljs-number\">1</span>;\r\n  }\r\n});\r\n<span class=\"hljs-keyword\">const</span> mapState = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> ({\r\n  <span class=\"hljs-attr\">count</span>: store.count,\r\n  <span class=\"hljs-attr\">seconds</span>: store.isOdd,\r\n  <span class=\"hljs-attr\">title</span>: rootStore.title,\r\n});\r\n<span class=\"hljs-comment\">// page</span>\r\nPage({\r\n  add() {\r\n    store.tick();\r\n  },\r\n  onLoad() {\r\n    observer(<span class=\"hljs-keyword\">this</span>, mapState);\r\n  },\r\n});\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p>直接在 axml 中使用吧</p>\r\n<pre><code class=\"hljs html copyable\" lang=\"html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">view</span>&gt;</span>count<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">view</span>&gt;</span>\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p><a name=\"LH1kY\"></a></p>\r\n<h2 class=\"heading\" data-id=\"heading-4\">实现原理</h2>\r\n<p>如果你还没有对 mobx 有所了解，建议看一下它的<a target=\"_blank\" href=\"https://cn.mobx.js.org/\" rel=\"nofollow noopener noreferrer\">中文文档</a> 了解一下前置知识。<br>原理就是 <code>observer</code>  APi 会对参数 <code>mapState</code> 中的 <code>observable</code> 对象注册 <code>autorun</code> 函数，在 <code>autorun</code> 内部，监听到 <code>observable</code> 变动后，直接对页面  <code>setData</code> 。小程序的 data 就会动态更新了。</p>\r\n<p><a name=\"V4evN\"></a></p>\r\n<h2 class=\"heading\" data-id=\"heading-5\">总结</h2>\r\n<p>提醒一下，暂时只支持支付宝小程序，且未在生产环境中使用过。<br>源码在这里，只有100行不到。<a target=\"_blank\" href=\"https://github.com/luv-sic/mobx-mini\" rel=\"nofollow noopener noreferrer\">github.com/luv-sic/mob…</a>\r\n<a name=\"dSBke\"></a></p>\r\n<h2 class=\"heading\" data-id=\"heading-6\">参考</h2>\r\n<p><a target=\"_blank\" href=\"https://cn.mobx.js.org/\" rel=\"nofollow noopener noreferrer\">cn.mobx.js.org/</a><br><a target=\"_blank\" href=\"https://github.com/b5156/mobx-wxapp\" rel=\"nofollow noopener noreferrer\">github.com/b5156/mobx-…</a></p></div> </td>", "pub_time": "2019-12-2 09:15", "author": "Rolan"}
{"title": "小程序  点击按钮后修改颜色(样式) ", "content": "<td id=\"article_content\"> \n                     \n                    <h3 data-anchor-id=\"c6cm\" id=\"需实现的功能\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>需实现的功能：</h3><p data-anchor-id=\"i16j\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>点击按钮后，按钮的颜色会加深</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"opld\" id=\"效果展示\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>效果展示：</h3><p data-anchor-id=\"1wdl\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>原按钮 <br></p><p><a href=\"data/attachment/portal/201912/03/101633y8fqe6b556n8n33b.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/101633y8fqe6b556n8n33b.jpg\"></a></p><p data-anchor-id=\"efd1\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>点击后按钮</p><p><a href=\"data/attachment/portal/201912/03/101633o2wxxsodcehx9nfx.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/101633o2wxxsodcehx9nfx.jpg\"></a></p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"zxyk\" id=\"思路\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>思路：</h3><p data-anchor-id=\"p8tq\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>给按钮设置一个点击事件，点击了按钮后，修改按钮的样式。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"xumm\" id=\"代码\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>代码：</h3><p data-anchor-id=\"8n08\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>test.wxml文件</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"iwdj\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">wx:if</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"{{sty==0}}\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"score\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">style</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">background</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">color</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:{{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">score</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}};</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">catchtap</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">'score'</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;text&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">按钮一</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/text&gt;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/view&gt;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/view&gt;</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">wx:if</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"{{sty==1}}\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"score\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">style</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">background</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">color</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:{{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">score</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}};</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">catchtap</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">'score'</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;text&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">按钮一</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/text&gt;</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/view&gt;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/view&gt;</span></code></li></ol></pre><p data-anchor-id=\"aeco\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>test.js文件</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"qdeu\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Page</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/*** 页面的初始数据*/</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    sty</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    score</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'#fff5df'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> score</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">e</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">   </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//点击按钮，样式改变</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">   </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">let</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> that </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">   that</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">setData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">     sty</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">     score</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'rgba(252,178,22, 0.3)'</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">   </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)}</span></code></li></ol></pre><p data-anchor-id=\"xv3k\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>test.css文件</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"m5rx\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">score</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  width</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">335rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  border</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">radius</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">10rpx</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0rpx</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0rpx</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">10rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">score text</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  color</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#FCB216;</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li></ol></pre> </td>", "pub_time": "2019-12-3 00:32", "author": "Rolan"}
{"title": "小程序-腾讯地图SDK-获取当前地址 ", "content": "<td id=\"article_content\"> \n                     \n                    <p data-anchor-id=\"ulfh\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>如何获取用户当前地址，这个就要先用到<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的定位功能:定位官方文档</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"uu0g\" id=\"第一步获取当前定位\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>第一步获取当前定位</h3><p data-anchor-id=\"414i\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>在js当中写</p><p><a href=\"data/attachment/portal/201912/03/102516izmajf00f77tewqe.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/102516izmajf00f77tewqe.jpg\"></a></p><p data-anchor-id=\"jx9x\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>运行项目之后会有个这样的弹窗：</p><p><a href=\"data/attachment/portal/201912/03/102516rzq221tgp11gt00c.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/102516rzq221tgp11gt00c.jpg\"></a></p><p data-anchor-id=\"qllv\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>这是因为开发者需要说明获取用户地理位置的用途。 <br>解决方法： <br>在app.json中增加permission属性。</p><p><a href=\"data/attachment/portal/201912/03/102516urxn9uuqrun9j98u.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/102516urxn9uuqrun9j98u.jpg\"></a></p><p data-anchor-id=\"s06l\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>这样就可以获取到用户的地理坐标了。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"ouai\" id=\"第二步讲当前定位转换程地址信息\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>第二步讲当前定位转换程地址信息</h3><p data-anchor-id=\"b0ye\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>这个功能需要用到腾讯地图SDK：官方文档 <br>官方文档上使用SDK的步骤写的挺详细的，还带上了各种链接：</p><p><a href=\"data/attachment/portal/201912/03/102516ibpy2xvavzv6drr8.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/102516ibpy2xvavzv6drr8.jpg\"></a></p><p data-anchor-id=\"joa7\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>第4步的安全域名设置在你自己的小程序管理后台里设置 <br>以上4步都完成后，将下载好的SDK文件放到项目里。 <br>在页面js里引入SDK：</p><p><a href=\"data/attachment/portal/201912/03/102515d32frummwxcmhm1c.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/102515d32frummwxcmhm1c.jpg\"></a></p><p data-anchor-id=\"if85\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>我们需要用到的是SKD里面的reverseGeocoder()方法，所以我们在获取到用户当前坐标后调用这个方法：</p><p><a href=\"data/attachment/portal/201912/03/102515qx24xtgixdgyym2w.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/102515qx24xtgixdgyym2w.jpg\"></a></p><p data-anchor-id=\"xz18\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>这样就将地址坐标转换成了地址，在页面上简单展示出来：</p><p><a href=\"data/attachment/portal/201912/03/102515azbs52b8r88up8id.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/102515azbs52b8r88up8id.jpg\"></a></p><p><a href=\"data/attachment/portal/201912/03/102516hsttjqjvntd2cr2c.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/102516hsttjqjvntd2cr2c.jpg\"></a></p><p data-anchor-id=\"mtoa\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>完整代码 <br>最后贴上我的js完整代码，写的有点小啰嗦了，如果有什么不太懂的地方欢迎加我qq一起讨论下：546529770，谢谢~~</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"cady\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">js</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/**引入SDK核心类 */</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> qqSDK </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">require</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'../../apis/qqmap-wx-jssdk.min.js'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Page</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/**</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">   * 页面的初始数据</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">   */</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    latitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">''</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    longitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">''</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    positionData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">''</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/**</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">   * 生命周期函数--监听页面加载</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">   */</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  onLoad</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">options</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> _this </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">this</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/**实例化SDK核心类 */</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> qqMap </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> qqSDK</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      key</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'3B4BZ-QHNK3-HLX34-YKUQA-YDHCV-CHFFB'</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//必填</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/**获取当前坐标 */</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    wx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">getLocation</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      success</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> latitude </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">latitude</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> longitude </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">longitude</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        qqMap</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">reverseGeocoder</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          success</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> address </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">result</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">address</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            _this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">setData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              latitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> latitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              longitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> longitude</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              positionData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> address</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li></ol></pre> </td>", "pub_time": "2019-12-3 00:41", "author": "Rolan"}
{"title": "小程序云开发模糊查询，实现数据库多字段的模糊搜索 ", "content": "<td id=\"article_content\"> \n                     \n                    <p data-anchor-id=\"ugo6\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>最近做<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>云开发时，用到了一个数据库的模糊搜索功能，并且是要求多字段的模糊搜索。</p><p data-anchor-id=\"mire\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>网上也有一大堆资源，但是都是单个字段的搜索。如下图</p><p><a href=\"data/attachment/portal/201912/03/103351np091biib079uk9b.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/103351np091biib079uk9b.jpg\"></a></p><p data-anchor-id=\"69aw\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>上图只可以实现time字段的模糊搜索。但是我们如果相对数据表里的多个字段做模糊查询呢？该怎么办呢。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h2 data-anchor-id=\"y6s6\" id=\"多字段模糊搜索\" style='margin: 35px 0px 20px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 26px; background-color: rgb(249, 249, 245);'>多字段模糊搜索</h2><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"kk3c\" id=\"一如我们的数据表里有以下数据我们想同时模糊查询name和address字段\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>一，如我们的数据表里有以下数据，我们想同时模糊查询name和address字段</h3><div><p><a href=\"data/attachment/portal/201912/03/103350u1ib17t11ghotmjb.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/103350u1ib17t11ghotmjb.jpg\"></a></p><p><a href=\"data/attachment/portal/201912/03/103351cpcr0spssfeo0bzo.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/103351cpcr0spssfeo0bzo.jpg\"></a></p></div><p data-anchor-id=\"z6e6\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>如我们搜索“周杰”可以看到我们查询到下面两条数据。</p><p><a href=\"data/attachment/portal/201912/03/103350nf2zfxc787fz2dam.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/103350nf2zfxc787fz2dam.jpg\"></a></p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"s0fl\" id=\"二如我们搜索编程可以搜索到下面数据\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>二，如我们搜索“编程”，可以搜索到下面数据</h3><div><p><a href=\"data/attachment/portal/201912/03/103351d1dspxsp5lwtlleb.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/03/103351d1dspxsp5lwtlleb.jpg\"></a></p></div><p data-anchor-id=\"htvx\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>可以看到我们搜索到的两条数据，一个是name字段为 编程小石头， <br>一个是address字段里包含“编程“ 字样。</p><p data-anchor-id=\"i2ek\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>下面把代码贴给大家</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"psw2\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">let</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> key </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"编程小石头\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"查询的内容\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> key</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> db </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> wx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">cloud</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">database</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">();</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> _ </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> db</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">command</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    db</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">collection</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'qcl'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">).</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">where</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">_</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">or</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">([{</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> db</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">RegExp</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          regexp</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'.*'</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> key</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          options</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'i'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        address</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> db</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">RegExp</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          regexp</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'.*'</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> key</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          options</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'i'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">])).</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">get</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      success</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      fail</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> err </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">err</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li></ol></pre><p data-anchor-id=\"1d82\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>key就是我们要搜索的关键字。主要是用到了数据库查询的where,or,get方法。 <br>代码都给大家贴出来来，如果对云开发和云数据库还不是很了解的同学可以去翻看下我以前写的文章。</p> </td>", "pub_time": "2019-12-3 00:53", "author": "Rolan"}
{"title": "用云开发制作教务助手小程序丨实战 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>本项目由一人承担从后端到前端的构思以及开发，下面我就讲讲从教务助手<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的构思到开发实现（基于云开发）。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1、灵感来源</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>教务小程序的灵感来源：用完即走，查个成绩和课表，无需下载app或去翻看公众号内的历史内容。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>加上本人很久以前就想实现开发一个类似的app，但app的开发对于开发小白不太友好，不知从何下手！幸好 <strong style=\"text-indent: 0px;\">小程序·云开发</strong> 的出现解决了我的需求，它的低入门门槛和免后端运维等优势让非科班出身的我也能快速动手开发一款应用类小程序。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2、构思</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>教务小程序需要核心就是： <strong style=\"text-indent: 0px;\">成绩查询、课表查询、教务通知查询</strong> ！ 那么问题来了，学校教务处只有网页版，教务小程序数据从何而来呢？ 经过一系列思考，百度各种问题，思路就来了：</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>后端模拟登陆——拿到页面数据——整理数据——反馈到小程序前端渲染</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>大概结构如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/094226hy5js68fu6t5js5z.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/094226hy5js68fu6t5js5z.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>▌项目开发</h2><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1、后端</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>后端的实现 <strong style=\"text-indent: 0px;\">完全基于云开发</strong> 。 部分目录：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/094230su6bknp6kk1px19s.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/094230su6bknp6kk1px19s.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>采用云开发后端node.js语言，主要利用模块有：</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Router模块：</h2><pre class=\"prettyprint hljs dart\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> cloud = require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'tcb-admin-node'</span>);\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//   npm  install tcb-router</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> TcbRouter = require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'tcb-router'</span>);\r\ncloud.init({\r\n  env: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'//'</span>\r\n})\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> db = cloud.database();\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> _ = db.command;\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 云函数入口函数</span>\r\nexports.main = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (event, context) =&gt; {\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> app = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> TcbRouter({ event });\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/<span class=\"hljs-emphasis\" style=\"font-style: italic;\">** 教务处登陆 eg*</span>/</span>\r\n  app.router(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'login'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (ctx, next) =&gt; {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> test = require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'login/login.js'</span>);\r\n    ctx.body = test.main(event, context);\r\n  });\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/<span class=\"hljs-emphasis\" style=\"font-style: italic;\">**查取成绩*</span>/</span>\r\n  app.router(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'getpoint'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (ctx, next) =&gt; {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> logList = require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'getpoint/index.js'</span>);\r\n    ctx.body = logList.main(event, context);\r\n  });\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/<span class=\"hljs-emphasis\" style=\"font-style: italic;\">**学术活动*</span>/</span>\r\n  app.router(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'academic'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (ctx, next) =&gt; {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> userList = require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'schoolnews/academic.js'</span>);\r\n    ctx.body = userList.main(event, context);\r\n  });\r\n  app.router(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'xsxx'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (ctx, next) =&gt; {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> userList = require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'schoolnews/xsxx.js'</span>);\r\n    ctx.body = userList.main(event, context);\r\n  });\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> app.serve();\r\n}\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Cherrio实现课表成绩等网页解析：</h2><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> cloud = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'tcb-admin-node'</span>)\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> rp = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'request-promise'</span>);\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> cheerio = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"cheerio\"</span>);\r\ncloud.init()\r\n<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">module</span>.exports = {\r\n  <span class=\"hljs-attr\">main</span>: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (event, context) =&gt; {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> url =<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'URL'</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> res = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> rp({<span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'get'</span>,<span class=\"hljs-attr\">uri</span>: url,<span class=\"hljs-attr\">json</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>}).then(<span class=\"hljs-function\">(<span class=\"hljs-params\">body</span>) =&gt;</span> {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> academic = [];\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> $ = cheerio.load(body);\r\n      $(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'.fl'</span>).find(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'dl'</span>).each(<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">i, elem</span>) </span>{\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//业务代码未写</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n          **/</span>\r\n        academic.push({<span class=\"hljs-attr\">date</span>: date,<span class=\"hljs-attr\">time</span>:time,<span class=\"hljs-attr\">title</span>:title,<span class=\"hljs-attr\">speaker</span>:speaker,<span class=\"hljs-attr\">place</span>:place,<span class=\"hljs-attr\">link</span>:link})\r\n      });\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> academic\r\n    }).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> err;\r\n    })\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> res\r\n  }\r\n}\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>数据库access_token定时修改</h2><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 云函数入口文件</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> cloud = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx-server-sdk'</span>),rp = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'request-promise'</span>),key=<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'key.js'</span>)\r\ncloud.init({\r\n  <span class=\"hljs-attr\">env</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"//\"</span>\r\n})\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//指定数据库环境</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> db = cloud.database({\r\n  <span class=\"hljs-attr\">env</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"//\"</span>\r\n}), _ = db.command;\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 云函数入口函数</span>\r\nexports.main = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (event, context) =&gt; {\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> { \r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> res = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> rp(\r\n      {\r\n        <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'get'</span>,\r\n        <span class=\"hljs-attr\">uri</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid='</span> + key.APPID + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'&amp;secret='</span> + key.APPSECRET,\r\n        <span class=\"hljs-attr\">qs</span>: {},<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//参数</span>\r\n        headers: {},<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//请求头</span>\r\n        json: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//是否json数据</span>\r\n      }\r\n    ).then(<span class=\"hljs-function\">(<span class=\"hljs-params\">body</span>) =&gt;</span> {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> body\r\n    }).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {<span class=\"hljs-attr\">errmsg</span>:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"rp函数获取失败\"</span>}\r\n    })\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/*将获取的access_token存到数据库*/</span>\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(res)\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.hasOwnProperty(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'access_token'</span>)) {\r\n      <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> db.collection(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'key'</span>).where({\r\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"accesstoken\"</span>\r\n      }).update({\r\n        <span class=\"hljs-attr\">data</span>: {\r\n          <span class=\"hljs-attr\">accesstoken</span>: res.access_token,\r\n          <span class=\"hljs-attr\">datearray</span>: _.unshift(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Date</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">Date</span>().getTime())),\r\n          <span class=\"hljs-attr\">num</span>: _.inc(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>)\r\n        }\r\n      })\r\n    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n      <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"err错误\"</span> + res)\r\n    }\r\n  } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (err) {\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(err)\r\n  } \r\n  \r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>此外还借助了其他模块实现登陆、数据处理（课表等数据格式化）、云开发数据库操作（用户信息储存，消息发布）、用户权限鉴定（确保后台信息安全）等，在此就不赘述。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2、前端</h2><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/094230afoff2vnow9oh8fg.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/094230afoff2vnow9oh8fg.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小白就是“简单粗暴”的进行各种if、var操作；</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>部分详细介绍如下：</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>① 课程表：</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>实现了一键导入（其实课程表这一功能可以单独形成一个通用的小程序上线），每天一卡片形式在首页提醒：今天有什么课，上完没有？</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/094225cxxgjrznnptg92rn.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/094225cxxgjrznnptg92rn.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>②主题全局替换：</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>支持自定义主题色，给用户自定义能力。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/094225hzqi88ecqb1fze13.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/094225hzqi88ecqb1fze13.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>③校历：</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>利用了插件【极点日历】再加以美化。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/094225a46mkz77t4ejlugb.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/094225a46mkz77t4ejlugb.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>▌感悟</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一个从小白到从后端到前端到UI全部自己写的入门者参赛的心路历程就这么多了，目前源码暂不开放，对本小程序有疑问与建议均可在留言，同时希望大家能够利用好小程序实现自己的想法和创意！</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>源码地址</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://github.com/TencentCloudBase/Good-practice-tutorial-recommended\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">github.com/TencentClou…</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果你想要了解更多关于云开发CloudBase相关的技术故事/技术实战经验，请扫码关注【腾讯云云开发】公众号～</p> </td>", "pub_time": "2019-12-4 00:02", "author": "Rolan"}
{"title": "小程序同构方案 kbone 分析与适配 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的开发的过程中，我们会存在小程序和 H5 页面共存的场景，而让小程序原生和 web h5 独立开发，往往会遇到需要两套人力去维护。对开发者而言，加大了工作量成本，对于产品而言，容易出现展示形态同步不及时问题。在这种情况下，我们急需要找到一个既能平衡性能，也能满足快速迭代的方案。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>主流的小程序同构方案</h2><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>web-view 组件</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>webview 组件是一个承载网页的容器，最简单的方案就是使用原 h5 的代码，通过 web-view 组件进行展示。其优点是业务逻辑无需额外开发与适配，只需要处理小程序特有的逻辑，然后通过 jssdk 与原生小程序通讯。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用 webview 加载 h5 的问题也非常明显，首先是体验问题，用户见到页面会经过以下环节：加载小程序包，初始化小程序，再加载 webview 中的 html 页面，然后加载相关资源，渲染 h5 页面，最后进行展示。最终导致的结果是打开体验非常差。另外其他缺点是小程序对 web-view 部分特性有限制，比如组件会自动铺满整个小程序页面，不支持自定义导航效果等。</p><p><a href=\"data/attachment/portal/201912/04/100219uwe9lwwd9v4zbw2e.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100219uwe9lwwd9v4zbw2e.jpg\"></a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>静态编译兼容</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>静态编译是最为主流的小程序同构方案，类似的有 taro, mpvue 等。其思路是在构建打包过程，把一种结构化语言，转换成另一种结构化语言。比如，taro 把 jsx 在构建时进行词法分析，解析代码获取 AST，然后将 AST 递归遍历生成 wxml 目标代码。</p><p><a href=\"data/attachment/portal/201912/04/100220miidppr97i1a42k2.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100220miidppr97i1a42k2.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>静态编译的好处是非常明显，一套代码，通过编译分别转 h5 和小程序，兼具性能与跨平台。另一方面，随着这种方案的流行，大家也感受到了其明显的问题，首先，由于小程序本身的限制，比如无法 dom 操作，js 与 webview 双线程通信等，导致静态编译语法转换，不能做到彻底的兼容，开发体验受制于框架本身的支持程度，相信踩过坑的同学应该非常有痛的感悟。其次，静态编译转换逻辑需要与小程序最新的特性保持同步，不断升级。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序运行时兼容方案</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>静态编译的方案实现了同构，但它只是以一种中间态的结构化语法去编码，非真正的 web，牺牲了大量的灵活性。另外一种更灵活的方案，运行时兼容应值得去尝试。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序原理</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们回到小程序本身的限制上来。由于小程序采用双线程机制，内部通过一个 webview 用于承载页面渲染，但小程序屏蔽了它原本的 DOM/BOM 接口，自己定义了一套组件规范；另一方面，使用独立的 js-core 负责对 javascript 代码进行解析，让页面和 js-core 之间进行相互通信（setData），从而达到执行与渲染的分离。而浏览器的 DOM 接口是大量 web 得以显示的底层依赖，这也是 h5 代码无法直接在小程序中运行的主要原因。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>那么如何突破小程序对接口 DOM 的屏蔽呢？ 最直接的思路就是用 JS 实现和仿造一层浏览器环境的 DOM 相关的标准接口，让用户的 JS 代码可以无感知的自由操作 DOM。通过仿造的底层 DOM 接口，web 代码执行完后，最终生成一层仿造的 DOM 树，然后讲这棵 DOM 树转换成小程序的 wxml 构成的 DOM 树，最后由小程序原生去负责正确的渲染出来。</p><p><a href=\"data/attachment/portal/201912/04/100220tufs9gy5gqn5ff5w.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100220tufs9gy5gqn5ff5w.jpg\"></a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>kbone</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>kbone 是微信官方出一套小程序运行时兼容方案，目前已经接入的小程序有小程序官方社区，及腾讯课堂新人礼包等。并且有专人维护，反馈及时。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>kbone 方案核心主要有两大模块，第一是 miniprogram-render 实现了对浏览器环境下 dom/bom 的仿造，构建 dom 树，及模拟 web 事件机制。第二个模块是 miniprogram-element 是原生小程序渲染入口，主要监听仿造 dom 树的变化，生成对应的小程序的 dom 树，另外一个功能是监听原生小程序事件，派发到仿造的事件中心处理。</p><p><a href=\"data/attachment/portal/201912/04/100220ctttp28w6nb48pb7.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100220ctttp28w6nb48pb7.jpg\"></a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>DOM/BOM 仿造层</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>DOM、BOM 相关的接口模拟，主要是按照 web 标准构建 widow、document、node 节点等相关 api，思路比较清晰，我们简单看下其流程。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先在用户层有一个配置文件 miniprogram.config，里面有必要信息 origin、entry 等需要配置。在 miniprogram-render 的入口文件 createPage 方法中，配置会初始化到一个全局 cache 对象中，然后根据配置初始化 Window 和 Document 这两个重要的对象。Location、Navigator、Screen、History 等 BOM 实例都是在 window 初始化过程中完成。DOM 节点相关 api 都是在 Document 类中初始化。所有生成的节点和对象都会通过全局的 pageMap 管理，在各个流程中都能获取到。</p><p><a href=\"data/attachment/portal/201912/04/100220xiezgmeg1fl529hh.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100220xiezgmeg1fl529hh.jpg\"></a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序渲染层</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>miniprogram-element 负责监听仿造 DOM 仿造的变化，然后生成对应小程序组件。由于小程序中提供的组件和 web 标准并不完全一样，而我们通过 html 生成的 dom 树结构千差万别，如和保证任意的 html dom 树可以映射到小程序渲染的 dom 树上呢？kbone 通过小程序自定义组件去做了这件事情。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>简单说下什么是自定义组件，既将特定的代码抽象成一个模块，可以组装和复用。以 react 为例，div、span 等标签是原生组件，通过 react.Component 将 div 和 span 组合成一个特定的 react 组件，在小程序中用自带的 view、image 等标签通过 Component 写法就能组合成小程序自定义组件。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>和大部分 web 框架的自定义组件类似，小程序自定义组件也能够自己递归地调用自己，通过将伪造的 dom 结构数据传给自定义组件作为子组件，然后再递归的调用，直到没有子节点为止，这样就完成了一个小程序 dom 树的生成。</p><p><a href=\"data/attachment/portal/201912/04/100221snj6o9v9bacbkrat.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100221snj6o9v9bacbkrat.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><br></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>性能问题</h2><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>多层 dom 组合</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>大量小程序自定义组件会有额外的性能损耗，kbone 在实现时提供了一些优化。其中最基本的一个优化是将多层小程序原生标签作为一个自定义组件。dom 子树作为自定义组件渲染的层级数是可以通过配置传入，理论上层级越多，使用自定义组件数量越少，性能也就越好。</p><p><a href=\"data/attachment/portal/201912/04/100221az8t7vobpv8l3rro.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100221az8t7vobpv8l3rro.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以上逻辑就是通过 DOM_SUB_TREE_LEVEL 层级数对节点过滤，更新后，检测是否还有节点，再触发更新。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>节点缓存</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在页面 onUnload 卸载的过程中，kbone 会将当前节点放入缓存池中，方便下次初始化的时候优先从缓存中读取。</p><p><a href=\"data/attachment/portal/201912/04/100221xi1z1nctb7i7g2kb.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100221xi1z1nctb7i7g2kb.jpg\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>kbone 接入与适配</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>kbone 作为一种运行时兼容方案，适配成本相对于静态编译方案而言会低很多，总体来说对原代码侵入性非常少，目前接入过程比较顺利（期间遇到的坑，感谢 作者 june 第一时间帮忙更新发布 [玫瑰]）</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>svg 资源适配</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序不支持 svg，对于使用 svg 标签作为图片资源的应用而言，需要从底层适配。在一开始我们想到的方案有通过 肝王的 cax 进行兼容，但评估后不太靠谱，cax 通过 解析 svg 绘制成 canvas，大量 icon 会面临比较严重的性能问题。那么最直接暴力的办法就是使用 webpack 构建过程直接把 svg 转 png？后面一位给力的小伙伴想到通过把 svg 标签转成 Data URI 作为背景图显示，最终实践验证非常可靠，具体可以参考 kbone svg 适配。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>网络层适配/cookie</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序环境拥有自己定义的一套 wx.request API， web 中的 XMLHttpRequest 对象是无法直接使用。由于我们代码中使用了 axios，所以在预言阶段直接简单通过 axios-miniprogram-adapter 进行适配器，后面发现部分业务没有使用 axios，兼容并不够彻底。于是直接从底层构建了一个 XMLHttpRequest 模块，将 web 网络请求适配到 wx.request。同时做了 cookie 的自动存取逻辑适配（小程序网络请求默认不带 cookie）。这一层等完善好了看是否能 pull request 到 kbone 代码仓库中。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>差异性 DOM/BOM API 适配</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>部分 web 中的接口在小程序无法完全获得模拟，比如 getBoundingClientRect 在小程序中只能通过异步的方式实现。类似的有 removeProperty、stopImmediatePropagation</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>等接口在 kbone 中没有实现，performance 等 web 特有的全局变量的需要兼容。这些扩展 API 可以通过 kbone 对外暴露的 dom/bom 扩展 API 进行兼容。</p><p><a href=\"data/attachment/portal/201912/04/100342m98wmya8yibbi27k.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100342m98wmya8yibbi27k.jpg\"></a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>getBoundingClientRect</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>对于元素的的高度 height \\offsetHeight 获取，我们只能通过 $getBoundingClientRect 异步接口，如果是 body scroll-view 实现的，getBoundingClientRect 返回的是 scrollHeight。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>滚动</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>web 的全局滚动事件默认是无法触发，需要通过配置 windowScroll 来监听，启用这个特性会影响性能。</p><pre class=\"hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">global</span>: {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">windowScroll</span>: true\r\n},\r\n</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>样式适配</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>标签选择器</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>kbone 样式有一个坑，就是它会将标签选择器转换成类选择器去适配小程序环境，比如</p><pre class=\"hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>span { } =&gt;  .h5-span{  }\r\n</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这样带来的副作用就是选择器的权重会被自动提升，对选择器权重依赖的标签样式需要去手动调整兼容。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>其他适配点</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>注意使用标准的 style 属性，比如有 webkit-transform 会不支持，及小程序样式和 web 差异性兼容等。</p><pre class=\"prettyprint hljs awk\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>  style: {\r\n      <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'WebkitTransform'</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'translate('</span> + x + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'px, 0)'</span> <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span> 正确\r\n     <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'-webkit-transform'</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'translate('</span> + x + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'px, 0)'</span> 报错\r\n  }\r\n</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>路由适配</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在初始化路由阶段，曾经遇到过 Redux 更新 dom 后偶现节点销毁，最终定位到是 kbone 对 Location 等 BOM 实例化过晚，最终在 june 帮忙及时调整了顺序，更新了一个版本，现最新本所有 BOM 对象会在业务执行前准备好。</p><pre class=\"prettyprint hljs dart\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//初始化dom</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">window</span>.$$miniprogram.init()\r\n...\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//初始化业务</span>\r\ninit(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">window</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">document</span>)\r\n</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>隐式全局变量兼容</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在模拟 XMLHttpRequest 模块的过程中遇到一个问题，什么时候初始化这个对象，我们可以选择在网络请求库初始化前引入它，挂载在仿造的 window 对象下。但仍然会出现一个问题，第三放库直接使用的是 XMLHttpRequest 对象，而非通过 window 访问。</p><pre class=\"prettyprint hljs dart\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> request = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> XMLHttpRequest() <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 报错</span>\r\n \r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> request = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">window</span>.XMLHttpRequest() <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 正确</span>\r\n</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在正常的 web 环境，window 是默认的顶层作用域，而小程序中隐式的使用 window 对象则会报错。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为了解决这一问题，可以通过配置文件的 globalVars 字段，将 XMLHttpRequest 直接进行定义。</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'> <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">globalVars</span>: [\r\n    [<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'XMLHttpRequest'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'require(\"libs/xmlhttprequest.js\")'</span>]\r\n]\r\n</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>构建的过程中会在所有依赖前转成如下代码 ：</p><pre class=\"hljs php\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> XMLHttpRequest = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"libs/xmlhttprequest.js\"</span>)\r\n</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这样做解决了隐式访问 window 作用域问题。但又面临另一个问题，那就是 xmlhttprequest 模块本身内部由依赖仿造 window 对象，比如 cookie 访问，而此时因为 require 的模块独立的作用域无法访问到其他模块的仿造 window 对象。于是最终通过导入一个 function 传入 window 作用域，然后初始化 xmlhttprequest。</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">globalVars</span>: [\r\n      [<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'XMLHttpRequest'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'require(\"libs/xmlhttprequest.js\").init(window, document)'</span>]\r\n]\r\n</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>多端构建</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序和 web 端需要的资源及部分逻辑是有差异，通过 webpck 配置进行差异化处理，具体可以参考文档编写 kbone webpack 配置。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>大概是这样的区分跨端配置：</p><p><a href=\"data/attachment/portal/201912/04/100221mkut9au9y8tuipo3.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100221mkut9au9y8tuipo3.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>分离打包入口文件:</p><p><a href=\"data/attachment/portal/201912/04/100222xtfjoqqzyy4jbpee.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100222xtfjoqqzyy4jbpee.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序打包入口依赖的 dom 节点，需要主动创建。详细示例参照官方 demo.</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">createApp</span>(<span class=\"hljs-params\"></span>) </span>{\r\n    initialize(<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> Root = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'./root/index'</span>).default;\r\n \r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> container = <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">document</span>.createElement(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'div'</span>)\r\n        container.id = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'pages'</span>;\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">document</span>.body.appendChild(container);\r\n        render(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Root</span> /&gt;</span>, container)\r\n    })\r\n}\r\n</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于小程序本身是没有真正 userAgent，kbone 内部是是根据当前环境进行仿造。</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//miniprogram-render/src/bom/navigator#45</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.$_userAgent = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.appCodeName}</span>/<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${appVersion}</span> (<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${platformContext}</span>) AppleWebKit/<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${appleWebKitVersion}</span> (KHTML, like Gecko) Mobile MicroMessenger/<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.$_wxVersion}</span> Language/<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.language}</span>`</span>\r\n</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在业务中有需要区分小程序平台的场景，我们可以通过 webpack DefinePlugin 插件进行注入，然后通过定义变量进行判断。</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!process.env.isWxMiniProgram) {\r\n    <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">render</span>(\r\n        &lt;Root /&gt;,\r\n        document.getElementById(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'pages'</span>)\r\n    );\r\n}\r\n</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序分包</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在腾讯文档的小程序中，有一个独立的小程序仓库。 而文档管理列表是另外一个独立的 H5 项目，嵌入到小程序 webview 动态加载。通过 kbone 转原生打包后，这部分代码需要继承到小程序仓库中。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先我们可以通过脚本，在 webpack 构建过程，将 kbone 编译后的包 copy 到独立小程序仓库的目录下，合并小程序相关配置，从而实现功能合并。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这样遇到的一个问题是主包大小超过限制，通过小程序分包我们可以解决这个问题，将原小程序非首屏页面全部放分包之中，配置 preloadRule 字段再预加载分包。</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"subpackages\"</span>: [\r\n    {\r\n      <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"root\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"packageA\"</span>,\r\n      <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pages\"</span>: [\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pages/cat\"</span>      ]\r\n    }\r\n  ]\r\n  <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"preloadRule\"</span>: {\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pages/index\"</span>: {\r\n      <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"network\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"all\"</span>,\r\n      <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"packages\"</span>: [<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"important\"</span>]\r\n    }  \r\n}\r\n</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>结</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过对目前各种小程序同构方案的对比与实践，kbone 是一种非常值得推荐的新思路，新方法，兼具性能与灵活。唯一不足的地方就是目前仍有不少底层工作需要适配，更多的问题在继续探索中，相信随着不断迭代及采坑后的反馈，kbone 会变得越来稳定和成熟</p> </td>", "pub_time": "2019-12-4 00:23", "author": "Rolan"}
{"title": "京喜首页（微信购物入口）跨端开发与优化实践 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>随着今年的双十一落下帷幕，京喜（原京东拼购）也迎来了首捷。双十一前夕微信购物一级入口切换为京喜<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>，项目顺利通过近亿级的流量考验，在此与大家分享一点自己参与的工作。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在接手项目前，京喜业务已在线上稳定运行较长时间。但经过一段时间迭代维护后，发现首页存在以下问题：</p><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">H5 版本首页针对不同渠道开发了多套页面，对开发者维护和内容运营来说存在较大挑战，需投入大量人力成本；</li><li style=\"line-height: 1.7em;\">项目技术栈不统一，分别有传统 H5 开发、原生小程序开发、wqVue 框架开发，严重影响项目复杂度，迭代过程苦不堪言；</li><li style=\"line-height: 1.7em;\">H5、小程序以及 RN 三端存在各自构建和发布流程，涉及较多工具及复杂系统流程，影响业务交付效率。</li></ol><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>综上所述，京喜迎来一次改版契机。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>改版目标</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>从前端角度来看，本次改版要实现以下目标：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">升级并统一项目技术栈，解决项目技术栈混乱的现状；</li><li style=\"line-height: 1.7em; list-style-type: disc;\">使用一套代码，适配微信入口、手 Q 入口、微信小程序、京东 APP、京喜 APP、M 站六大业务场景，减少多套页面的维护成本，提升交付效率；</li><li style=\"line-height: 1.7em; list-style-type: disc;\">通过让 RN 技术在业务上的落地，完善团队在 App 端的技术储备；</li><li style=\"line-height: 1.7em; list-style-type: disc;\">优化页面性能及体验，为下沉市场用户提供优质的产品体验；</li></ul><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>技术选型</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>京喜业务拥有非常丰富的产品形态，涵盖了 H5、微信小程序以及独立 APP 三种不同的端，对支持多端的开发框架有着天然的需求。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/100839c8kev1l4pe8xippv.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100839c8kev1l4pe8xippv.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在技术选型上，我们选择团队自研的 <a target=\"_blank\" href=\"https://github.com/NervJS/taro/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">Taro</a> 多端统一开发解决方案。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>Taro 是一套遵循 React 语法规范的多端开发解决方案。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>现如今市面上端的形态多种多样，Web、React-Native、微信小程序等各种端大行其道，当业务要求同时在不同的端都要求有所表现的时候，针对不同的端去编写多套代码的成本显然非常高，这时候只编写一套代码就能够适配到多端的能力就显得极为需要。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用 Taro，我们可以只书写一套代码，再通过 Taro 的编译工具，将源代码分别编译出可以在不同端（微信/百度/支付宝/字节跳动/QQ 小程序、快应用、H5、React-Native 等）运行的代码。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>选它有两个原因，一来是 Taro 已经成熟，内部和外部都有大量实践，内部有京东 7FRESH、京东到家等，外部有淘票票、猫眼试用等多个案例，可以放心投入到业务开发；二来团队成员都拥有使用 Taro 来开发内部组件库的经验，对业务快速完成有保障。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/100840xf2qhg6ye6iygu6h.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100840xf2qhg6ye6iygu6h.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>开发实录</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于首页改版的开发排期并不充裕，因此充分地复用已有基础能力（比如像请求、上报、跳转等必不可少的公共类库），能大量减少我们重复的工作量。话虽如此，但在三端统一开发过程中，我们仍遇到不少问题同时也带来解决方案，以下我们一一阐述。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>H5 篇</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们所有的页面都依赖现有业务的全局公共头尾及搜索栏等组件，这就不可避免的需要将 Taro 开发流程融入到现有开发和发布流程中去。同时公共组件都是通过 <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Server_Side_Includes\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">SSI</a> 的方式引入和维护的，为了能在运行 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>npm run dev:h5</code> 时预览到完整的页面效果，需要对 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>index.html</code> 模版中的 SSI 语法进行解析， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>index.html</code> 模版文件代码结构大致如下：</p><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">&lt;!DOCTYPE html&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"zh-CN\"</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">head</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"UTF-8\"</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover\"</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">title</span>&gt;</span>京喜<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">title</span>&gt;</span>\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!--#include virtual=\"/sinclude/common/head_inc.shtml\"--&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">head</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">body</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"m_common_header\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"display:none;\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span>&gt;</span>\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!--S 搜索框--&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"search_block\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"search_block\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"smartboxBlock\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"display:none;\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span>&gt;</span>\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!--E 搜索框--&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"app\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"wx_wrap\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">div</span>&gt;</span>\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!--#include virtual=\"/sinclude/common/foot.shtml\"--&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">body</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">html</span>&gt;</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>可以看到模版中存在很多类似 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;!--#include virtual=\"...\" --&gt;</code> 格式的代码，这些就是通过 SSI 方式引入的 H5 公共组件，它的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>virtual</code> 属性指向的文件不存在于本地而是存在于服务器上的，所以我们遇到的第一个问题就是在本地解析这些文件，确保能预览到完整的页面效果，不然开发调试起来就非常的低效。好在 Taro 有暴露出 webpack 的配置，我们可以通过引入自定义加载器（这里就叫 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>ssi-loader</code> ）来解析这些代码的路径，然后请求服务器上的文件内容并进行替换即可，要实现这个功能只需在项目的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>config/dev.js</code> 中加入如下代码即可：</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>module.exports = {\r\n  h5: {\r\n    webpackChain(chain, webpack) {\r\n      chain.merge({\r\n        module: {\r\n          rule: {\r\n            ssiLoader: {\r\n              test: /\\.html/,\r\n              use: [\r\n                {\r\n                  loader: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'html-loader'</span>\r\n                },\r\n                {\r\n                  loader: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'ssi-loader'</span>,\r\n                  options: {\r\n                    locations: {\r\n                      include: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'https://wqs.jd.com'</span>\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这样就解决了本地开发调试难点，然后开开心心的进行页面开发。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当页面开发完成之后，接下来遇到的问题就是如何将前端资源部署到测试和生产环境。由于现有开发和发布流程都是基于内部已有的平台，我们临时定制一套也不太现实，所以需要将它融入到 Taro 的流程中去，这里我们引入了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>gulp</code> 来整合各种构建和发布等操作，只要构建出符合发布平台规范的目录即可利用它的静态资源构建、版本控制及服务器发布等能力，这样我们就打通了整个开发和发布流程。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这套拼凑起来的流程还存在不少的问题，对于新接手的同学有一点小繁琐，有着不少改善的空间，这也是接下来的重点工作方向。另外 Taro 的 H5 端之前是基于 SPA 模式，对于有着多页开发需求的项目来说不太友好，当时反馈给 Taro 团队负责 H5 的同学，很快得到了响应，目前 Taro 已支持 H5 多页开发模式，支持非常迅速。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序篇</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于开发完 H5 版之后，对应的业务逻辑就已经处理完了，接下来只需要处理小程序下的一些特殊逻辑（比如分享、前端测速上报等）即可，差异比较大的就是开发和发布流程。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里讲一下如何在一个原生小程序项目中使用 Taro 进行开发，因为我们的 Taro 项目跟已有的原生小程序项目是独立的两个项目，所以需要将 Taro 项目的小程序代码编译到已有的原生小程序项目目录下，第一步要做的就是调整 Taro 配置 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>config/index.js</code> ，指定编译输出目录以及禁用 app 文件输出防止覆盖已有文件。</p><pre class=\"prettyprint hljs go\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> config = {\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 自定义输出根目录</span>\r\n  outputRoot: process.argv[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">3</span>] === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'weapp'</span> ? <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../.temp'</span> : <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'dist'</span>,\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 不输出 app.js 和 app.json 文件</span>\r\n  weapp: {\r\n    appOutput: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n  }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于京喜以前是主购小程序的一个栏目，后面独立成了独立的小程序，但是核心购物流程还是复用的主购小程序，所以这让情况变得更加复杂。这里还是通过 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>gulp</code> 来进行繁琐的目录文件处理，比如我们的小程序页面和组件都需要继承主购小程序的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>JDPage</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>JDComponent</code> 基类，所以在进行文件复制之前需要进行代码替换，代码如下：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// WEAPP</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> basePath = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`../.temp`</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> destPaths = [<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${basePath}</span>/pages/index/`</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${basePath}</span>/pages/components/`</span>]\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> destFiles = destPaths.map(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${item}</span>**/*.js`</span>)\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/*\r\n * 基类替换\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">replaceBaseComponent</span> (<span class=\"hljs-params\">files</span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> (\r\n    gulp\r\n      .src(files || destFiles, { <span class=\"hljs-attr\">base</span>: basePath })\r\n      .pipe(\r\n        replace(\r\n          <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">/\\b(Page|Component)(\\(require\\(['\"](.*? \"'\"\")\\/npm\\/)(.*)(createComponent.*)/</span>,\r\n          <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">match, p1, p2, p3, p4, p5</span>) </span>{\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> type =\r\n              (p5 || <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>).indexOf(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'true'</span>) != <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">-1</span> ||\r\n              (p5 || <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>).indexOf(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'!0'</span>) != <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">-1</span>\r\n                ? <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Page'</span>\r\n                : <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Component'</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (type == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Page'</span>) p5 = p5.replace(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'))'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'), true)'</span>) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 新：page.js基类要多传一个参数</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> reservedParts = p2 + p4 + p5\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// const type = p1</span>\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// const reservedParts = p2</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> rootPath = p3\r\n\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> clsName = type == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Page'</span> ? <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'JDPage'</span> : <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'JDComponent'</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> baseFile = type == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Page'</span> ? <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'page.taro.js'</span> : <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'component.js'</span>\r\n\r\n            <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(\r\n              <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`:full_moon_with_face: Replace with \\`<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${clsName}</span>\\` successfully: <span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.file.path.replace(\r\n                <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">/.*?wxapp\\//</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wxapp/'</span>\r\n              )}</span>`</span>\r\n            )\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">`new (require(\"<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${rootPath}</span>/bases/<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${baseFile}</span>\").<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${clsName}</span>)<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${reservedParts}</span>`</span>\r\n          }\r\n        )\r\n      )\r\n      .pipe(gulp.dest(basePath))\r\n  )\r\n}\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 基类替换</span>\r\ngulp.task(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'replace-base-component'</span>, () =&gt; replaceBaseComponent())\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>还有很多类似这样的骚操作，虽然比较麻烦，但是只需要处理一次，后续也很少改动。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>RN 篇</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>对于 RN 开发，也是第一次将它落地到实际的业务项目中，所以大部分时候都是伴随着各种未知的坑不断前行，所以这里也友情提示一下，对于从未使用过的技术，还是需要一些耐心的，遇到问题勤查勤问。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于京喜 APP 是复用京东技术中台的基础框架和 JDReact 引擎，所以整个的开发和部署都是遵循 JDReact 已有的流程，画了一张大致的流程图如下：</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/100840dol0s1ckcpor8drh.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100840dol0s1ckcpor8drh.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>JDReact 平台是在 Facebook ReactNative 开源框架基础上，进行了深度二次开发和功能扩展。不仅打通了 Android/iOS/Web 三端平台，而且对京东移动端基础业务能力进行了 SDK 级别的封装，提供了统一、易于开发的 API。业务开发者可以通过 JDReact SDK 平台进行快速京东业务开发，并且不依赖发版就能无缝集成到客户端(android/iOS)或者转换成 Web 页面进行线上部署，真正实现了一次开发，快速部署三端。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于京喜 APP 的 JDReact 模块都是独立的 git 仓库，所以需要调整我们 Taro 项目配置 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>config/index.js</code> 的编译输出路径如下：</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">rn</span>: {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">outPath</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../jdreact-jsbundle-jdreactpingouindex'</span>\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这样，当我们运行 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>yarn run dev:rn</code> 进行本地开发时，文件自动编译到了 JDReact 项目，接下来我们就可以用模拟器或者真机来进行预览调试了。当我们在进行本地开发调试的时候，最高效的方式还是推荐用 Taro 官方提供的 <a target=\"_blank\" href=\"https://github.com/NervJS/taro-native-shell\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-size: 14px; color: rgb(51, 51, 51) !important;'>taro-native-shell</code> </a>原生 React Native 壳子来启动我们的项目，详细的配置参照该项目的 README 进行配置即可。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于 React Native 官方提供的 <a target=\"_blank\" href=\"https://facebook.github.io/react-native/docs/debugging.html#chrome-developer-tools\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">Remote Debugger</a> 功能非常弱，推荐使用 <a target=\"_blank\" href=\"https://github.com/jhen0409/react-native-debugger\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">React Native Debugger</a> 来进行本地 RN 调试，提供了更为丰富的功能，基本接近 H5 和小程序的调试体验。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/100840fyajhy4rqq4kicar.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100840fyajhy4rqq4kicar.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这样我们就拥有了一个正常的开发调试环境，接下来就可以进行高效的开发了，由于我们前面在 H5 和小程序版本阶段已经完成了绝大部分的业务逻辑开发，所以针对 RN 版本的主要工作集中在 iOS 和安卓不同机型的样式和交互适配上。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在样式适配这块，不得不提下 Taro 针对我们常见的场景提供了一些最佳实践，可以作为布局参考：</p><pre class=\"hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Image</span>\r\nflex\r\nscalePx2dp\r\n</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Taro RN 最佳实践集锦</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在实际开发过程中也遇到不少兼容性问题，这里整理出来以供大家参考：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">文本要用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;Text&gt;</code> 标签包起来，因为 RN 没有 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>textNode</code> 的概念；</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">使用 Swiper 时在外面包一个 View，否则设置 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>margin</code> 后会导致安卓下高度异常；</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>Cannot read property 'x' of undefined</code> ，Swiper 底层使用的 react-native-swiper 导致的问题，Disable Remote JS Debug 就不会出现。</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">图片默认尺寸不对，RN 不会自动帮助设置图片尺寸，而是交给开发者自己处理，故意这样设计的；</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">Image 组件上不可以设置 onClick</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">实现基线对齐： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>vertical-align: baseline</code> ，用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;Text&gt;</code> 把需要基线对齐的组件包住即可。</p><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">{{</span> <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">20</span> }}&gt;</span>abc<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">{{</span> <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">40</span> }}&gt;</span>123<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span>&gt;</span>\r\n复制代码</pre></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">尽量避免使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>line-height</code> ，在安卓和 iOS 下表现不一致，而且即使设置为与 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>fontSize</code> 相同也会导致裁剪；</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">android 调试生产环境的 bundle，摇手机，选 Dev Setting，取消勾选第一项 Dev 即可；</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">iOS 调试生产环境的 bundle， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>AppDelegate.m</code> 中增加一行语句关闭 dev 即可：</p><pre class=\"prettyprint hljs groovy\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>[[RCTBundleURLProvider sharedSettings] <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">setEnableDev:</span><span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>];\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 找到这行，并在它的上面增加上面这行</span>\r\n  jsCodeLocation = [[RCTBundleURLProvider sharedSettings] <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">jsBundleURLForBundleRoot:</span>@<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"index\"</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">fallbackResource:</span>nil];\r\n复制代码</pre></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;Text&gt;</code> 与 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;View&gt;</code> 支持的 style 属性不相同。</p><pre class=\"prettyprint hljs awk\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&gt; [Text Style Props](https:<span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span>facebook.github.io<span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">/react-native/</span>docs<span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">/text-style-props \"Text Style Props\") &amp; [View Style Props](https:/</span><span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">/facebook.github.io/</span>\r\n复制代码</pre><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">react-native/docs/view-style-props)</p></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">render 方法中不要返回空字符串</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">下面的代码在 android 下会报错（empty_string 内容为空字符串）</p><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">View</span>&gt;</span>\r\n  {empty_string &amp;&amp; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span>&gt;</span>}\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">View</span>&gt;</span>\r\n复制代码</pre><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">因为 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>empty_string &amp;&amp; &lt;Text&gt;&lt;/Text&gt;</code> 的返回值是空字符串，RN 尝试把字符串添加到 View 的 children 时在安卓环境下会报错：</p><pre class=\"prettyprint hljs dockerfile\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>Error: Cannot <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">add</span><span class=\"bash\"> a child that doesn<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'t have a YogaNode\r\n</span></span>复制代码</pre></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>border-radius</code> 导致背景色异常，单独给某个角设置圆角时，没有设置圆角的边会出现一块与背景色颜色相同，但半透明的色块。</p><pre class=\"hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">transform</span>:tanslate()\r\n</pre></li><li style=\"line-height: 1.7em; list-style-type: disc;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">透明 View 无法点击的问题，给设置了 onClick 的元素添加透明背景色即可：</p></li></ul><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>style={{ backgroundColor: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"transparent\"</span> }}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>不可以用 scss 写，只有写在 JSX 上的才有效，Taro 编译时可能把透明背景色忽略了。</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">一像素缝隙问题</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">可能是 RN 布局引擎的问题，或单位转换以及浏览器渲染中的精度损失问题。可以调整页面结构来绕过。 或者简单粗暴一点，设置负 margin 值盖住缝隙。</p></li></ul><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>跨平台开发</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>JS 文件</h4><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1、文件拆分的方式</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>要\"完美\"的编译出三端代码，首先要解决的是公共类库的适配问题，好在兄弟业务团队已经沉淀有完成度较高的三端公共类库，利用 Taro 提供的跨平台开发能力，抹平三端方法名和参数不统一的情况，即可很好的解决公共类库的适配问题，如下所示：</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>.\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">goto</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.h5</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.js</span>\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">goto</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.rn</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.js</span>\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">goto</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.weapp</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.js</span>\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">request</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.h5</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.js</span>\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">request</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.rn</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.js</span>\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">request</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.weapp</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.js</span>\r\n└── ...\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>request</code> 公共组件为例，三端代码如下：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>request.h5.js</p><pre class=\"prettyprint hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> request from <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@legos</span>/request'</span>\r\nexport { <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">request</span> }\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>request.rn.js</p><pre class=\"prettyprint hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> request from <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">@wqvue</span>/jdreact-request'</span>\r\nexport { <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">request</span> }\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>request.weapp.js（由于小程序的公共组件没有发布至 npm，这里引用的本地项目源文件）</p><pre class=\"prettyprint hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-section\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">import</span> { <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">request</span> } from <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../../../common/request/request.js'</span>\r\nexport { <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">request</span> }\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如遇到需要适配的方法参数不一致或者增加额外处理的情况，可进行再包装确保最终输出的接口一致，如下：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>goto.rn.js</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> jump <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'@wqvue/jdreact-jump'</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">goto</span>(<span class=\"hljs-params\">url, params = {}, options = {}</span>) </span>{\r\n  jump(url, options.des || <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'m'</span>, options.source || <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'JDPingou'</span>, params)\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> goto\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>文件引入的时候我们正常使用就好，Taro 在编译的时候为我们编译对应的平台的文件</p><pre class=\"prettyprint hljs go\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">goto</span> from <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'./goto.js'</span>\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2、条件编译的方式</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>解决了公共类库适配之后，接下来就可以专注于业务代码开发了，同样业务代码在三端也可能存差异的情况，可以用 Taro 提供的环境变量来达到目的，示例代码如下：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (process.env.TARO_ENV === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'h5'</span>) {\r\n  <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.speedReport</span>(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">8</span>) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// [测速上报] 首屏渲染完成</span>\r\n} <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (process.env.TARO_ENV === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'weapp'</span>) {\r\n  <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">speed</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.mark</span>(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>)<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.report</span>() <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// [测速上报] 首屏渲染完成</span>\r\n} <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (process.env.TARO_ENV === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'rn'</span>) {\r\n  <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">speed</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.mark</span>(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">7</span>)<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.report</span>() <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// [测速上报] 首屏渲染完成</span>\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>CSS 文件</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以上是 js 的代码处理方式，对于 css 文件及代码，同样也有类似的处理。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1、文件拆分的方式</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>比如 RN 相对于 H5 和小程序的样式就存在比较大的差异，RN 支持的样式是 CSS 的子集，所以很多看起来很常见的样式是不支持的，可以通过以下方式进行差异化处理：</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">index</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.base</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.scss</span>\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">index</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.rn</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.scss</span>\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">index</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.scss</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里以 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>index.base.scss</code> 作为三端都能兼容的公共样式（名字可以任取，不一定为 xxx.base.scss）， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>index.rn.scss</code> 则为 RN 端独特的样式， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>index.scss</code> 则为 H5 和小程序独特的样式，因为 H5 和小程序样式基本上没有什么差异，这里合为一个文件处理。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2、条件编译的方式</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>Taro 也支持样式文件内的条件编译，语法如下：</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* #ifdef %PLATFORM% */</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 指定平台保留</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* #endif */</span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* #ifndef %PLATFORM% */</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 指定平台剔除</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* #endif */</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>%PLATFORM%</code> 的取值请参考 <a target=\"_blank\" href=\"https://nervjs.github.io/taro/docs/envs.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">Taro 内置环境变量</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>以下为示例代码：</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.selector</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#fff</span>;\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* #ifndef RN */</span>\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">box-shadow</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1px</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1px</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1px</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">rgba</span>(0, 0, 0, .1);\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* #endif */</span>\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>编译为 H5 和小程序的样式为：</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.selector</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#fff</span>;\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">box-shadow</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1px</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1px</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1px</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">rgba</span>(0, 0, 0, .1);\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>RN 的样式为：</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.selector</span> {\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#fff</span>;\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>两种方式选其一即可，这样就能开开心心的编写业务代码了。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>有些许遗憾的是产品经理对这次新版首页有着明确的上线优先级：先 H5 版，再微信小程序版，最后是 RN 版，这就为后续 RN 版本跟 H5 和 小程序版本分道扬镳埋下了伏笔，条件允许的话建议优先以 RN 版本为基准进行开发，以免开发完成 H5 和小程序之后发现对结构和样式进行大的调整，因为 RN 对样式确实会弱一些。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>性能优化</h3><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>图片优化</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>电商性质的网站，会存在大量的素材或商品图片， 往往这些会对页面造成较大的性能影响。得益于京东图床服务，提供强大的图片定制功能，让我们在图片优化方面省去大量工作。以引入商品图片 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>\"https://img10.360buyimg.com/mobilecms/s355x355_jfs/t1/55430/24/116/143859/5cd27c99E71cc323f/0e8da8810fb49796.jpg!q70.dpg.webp\"</code> 为样本，我们对图片应用做了部分优化：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">根据容器大小适当裁剪图片尺寸：s355x355_jfs</li><li style=\"line-height: 1.7em; list-style-type: disc;\">根据网络环境设置图片品质参数：0e8da8810fb49796.jpg!q70</li><li style=\"line-height: 1.7em; list-style-type: disc;\">根据浏览器环境合理选择图片类型：0e8da8810fb49796.jpg!q70.dpg.webp</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为 Image 标签设置 lazyload 属性，这样可以在 H5 和小程序下获得懒加载功能。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>接口聚合直出</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>起初京喜首页的首屏数据涉及的后端接口多达 20 余个，导致整体数据返回时间较长；为了解决此项痛点，我们联合后端团队，独立开发首屏专用的 <strong style=\"text-indent: 0px;\">聚合直出接口</strong> 。一方面，将众多接口请求合并成一个，减少接口联动请求带来的性能损耗；另一方面，将复杂的业务逻辑挪到后端处理，前端只负责视图渲染和交互即可，减少前端代码复杂度；通过此项优化，页面性能和体验得到极大改善。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>缓存优先策略</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于京喜业务主要围绕下沉市场，其用户群体的网络环境会更加复杂，要保障页面的性能，减少网络延时是一项重要措施。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为了提升用户二次访问的加载性能，我们决定采用 <strong style=\"text-indent: 0px;\">缓存优先策略</strong> 。即用户每次访问页面时所请求的主接口数据写入本地缓存，同时用户每次访问都优先加载缓存数据，形成一套规范的数据读取机制。通过优先读取本地缓存数据，可让页面内容在极短时间内完成渲染；另外，本地缓存数据亦可作为页面兜底数据，在用户网络超时或故障时使用，可避免页面空窗的情景出现。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/100840pxj0470ygdd057yp.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100840pxj0470ygdd057yp.jpg\"></a></p></figure><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>高性能瀑布流长列表</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首页紧接着首屏区域的是一个支持下滑加载的瀑布流长列表，每次滑到底部都会异步拉取 20 条数据，总计会拉取将近 500 条数据，这在 iOS 下交互体验还比较正常。但是在配置较低的安卓机型下，当滑动到 2 到 3 屏之后就开始出现严重卡顿，甚至会闪退。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>针对这种场景也尝试过用 FlatList 和 SectionList 组件来优化，但是它们都要求规则等高的列表条目，于是不得不自己来实现不规则的瀑布流无限滚动加载。其核心思路是通过判断列表的条目是否在视窗内来决定图片是否渲染，要优化得更彻底些得话，甚至可以移除条目内所有内容只保留容器，以达到减少内容节点以及内存占用，不过在快速进行滑动时比较容易出现一片白框，算是为了性能损失一些体验，整体上来说是可以接受得。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>由于 RN 下在获取元素坐标偏移等数据相对 H5 和小程序要麻烦得到，具体的实现细节可以查看抽离出来的简单实现 <a target=\"_blank\" href=\"https://github.com/aNd1coder/taro-waterfall\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">Taro 高性能瀑布流组件（for RN）</a> 。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>写在最后</h2><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201912/04/100840r6vt6k9z6z9vxmmt.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/100840r6vt6k9z6z9vxmmt.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这篇文章从技术选型、开发实录再到性能优化三个维度对京喜首页改版做了简单总结。整个项目实践下来，证实 Taro 开发框架 已完全具备投入大型商业项目的条件。虽在多端开发适配上耗费了一些时间，但仍比各端独立开发维护工作量要少；在前端资源匮乏的今天，选择成熟的开发工具来控制成本、提升效率，已是各团队的首要工作目标。 同时，京喜作为京东战略级业务，拥有千万级别的流量入口，我们对页面的体验优化和性能改进远不止于此，希望每一次微小的改动能为用户带来愉悦的感受，始终为用户提供优质的产品体验。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>欢迎关注凹凸实验室博客： <a target=\"_blank\" href=\"https://aotu.io/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">aotu.io</a></p> </td>", "pub_time": "2019-12-4 00:45", "author": "Rolan"}
{"title": "小程序解析excel表格并存储到云数据库 ", "content": "<td id=\"article_content\"> \n                     \n                    <p data-anchor-id=\"zd1b\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>最近一直比较忙，答应大家的<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>解析excel一直没有写出来，今天终于忙里偷闲，有机会把这篇文章写出来给大家了。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"pjme\" id=\"老规矩先看效果图\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>老规矩先看效果图</h3><div><p><a href=\"data/attachment/portal/201912/04/102505efff5x8xvhx55lf5.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102505efff5x8xvhx55lf5.png\"></a></p></div><p data-anchor-id=\"hq58\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>效果其实很简单，就是把excel里的数据解析出来，然后存到云数据库里。说起来很简单。但是真的做起来的时候，发现其中要用到的东西还是很多的。不信。。。。 那来看下流程图</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"la9u\" id=\"流程图\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>流程图</h3><div><p><a href=\"data/attachment/portal/201912/04/102507ocsz824tt4oktp3g.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102507ocsz824tt4oktp3g.png\"></a></p></div><p data-anchor-id=\"7aau\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>通过流程图，我看看到我们这里使用了云函数，云存储，云数据库。 <br>流程图主要实现下面几个步骤</p><p data-anchor-id=\"5o9n\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>1，使用wx.chooseMessageFile选择要解析的excel表格 <br>2，通过wx.cloud.uploadFile上传excel文件到云存储 <br>3，云存储返回一个fileid 给我们 <br>4，定义一个excel云函数 <br>5，把第3步返回的fileid传递给excel云函数 <br>6，在excel云函数里解析excel，并把数据添加到云数据库。 <br>可以看到最神秘，最重要的就是我们的excel云函数。 <br>所以我们先把前5步实现了，后面重点讲解下我们的excel云函数。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"4t05\" id=\"一选择并上传excel表格文件到云存储\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>一，选择并上传excel表格文件到云存储</h3><p data-anchor-id=\"42n0\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>这里我们使用到了云开发，使用云开发必须要先注册一个小程序，并给自己的小程序开通云开发功能。这个知识点我讲过很多遍了，还不知道怎么开通并使用云开发的同学，去翻下我前面的文章，或者看下我录的讲解视频《5小时入门小程序云开发》</p><p data-anchor-id=\"nwlz\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>1，先定义我们的页面 <br>页面很简单，就是一个按钮如下图，点击按钮时调用chooseExcel方法，选择excel</p><p><a href=\"data/attachment/portal/201912/04/102505axex04ppyhxzwfe8.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102505axex04ppyhxzwfe8.png\"></a></p><p data-anchor-id=\"f3o3\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>对应的wxml代码如下</p><p><a href=\"data/attachment/portal/201912/04/102506e5euadaa2orqrrdw.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102506e5euadaa2orqrrdw.png\"></a></p><p data-anchor-id=\"w04e\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>2，编写文件选择和文件上传方法</p><p><a href=\"data/attachment/portal/201912/04/102503oajjk6kbpp3iorwj.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102503oajjk6kbpp3iorwj.png\"></a></p><p data-anchor-id=\"n1k2\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>上图的chooseExcel就是我们的excel文件选择方法。 <br>uploadExcel就是我们的文件上传方法，上传成功以后会返回一个fildID。我们把fildID传递给我们的jiexi方法，jiexi方法如下</p><p data-anchor-id=\"uom6\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>3 把fildID传递给云函数</p><p><a href=\"data/attachment/portal/201912/04/102506kd4br1fxqpz2dzyq.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102506kd4br1fxqpz2dzyq.png\"></a></p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"g4yv\" id=\"二解下来就是定义我们的云函数了\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>二，解下来就是定义我们的云函数了。</h3><p data-anchor-id=\"vpco\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>1，首先我们要新建云函数</p><p><a href=\"data/attachment/portal/201912/04/102504kzoufwc6686w52uu.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102504kzoufwc6686w52uu.png\"></a></p><p data-anchor-id=\"0wc4\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>如果你还不知道如何新建云函数，可以翻看下我之前写的文章，也可以看我录的视频《5小时入门小程序云开发》 <br>如下图所示的excel就是我们创建的云函数</p><p><a href=\"data/attachment/portal/201912/04/102505pkkskakakpwka2fi.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102505pkkskakakpwka2fi.png\"></a></p><p data-anchor-id=\"79jq\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>2，安装node-xlsx依赖库</p><p><a href=\"data/attachment/portal/201912/04/102507d8rzrdkr7b255518.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102507d8rzrdkr7b255518.png\"></a></p><p data-anchor-id=\"7r5z\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>如上图所示，右键excel，然后点击在终端中打开。 打开终端后， <br>输入 npm install node-xlsx 安装依赖。可以看到下图安装中的进度条</p><p><a href=\"data/attachment/portal/201912/04/102506c4e3r72iie14iiz8.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102506c4e3r72iie14iiz8.png\"></a></p><p data-anchor-id=\"w6ri\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>这一步需要你电脑上安装过node.js并配置npm命令。 <br>3，安装node-xlsx依赖库完成</p><p><a href=\"data/attachment/portal/201912/04/102502e48gqqae3dcn3g0q.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102502e48gqqae3dcn3g0q.png\"></a></p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"9i7q\" id=\"三编写云函数\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>三，编写云函数</h3><p data-anchor-id=\"b46d\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>我把完整的代码贴出来给大家</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"ozs3\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> cloud </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">require</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'wx-server-sdk'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">cloud</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">init</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> xlsx </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">require</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'node-xlsx'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> db </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> cloud</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">database</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">exports</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">main </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> async</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">event</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> context</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">let</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    fileID</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">event</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//1,通过fileID下载云存储里的excel文件</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> await cloud</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">downloadFile</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    fileID</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> fileID</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> buffer </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">fileContent</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> tasks </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[]</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//用来存储所有的添加数据操作</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//2,解析excel文件里的数据</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> sheets </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> xlsx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">parse</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">buffer</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//获取到所有sheets</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  sheets</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">forEach</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">sheet</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">sheet</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'name'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">]);</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">for</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> rowId </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> sheet</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'data'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">])</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">rowId</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> row </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> sheet</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'data'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">][</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">rowId</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">];</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//第几行数据</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">rowId </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&amp;&amp;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> row</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//第一行是表格标题，所有我们要从第2行开始读</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//3，把解析到的数据存到excelList数据表里</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> promise </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> db</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">collection</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'users'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">add</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> row</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">],</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//姓名</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              age</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> row</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">],</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//年龄</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              address</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> row</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">2</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">],</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//地址</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">              wechat</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> row</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">3</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">]</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//wechat</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        tasks</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">push</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">promise</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// 等待所有数据添加完成</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">let</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> result </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> await </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Promise</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">all</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">tasks</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">).</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">then</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}).</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">catch</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">err</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> err</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> result</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li></ol></pre><p data-anchor-id=\"gqal\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>上面代码里注释的很清楚了，我这里就不在啰嗦了。 <br>有几点注意的给大家说下</p><p data-anchor-id=\"3y8g\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>1，要先创建数据表</p><p><a href=\"data/attachment/portal/201912/04/102505vy0w77ijyk7k6ycc.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102505vy0w77ijyk7k6ycc.png\"></a></p><p data-anchor-id=\"pgp7\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>2，有时候如果老是解析失败，可能是有的电脑需要在云函数里也要初始化云开发环境</p><p><a href=\"data/attachment/portal/201912/04/102504m4iixwxhlulxrij4.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102504m4iixwxhlulxrij4.png\"></a></p><p data-anchor-id=\"t1fc\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>四，解析并上传成功 <br>如我的表格里有下面三条数据</p><p><a href=\"data/attachment/portal/201912/04/102504kr57e9brcrrzfnek.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102504kr57e9brcrrzfnek.png\"></a></p><p data-anchor-id=\"0n2r\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>点击上传按钮，并选择我们的表格文件</p><p><a href=\"data/attachment/portal/201912/04/102505gy34eaqw48wcg14c.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102505gy34eaqw48wcg14c.png\"></a></p><p data-anchor-id=\"yuxo\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>上传成功的返回如下，可以看出我们添加了3条数据到数据库</p><p><a href=\"data/attachment/portal/201912/04/102503d68ejenazzj6yny8.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102503d68ejenazzj6yny8.png\"></a></p><p data-anchor-id=\"k0xr\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>添加成功效果图如下</p><p><a href=\"data/attachment/portal/201912/04/102503lct45fc5llfbto8y.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102503lct45fc5llfbto8y.png\"></a></p><p data-anchor-id=\"1res\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>到这里我们就完整的实现了小程序上传excel数据到数据库的功能了。</p><p data-anchor-id=\"rz8x\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>再来带大家看下流程图</p><p><a href=\"data/attachment/portal/201912/04/102506lr3dlu6l8maafuea.png\" target=\"_blank\"><img src=\"data/attachment/portal/201912/04/102506lr3dlu6l8maafuea.png\"></a></p><p data-anchor-id=\"zrkq\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>如果你有遇到问题，可以在底部留言，我看到后会及时解答。后面我会写更多小程序云开发实战的文章出来。也会录制本节的视频出来，敬请关注。</p> </td>", "pub_time": "2019-12-4 00:52", "author": "Rolan"}
{"title": "小程序不同页面的异步回调，callback和promise的使用讲解 ", "content": "<td id=\"article_content\"> \n                     \n                    <p data-anchor-id=\"d2ms\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>发个扫盲贴，大神请绕道。最近好多同学问我如何再请求数据成功后直接使用数据。我们通常的做法就是在请求成功后，再调用我们定义的方法，进而使用数据。如下代码</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"384g\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  onLoad</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">let</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> that</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">this</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    wx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">cloud</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">database</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">().</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">collection</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"users\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">).</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">get</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      success</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        that</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">setData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      fail</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  showData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">dataList</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//.........做数据处理</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li></ol></pre><p data-anchor-id=\"44hv\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>我们这样写其实也没什么不对，但是如果数据请求和使用是在两个不同的页面呢。 比如我们在app.js里请求位置，获取用户信息。然后在首页index.js里要使用这些数据，那么我们这么写就有问题了。下面就来教大家两种方式来很好的解决这个问题。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"0eqj\" id=\"一通过callback回调\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>一，通过callback回调。</h3><p data-anchor-id=\"l0an\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>先看下代码，然后我再具体给大家讲解下原理。</p><p data-anchor-id=\"ssn0\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>app.js里定义如下方法</p><p><a href=\"data/attachment/portal/201912/05/100538krfiv3s9a6sb0vn4.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/100538krfiv3s9a6sb0vn4.jpg\"></a></p><p data-anchor-id=\"uzok\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>然后再index.js 里这么使用</p><p><a href=\"data/attachment/portal/201912/05/100537uaepplt2llelopdz.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/100537uaepplt2llelopdz.jpg\"></a></p><p data-anchor-id=\"5iv6\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>这时候，其实就可以看到了，我们在首页index.js里调用了app.js里的请求数据的方法，并且可以在index.js里直接使用数据。</p><p data-anchor-id=\"jjkb\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>原理讲解 <br>原理其实很简单，就是我们在app.js里的获取数据的方法里定义一个参数。而这个参数和普通参数唯一不同的地方，就是这个参数是个function方法</p><p><a href=\"data/attachment/portal/201912/05/100538qtzih4q33h3wnjhr.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/100538qtzih4q33h3wnjhr.jpg\"></a></p><p data-anchor-id=\"vbh9\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>我们上图的callback参数，其实就是下图 function(result){}</p><p><a href=\"data/attachment/portal/201912/05/100538obja8fujjoui63z3.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/100538obja8fujjoui63z3.jpg\"></a></p><p data-anchor-id=\"i9nn\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>把function方法作为一个参数传递进去的目的，就是为了下面的回调。</p><p><a href=\"data/attachment/portal/201912/05/100538gi35edg3d8li5o3i.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/100538gi35edg3d8li5o3i.jpg\"></a></p><p data-anchor-id=\"qi37\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>我们这个callBack参数，可以在请求数据成功或者失败的时候作为一个方法调用。这样就可以把请求到的数据，回传回去了。 <br>讲的有点绕，不知道大家有没有被绕晕。这在java开发中，其实就相当于监听者模式。说白了就是在一个页面里监听另外一个页面的动作，如获取数据成功，当监听到数据获取成功这个动作以后，就可以直接把数据回传回来了。 <br>如果觉得这种方法有点绕，不好使用，我们就用下面的这个第二种方式。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"nzfm\" id=\"二promise\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>二，promise</h3><p data-anchor-id=\"owmf\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>promise的好处就是可以不用那个层层传递，不用那么绕。 还是先看代码，后面结合代码给大家讲下原理 <br>app.js里定义如下方法</p><p><a href=\"data/attachment/portal/201912/05/100539j9rrctpxry9acrma.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/100539j9rrctpxry9acrma.jpg\"></a></p><p data-anchor-id=\"e31g\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>index.js里这么调用</p><p><a href=\"data/attachment/portal/201912/05/100537uaepplt2llelopdz.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/100537uaepplt2llelopdz.jpg\"></a></p><p data-anchor-id=\"ktot\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>用句通俗的话说，就是通过promise让我们的数据请求和使用看上去是在同一个页面完成。怎么实现的呢 <br>1，在app.js里把数据请求封装到promise里，然后把promise返回到我们的首页index.js里 <br>2，在首页里使用这个promise 实现数据的获取和使用。 <br>在具体些就是下面这几步 <br>promise基础用法</p><p><a href=\"data/attachment/portal/201912/05/100537hnm0p3nnmgn8zvp3.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/100537hnm0p3nnmgn8zvp3.jpg\"></a></p><p data-anchor-id=\"02k4\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>1、new 一个Promise对象 <br>2、请求数据的异步代码写在promise的函数中 <br>3、promise接受两个参数，一个resolve(已成功success)，一个reject(已失败fail) <br>4、promise有三种状态pendding(进行中，当new了promise就是pendding的状态)、fulfilled(已成功)、rejected(已失败)，当成功的时候调用resolve将状态改为已成功，当失败的时候调用reject将状态改为已失败，一旦状态发生改变之后，状态就凝固了，后面就无法改变状态了，成功会将成功的数据返回，失败会将失败的信息返回。 <br>5、在需要获取数据的地方通过promise.then()的方式获取，这里面接受两个参数，都是匿名函数，第一个是接受成功的函数，第二个是失败时候的函数</p><p><a href=\"data/attachment/portal/201912/05/100539phw08433k67fwu4k.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/100539phw08433k67fwu4k.jpg\"></a></p><p data-anchor-id=\"ep9q\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>好了，到这里我们两种不同页面的异步回调就给大家将完了。代码就完整的给大家贴出来吧，方便大家日后使用</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"xobi\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">app</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">js</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//app.js</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">App</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//第二种，通过promise</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  promiseGetData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">let</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> promise </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Promise</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">success</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> fail</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      wx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">cloud</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">database</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">().</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">collection</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"users\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">).</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">get</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        success</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          success</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        fail</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          fail</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> promise</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//第一种，通过callback的方式来实现回调</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  callBackGetData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">callBack</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    wx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">cloud</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">database</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">().</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">collection</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"users\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">).</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">get</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      success</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        callBack</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      fail</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        callBack</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li></ol></pre><p data-anchor-id=\"ya69\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>index.js</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"xt2i\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// 异步调用，callback</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> app </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> getApp</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Page</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  clickBtn</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//按钮点击</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//callback方式</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// app.callBackGetData(function(result) {</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//   console.log(\"dataList\", result)</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// })</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//promise方法</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">let</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> promise </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> app</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">promiseGetData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    promise</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">then</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">((</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//获取成功的结果，res中存着获取成功时的数据</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"成功\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> res</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">error</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// 获取数据失败时</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"失败\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> error</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li></ol></pre><p data-anchor-id=\"7b6z\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'><br></p> </td>", "pub_time": "2019-12-5 00:23", "author": "Rolan"}
{"title": "当小程序的flex布局遇到button时，justify-content不起作用的原因及解决方案 ... ", "content": "<td id=\"article_content\"> \n                     \n                    <p data-anchor-id=\"jjkb\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>当<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的flex布局遇到button时，justify-content不起作用的原因及解决方案 <br>在做小程序的时候，要实现下面的搜索历史界面</p><p><a href=\"data/attachment/portal/201912/05/101458dvjxzlxl2sb0w0vs.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/101458dvjxzlxl2sb0w0vs.jpg\"></a></p><p data-anchor-id=\"ktot\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>下面的搜索很明显的想到是用flex布局，然后把justify-content设置为justify-content: flex-start; <br>代码如下：</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"jwxt\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"flex\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;button</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"item\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">1</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/button&gt;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;button</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"item\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">2</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/button&gt;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;button</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"item\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">3</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/button&gt;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;button</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"item\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">4</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/button&gt;</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;button</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"item\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">5</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/button&gt;</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;button</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"item\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">6</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/button&gt;</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;button</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"item\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">7</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/button&gt;</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/view&gt;</span></code></li></ol></pre><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"xt2i\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">flex</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  display</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> flex</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  flex</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">wrap</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> wrap</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  justify</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">content</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> flex</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">start</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">flex </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">item</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  width</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">216rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  background</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">color</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> red</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">bottom</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">34rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li></ol></pre><p><a href=\"data/attachment/portal/201912/05/101458ksry74pboivdvikp.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/05/101458ksry74pboivdvikp.jpg\"></a></p><p data-anchor-id=\"iymu\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>可效果却不尽人意，发现justify-content不起作用，无论怎么设置都是space-around的效果。 <br>经过排查，发现原因是小程序button中的默认样式中的margin-left: auto;margin-right: auto;所引起的。</p><p data-anchor-id=\"8p4x\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>flex 格式化上下文中，在通过 justify-content 和 align-self 进行对齐之前，任何正处于空闲的空间都会分配到该方向的自动 margin 中去。参考自探秘 flex 上下文中神奇的自动 margin</p><p data-anchor-id=\"c04o\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>原因找到了，具体修改就容易多了，我们可以覆盖button的margin-left和margin-right的默认值，或者在button外面包裹一层view。</p><p data-anchor-id=\"lkqp\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>在遇到这个问题之前，我也没想到过flex和margin之间还能这么用，涨姿势了</p> </td>", "pub_time": "2019-12-5 00:31", "author": "Rolan"}
{"title": "微信小程序|CSS的内边距和圆框 ", "content": "<td id=\"article_content\"> \n                     \n                    <p data-anchor-id=\"fxg2\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>本文首发于微信公众号： \"算法与编程之美\"，欢迎关注，及时了解更多此系列文章。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"a8hy\" id=\"问题描述\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>问题描述</h3><p data-anchor-id=\"cw3y\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>在制作<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的时候会经常用到浮动来设计各种组件的排版，微信小程序对排版的要求很高。 光有浮动是远远不够的，如果一个板块内的组件过多就会变得混乱。 所以就需要用设置内边框来调整位置。 微信小程序中会有很多的头像设置，所以就会用到圆框。 那么如何来设置css盒子的内边框和头像的圆框呢？</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"pbjo\" id=\"解决方案\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>解决方案</h3><p data-anchor-id=\"fynw\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>跟网页一样小程序也是用很多标签来定义的。 需要用css盒子来设置解决问题，并调用来实现问题。</p><p data-anchor-id=\"29t9\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>（1）内边距</p><p data-anchor-id=\"xmpr\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>我们需要用到margin这个标签代表内边距，用rpx来设置距离单位。 在.wxss中设置，然后在wxml中调用就可以了。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"nu82\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">离左边的距离</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">right</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">离右边的距离</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">top</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">离上边的距离</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">bottom</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">离下边的距离</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">top</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">10rpx</span></code></li></ol></pre><p data-anchor-id=\"8dvs\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>（2）框 <br>用border来定义框线的宽度，用width和heigth来设置框的长宽。</p><p data-anchor-id=\"3dpb\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>solid来定义颜色。 跟内边距一样在.wxss中设置，然后在wxml中调用。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"x7qe\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">view4</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">top</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">width</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">800rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">height</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">115rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">border</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">5rpx</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> solid whitesmoke</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li></ol></pre><p data-anchor-id=\"w6f0\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>（3）圆框</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"vs56\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">border</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">radius</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">定义圆框。</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">view3</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">top</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">350rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">190rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">height</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">60rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">width</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">220rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">float</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">background</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">color</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> rgb</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">131</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">178</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">240</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">border</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">radius</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> r5px</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li></ol></pre><p data-anchor-id=\"ps43\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>（4）圆框头像</p><p data-anchor-id=\"w1rt\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>跟上面的圆框一样也是用border-radius来定义，但不同的是后面的设置： %。 就是一个圆的弧度不同，rpx是将框的四角成为圆弧而%是成为一个圆。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"qn1m\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">view1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">float</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">290rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">margin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">top</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">120rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">border</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">radius</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">50</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li></ol></pre><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"mxpb\" id=\"结语\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'></h3><p><a href=\"data/attachment/portal/201912/09/095041rrdtc9ugub0sxgi3.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201912/09/095041rrdtc9ugub0sxgi3.jpg\"></a></p><h3 data-anchor-id=\"mxpb\" id=\"结语\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>结语</h3><p data-anchor-id=\"4jyt\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>对标签的正确使用和调用， 最麻烦的是对</p><p data-anchor-id=\"cboc\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>标签后面的单位设置，必须充满耐心，你需要不断地调才能调到你需要的位置，才能使界面美观。</p><p data-anchor-id=\"nc34\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>END</p><p data-anchor-id=\"hbuz\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>实习编辑 | 王文星</p><p data-anchor-id=\"c2ul\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>责 编 | 江汪霖</p><p data-anchor-id=\"2mhw\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>where2go 团队</p><p data-anchor-id=\"6mwz\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>微信号： 算法与编程之美</p> </td>", "pub_time": "2019-12-9 00:02", "author": "Rolan"}
{"title": "微信-小程序开发基础知识笔记 ", "content": "<td id=\"article_content\"> \n                     \n                    <h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>绑定事件的方法：</h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>1.bindtab和catchtab，catchtab可以阻止事件冒泡</p><pre class=\"hljs xml\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">bindtap</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'onClick'</span>&gt;</span><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">catchtap</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'onClick'</span>&gt;</span><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>2.互斥事件绑定 mut-bind</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>一个 mut-bind 触发后，如果事件冒泡到其他节点上，其他节点上的 mut-bind 绑定函数不会被触发，但 bind 绑定函数和 catch 绑定函数依旧会被触发。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><em style=\"box-sizing: border-box;\">在想要规定冒泡区间时可以用到。</em></p><pre class=\"hljs xml\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">mut-bind:tap</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'onClick'</span>&gt;</span><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n</code></pre><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>在基础库版本 2.7.1 以上，可以使用 mark 来识别具体触发事件的 target 节点</h5><pre class=\"hljs xml\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">mark:myMark</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"last\"</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">bindtap</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"bindViewTap\"</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">button</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">mark:anotherMark</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"leaf\"</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">bindtap</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"bindButtonTap\"</span>&gt;</span>按钮<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">button</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>在上述 WXML 中，如果按钮被点击，将触发 bindViewTap 和 bindButtonTap 两个事件，事件携带的 event.mark 将包含 myMark 和 anotherMark 两项。</p><pre class=\"hljs css\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-selector-tag\" style=\"box-sizing: border-box; font-weight: bold;\">Page</span>({\r\n\r\n<span class=\"hljs-attribute\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">bindViewTap</span>: <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">function</span>(e) {\r\n\r\ne.mark.myMark === <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"last\"</span> // true\r\n\r\ne.mark.anotherMark === <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"leaf\"</span> // true\r\n\r\n}\r\n\r\n})\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>mark 和 dataset 很相似，主要区别在于：</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>1.mark可以冒泡，如果存在同名的 mark ，父节点的 mark 会被子节点覆盖。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>2.在自定义组件中接收事件时， mark 不包含自定义组件外的节点的 mark。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>3.不同于 dataset ，节点的 mark 不会做连字符和大小写转换。</p><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>.wxs文件的应用</h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>个人理解 .wxs文件就相当于cocos的prefab。执行起来比js性能要快。但是wxs是一门语言，平行于JavaScript。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/wxs/\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px; border-bottom: 1px solid rgba(0, 154, 97, 0.25); padding-bottom: 1px;\">wxs基础语法</a></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>有频繁用户交互的效果在<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>上表现是比较卡顿的，这时建议使用wxs，为什么？</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>因为小程序分为视图层和逻辑层，比如需要<a href=\"https://developers.weixin.qq.com/s/L1G0Dkmc7G8a\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px; border-bottom: 1px solid rgba(0, 154, 97, 0.25); padding-bottom: 1px;\">拖动</a>的功能，touchmove事件从视图层抛到逻辑层，逻辑层经过处理，通过this.setData到视图层。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><strong style=\"box-sizing: border-box;\">1. 一次 touchmove 的响应需要经过 2 次的逻辑层和渲染层的通信以及一次渲染，通信的耗时比较大。</strong></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><strong style=\"box-sizing: border-box;\">2. 此外 setData 渲染也会阻塞其它脚本执行，导致了整个用户交互的动画过程会有延迟。</strong></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>WXS 函数的除了纯逻辑的运算，还可以通过封装好的ComponentDescriptor 实例来访问以及设置组件的 class 和样式，对于交互动画，设置 style 和 class 很方便。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/interactive-animation.html\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px; border-bottom: 1px solid rgba(0, 154, 97, 0.25); padding-bottom: 1px;\">代码示例：</a></p><pre class=\"hljs actionscript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">var</span> wxsFunction = <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(event, ownerInstance)</span> </span>{\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">var</span> instance = ownerInstance.selectComponent(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'.classSelector'</span>) <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 返回组件的实例</span>\r\n\r\ninstance.setStyle({\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"font-size\"</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"14px\"</span> <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 支持rpx</span>\r\n\r\n})\r\n\r\ninstance.getDataset()\r\n\r\ninstance.setClass(className)\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// ...</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">return</span> <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">false</span> <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 不往上冒泡，相当于调用了同时调用了stopPropagation和preventDefault</span>\r\n\r\n}\r\n</code></pre><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px; border-bottom: 1px solid rgba(0, 154, 97, 0.25); padding-bottom: 1px;\">自定义组件</a></h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>上边在分析复杂交互时我们知道，频繁的调用this.setData会使页面卡顿，甚至导致小程序僵死。那么不想写或者说不会写wxs的开发者该怎么办呢？</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><strong style=\"box-sizing: border-box;\">此时可以通过将页面的 setData 改为 <a href=\"https://developers.weixin.qq.com/s/cRTvdPmO7d5T\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px; border-bottom: 1px solid rgba(0, 154, 97, 0.25); padding-bottom: 1px;\">自定义组件</a> 中的 setData 来提升性能。</strong></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>原因：自定义组件中的setData不会进行深复制。（深复制会在这个值被组件间传递时才发生）</p><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>自定义组件的规范</h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>1.在组件wxss中不应使用ID选择器、属性选择器和标签名选择器，就只使用class选择器准没错。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>2.在自定义组件的 js 文件中，需要使用 Component() 来注册组件。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>3.使用已注册的自定义组件前，首先要在页面的 json 文件中进行引用声明。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>4.自定义组件和页面所在项目根目录名不能以“wx-”为前缀，否则会报错。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>5.<code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;'>&lt;slot&gt;&lt;/slot&gt;</code>相当于react的this.props.children。</p><pre class=\"hljs xml\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">&lt;!-- component-tag-name组件 --&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">class</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"wrapper\"</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>这里是组件的内部节点<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">slot</span>&gt;</span><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">slot</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n</code></pre><pre class=\"hljs xml\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">&lt;!-- 引用组件的页面模板 --&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">component-tag-name</span>&gt;</span>\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">&lt;!-- 这部分内容将被放置在组件 &lt;slot&gt; 的位置上 --&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>这里是插入到组件slot中的内容<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">component-tag-name</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>6.默认情况下，一个组件的wxml中只能有一个slot。需要使用多slot时，可以在组件js中声明启用。</p><pre class=\"hljs typescript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\nComponent({\r\n\r\noptions: {\r\n\r\nmultipleSlots: <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">true</span> <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 在组件定义时的选项中启用多slot支持</span>\r\n\r\n},\r\n\r\nproperties: { <span class=\"hljs-regexp\" style=\"box-sizing: border-box; color: rgb(0, 153, 38);\">/\\* ... \\*/</span> },\r\n\r\nmethods: { <span class=\"hljs-regexp\" style=\"box-sizing: border-box; color: rgb(0, 153, 38);\">/\\* ... \\*/</span> }\r\n\r\n})\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>此时，可以在这个组件的wxml中使用多个slot，以不同的 name 来区分。</p><pre class=\"hljs xml\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">&lt;!-- 组件模板 --&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">class</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"wrapper\"</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">slot</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">name</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"before\"</span>&gt;</span><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">slot</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>这里是组件的内部细节<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">slot</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">name</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"after\"</span>&gt;</span><span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">slot</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>使用时，用 slot 属性来将节点插入到不同的slot上。</p><pre class=\"hljs xml\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">&lt;!-- 引用组件的页面模板 --&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">component-tag-name</span>&gt;</span>\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">&lt;!-- 这部分内容将被放置在组件 &lt;slot name=\"before\"&gt; 的位置上 --&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">slot</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"before\"</span>&gt;</span>这里是插入到组件slot name=\"before\"中的内容<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">&lt;!-- 这部分内容将被放置在组件 &lt;slot name=\"after\"&gt; 的位置上 --&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span> <span class=\"hljs-attr\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">slot</span>=<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"after\"</span>&gt;</span>这里是插入到组件slot name=\"after\"中的内容<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">component-tag-name</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">view</span>&gt;</span>\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>7.设置自定义组件的捕获和冒泡机制需要使用 triggerEvent 方法。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span></p><p><a href=\"data/attachment/portal/201911/22/114819gyr7ku11u13z2suu.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/114819gyr7ku11u13z2suu.jpg\"></a></p><pre class=\"hljs actionscript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 组件 my-component.js</span>\r\n\r\nComponent({\r\n\r\nmethods: {\r\n\r\nonTap: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">()</span></span>{\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>.triggerEvent(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'customevent'</span>, {}, { bubbles: <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">true</span>, composed: <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">true</span> })\r\n\r\n}\r\n\r\n}\r\n\r\n})\r\n</code></pre><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>组件中的<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/behaviors.html\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px; border-bottom: 1px solid rgba(0, 154, 97, 0.25); padding-bottom: 1px;\">behaviors</a></h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>个人理解：多个页面可能会共用一个功能，这个功能抽象后称为组件。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>多个组件共用一个方法或者多个方法，这类方法的集合称为behaviors。就tm理解成高阶组件就完了。</p><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>组件间关系<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/relations.html\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px; border-bottom: 1px solid rgba(0, 154, 97, 0.25); padding-bottom: 1px;\">relations</a></h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>官方说：有时需要实现这样的组件：</p><pre class=\"hljs xml\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">custom-ul</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">custom-li</span>&gt;</span> item 1 <span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">custom-li</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: border-box;\">custom-li</span>&gt;</span> item 2 <span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">custom-li</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"box-sizing: border-box; color: rgb(0, 0, 128);\">&lt;/<span class=\"hljs-name\" style=\"box-sizing: border-box;\">custom-ul</span>&gt;</span>\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>说custom-ul 和 custom-li 都是自定义组件，它们有相互间的关系，相互间的通信往往比较复杂。具体怎么个复杂需要单独拎出来一个ralations属性来处理，咱也不知道。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>使用方法：</p><pre class=\"hljs actionscript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// path/to/custom-ul.js</span>\r\n\r\nComponent({\r\n\r\nrelations: {\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'./custom-li'</span>: {\r\n\r\ntype: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'child'</span>, <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 关联的目标节点应为子节点</span>\r\n\r\nlinked: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(target)</span> </span>{\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 每次有custom-li被插入时执行，target是该节点实例对象，触发在该节点attached生命周期之后</span>\r\n\r\n},\r\n\r\nlinkChanged: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(target)</span> </span>{\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 每次有custom-li被移动后执行，target是该节点实例对象，触发在该节点moved生命周期之后</span>\r\n\r\n},\r\n\r\nunlinked: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(target)</span> </span>{\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 每次有custom-li被移除时执行，target是该节点实例对象，触发在该节点detached生命周期之后</span>\r\n\r\n}\r\n\r\n}\r\n\r\n},\r\n</code></pre><pre class=\"hljs actionscript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// path/to/custom-li.js</span>\r\n\r\nComponent({\r\n\r\nrelations: {\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'./custom-ul'</span>: {\r\n\r\ntype: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'parent'</span>, <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 关联的目标节点应为父节点</span>\r\n\r\nlinked: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(target)</span> </span>{\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 每次被插入到custom-ul时执行，target是custom-ul节点实例对象，触发在attached生命周期之后</span>\r\n\r\n},\r\n\r\nlinkChanged: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(target)</span> </span>{\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 每次被移动后执行，target是custom-ul节点实例对象，触发在moved生命周期之后</span>\r\n\r\n},\r\n\r\nunlinked: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(target)</span> </span>{\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 每次被移除时执行，target是custom-ul节点实例对象，触发在detached生命周期之后</span>\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n})\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><strong style=\"box-sizing: border-box;\"><em style=\"box-sizing: border-box;\">注意：必须在两个组件定义中都加入relations定义，否则不会生效。</em></strong></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>还有一种情况，如果你两个自定义组件都用了相同的behaviors，你可以使用这个behavior来代替组件路径作为关联的目标节点。</p><pre class=\"hljs typescript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// path/to/custom-form.js</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">var</span> customFormControls = <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">require</span>(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'./custom-form-controls'</span>)\r\n\r\nComponent({\r\n\r\nrelations: {\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'customFormControls'</span>: {\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">type</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'descendant'</span>, <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 关联的目标节点应为子孙节点</span>\r\n\r\ntarget: customFormControls\r\n\r\n}\r\n\r\n}\r\n\r\n})\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span></p><p><a href=\"data/attachment/portal/201911/22/114819skz4ltlkif49gxlt.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/22/114819skz4ltlkif49gxlt.jpg\"></a></p><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>组件中的<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/observer.html\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px; border-bottom: 1px solid rgba(0, 154, 97, 0.25); padding-bottom: 1px;\">observers</a></h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>官方定义他叫数据监听器，呵呵。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>使用方法：</p><pre class=\"hljs actionscript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\nComponent({\r\n\r\nattached: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">()</span> </span>{\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>.setData({\r\n\r\nnumberA: <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">1</span>,\r\n\r\nnumberB: <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">2</span>,\r\n\r\n})\r\n\r\n},\r\n\r\nobservers: {\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'numberA, numberB'</span>: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(numberA, numberB)</span> </span>{\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 在 numberA 或者 numberB 被设置时，执行这个函数</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>.setData({\r\n\r\nsum: numberA + numberB\r\n\r\n})\r\n\r\n}\r\n\r\n}\r\n\r\n})\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><strong style=\"box-sizing: border-box;\">如果需要监听所有子数据字段的变化，可以使用通配符 </strong>。</p><pre class=\"hljs actionscript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\nComponent({\r\n\r\nobservers: {\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'some.field.**'</span>: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(field)</span> </span>{\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 使用 setData 设置 this.data.some.field 本身或其下任何子数据字段时触发</span>\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// （除此以外，使用 setData 设置 this.data.some 也会触发）</span>\r\n\r\nfield === <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>.data.some.field\r\n\r\n},\r\n\r\n},\r\n\r\nattached: <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">function</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">()</span> </span>{\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 这样会触发上面的 observer</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>.setData({\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'some.field'</span>: { <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">/* ... */</span> }\r\n\r\n})\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 这样也会触发上面的 observer</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>.setData({\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'some.field.xxx'</span>: { <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">/* ... */</span> }\r\n\r\n})\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 这样还是会触发上面的 observer</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>.setData({\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'some'</span>: { <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">/* ... */</span> }\r\n\r\n})\r\n\r\n}\r\n\r\n})\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><strong style=\"box-sizing: border-box;\">特别地，仅使用通配符 </strong>可以监听全部 setData 。**</p><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>纯数据字段</h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>就是局部变量，不参与渲染，也不会传递。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>官方说这样声明后再用能提高性能，要不我才不用。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>使用方式：</p><pre class=\"hljs kotlin\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\nComponent({\r\n\r\noptions: {\r\n\r\npureDataPattern: /^_/ <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 指定所有 _ 开头的数据字段为纯数据字段</span>\r\n\r\n},\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">data</span>: {\r\n\r\na: <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">true</span>, <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 普通数据字段</span>\r\n\r\n_b: <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">true</span>, <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 纯数据字段</span>\r\n\r\n},\r\n\r\nmethods: {\r\n\r\nmyMethod() {\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>.<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">data</span>._b <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 纯数据字段可以在 this.data 中获取</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>.setData({\r\n\r\nc: <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">true</span>, <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 普通数据字段</span>\r\n\r\n_d: <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">true</span>, <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 纯数据字段</span>\r\n\r\n})\r\n\r\n}\r\n\r\n}\r\n\r\n})\r\n</code></pre><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>抽象节点</h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>又一个新名词，呵呵呵。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>说白了就是有一个父容器组件A，因为条件不同有可能A中会渲染组件B，也可能渲染组件C。举个例子，当页面需要单选和多选组件的时候,方法1是按条件引用两个封装好的组件（&lt;单选/&gt;，&lt;/多选&gt;），方法2是你也可以只引用一个组件&lt;啦啦啦/&gt;，只不过这个&lt;啦啦啦/&gt;组件去帮你按需渲染&lt;单选/&gt;或者&lt;多选/&gt;。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>需要在父容器组件A的.json文件声明：</p><pre class=\"hljs json\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n{\r\n\r\n<span class=\"hljs-attr\" style=\"box-sizing: border-box;\">\"componentGenerics\"</span>: {\r\n\r\n<span class=\"hljs-attr\" style=\"box-sizing: border-box;\">\"selectable\"</span>: <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: rgb(0, 128, 128);\">true</span>\r\n\r\n}\r\n\r\n}\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>在使用组件时，必须指定父组件具体是渲染哪个子组件：</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;'>&lt;啦啦啦 generic:selectable=\"单选\" /&gt;</code></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;'>&lt;啦啦啦 generic:selectable=\"多选\" /&gt;</code></p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>在页面的.json文件&lt;啦啦啦/&gt;，&lt;单选/&gt;，&lt;多选/&gt;都要引用。<a href=\"https://developers.weixin.qq.com/s/ztPzoImW7E7P\" rel=\"nofollow noreferrer\" target=\"_blank\" style=\"box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px; border-bottom: 1px solid rgba(0, 154, 97, 0.25); padding-bottom: 1px;\">代码</a></p><pre class=\"hljs objectivec\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">//page下页面的.json文件中</span>\r\n\r\n{\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"usingComponents\"</span>: {\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"啦啦啦\"</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"path/*/*\"</span>,\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"多选\"</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"*/checkbox\"</span>,\r\n\r\n<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"单选\"</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"*/radio\"</span>\r\n\r\n}\r\n\r\n}\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>当然，你也可以在容器组件.json中指定默认用哪个组件：</p><pre class=\"hljs json\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n{\r\n\r\n<span class=\"hljs-attr\" style=\"box-sizing: border-box;\">\"componentGenerics\"</span>: {\r\n\r\n<span class=\"hljs-attr\" style=\"box-sizing: border-box;\">\"selectable\"</span>: {\r\n\r\n<span class=\"hljs-attr\" style=\"box-sizing: border-box;\">\"default\"</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">\"*/checkbox\"</span>// 多选\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n</code></pre><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>计算属性</h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>今天真是开眼了，学到了这么多新词汇。。</p><blockquote style='box-sizing: border-box; padding: 10px 20px; margin: 1.5em 0px; font-size: 15px; border-left: 2px solid rgb(0, 154, 97); background: rgb(246, 246, 246); color: rgb(85, 85, 85); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif;'>( 计算属性的作用）：是为了解决HTML代码中复杂的js代码（HTML代码中可以嵌套js代码），把复杂的js代码通过计算属性来解决</blockquote><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>这是计算属性的应用？？？ 听着词这么厉害干这事真是大才小用了。</p><blockquote style='box-sizing: border-box; padding: 10px 20px; margin: 1.5em 0px; font-size: 15px; border-left: 2px solid rgb(0, 154, 97); background: rgb(246, 246, 246); color: rgb(85, 85, 85); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif;'>计算属性会使用缓存机制，如果这个数据的值没有改变，则计算属性将不会调用方法</blockquote><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>这点应该是它实际有价值的地方。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>实现原理很简单，就是对已有的 setData 进行二次封装，在每次 setData 的时候计算出 computed 里各字段的值，这期间可以增加缓存机制，属性值没有变化的复用。</p><h5 style='box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 0.86em; color: rgb(51, 51, 51); margin: 1.5em 0px; font-size: 1em; background-color: rgb(255, 255, 255);'>自定义组件拓展</h5><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>在react中想拓展一个组件怎么办，会用高阶组件。</p><p style='box-sizing: border-box; margin: 1.5em 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'>小程序中，自然是使用behaviors。</p><pre class=\"hljs typescript\" style='box-sizing: border-box; overflow: auto; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;'><code style='box-sizing: border-box; font-family: \"Source Code Pro\", Consolas, Menlo, Monaco, \"Courier New\", monospace; font-size: 1em; padding: 0px; color: inherit; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; white-space: inherit; overflow-wrap: normal;'>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// behavior.js</span>\r\n\r\n<span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">module</span>.exports = Behavior({\r\n\r\ndefinitionFilter(defFields) {\r\n\r\ndefFields.data.from = <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'behavior'</span>\r\n\r\n},\r\n\r\n})\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// component.js</span>\r\n\r\nComponent({\r\n\r\ndata: {\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">from</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'component'</span>\r\n\r\n},\r\n\r\nbehaviors: [<span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">require</span>(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'behavior.js'</span>)],\r\n\r\nready() {\r\n\r\n<span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">this</span>.data.from) <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136);\">// 此处会发现输出 behavior 而不是 component</span>\r\n\r\n}\r\n\r\n})\r\n</code></pre><p style='box-sizing: border-box; margin: 1.5em 0px 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><strong style=\"box-sizing: border-box;\">Behavior() 构造器提供了新的定义段 definitionFilter ，用于支持自定义组件扩展。</strong></p> </td>", "pub_time": "2019-11-22 00:41", "author": "Rolan"}
{"title": "uniapp登录流程详解uni.login ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>uni.login(OBJECT)</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>登录</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>H5平台登陆注意事项：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信内嵌浏览器运行H5版时，可通过js sdk实现微信登陆，需要引入一个单独的js，详见</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>普通浏览器上实现微信登陆，并非开放API，需要向微信申请，仅个别开发者有此权限</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>H5平台的其他登陆，比如QQ登陆、微博登陆，uni-app未封装，请在条件编译里按普通H5写法编写。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>OBJECT 参数说明</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>参数名 类型 必填 说明 平台差异说明</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>provider String 否 登录服务提供商，通过 uni.getProvider 获取，如果不设置则弹出登录列表选择界面</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>scopes String/Array 见平台差异说明 授权类型，默认 auth_base。支持 auth_base（静默授权）/ auth_user（主动授权） / auth_zhima（芝麻信用） 支付宝<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>timeout Number 否 超时时间，单位ms 微信小程序、百度小程序</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>success Function 否 接口调用成功的回调</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>fail Function 否 接口调用失败的回调函数</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>complete Function 否 接口调用结束的回调函数（调用成功、失败都会执行）</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>success 返回参数说明</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>参数名 说明</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>authResult 登录服务商提供的登录信息，服务商不同返回的结果不完全相同</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>errMsg 描述信息</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">uni</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.login</span>({\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">provider</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'weixin'</span>,\r\n  success: function (loginRes) {\r\n    console.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(loginRes.authResult);\r\n  }\r\n});</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>uni.checkSession</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>检查登录状态是否过期</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>属性 类型 必填 说明</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>success function 否 接口调用成功的回调函数</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>fail function 否 接口调用失败的回调函数</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>complete function 否 接口调用结束的回调函数（调用成功、失败都会执行）</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>uni.getUserInfo(OBJECT)</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>获取用户信息。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>UNI-APP 开发微信公众号（H5）JSSDK 的使用方式</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在 uniapp 中可以使用模块方式引用微信 js-sdk ，微信官网直接下载的使用有问题，可以使用 jweixin-module。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>安装</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下载使用方式</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>下载地址： <a href=\"https://unpkg.com/jweixin-module@1.4.1/out/index.js\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://unpkg.com/jweixin-mod...</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用、</p><pre class=\"prettyprint hljs php\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> jweixin = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'jweixin-module'</span>)  \r\njweixin.ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span><span class=\"hljs-params\">()</span></span>{  \r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// TODO  </span>\r\n});</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一、小程序:</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1、使用 button 组件，并将 open-type 指定为 getUserInfo 类型，获取用户基本信息。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>详情参考文档:</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/button.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://developers.weixin.qq....</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>2、使用 open-data 展示用户基本信息。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>详情参考文档:</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/open-data.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">https://developers.weixin.qq....</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>provider String 否 登录服务提供商，通过 uni.getProvider 获取</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>withCredentials Boolean 否 是否带上登录态信息。 微信小程序、头条小程序</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>lang Number 否 指定返回用户信息的语言，默认为 en。更多值请参考下面的说明。 微信小程序</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>timeout Number 否 超时时间，单位 ms。 微信小程序</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>success Function 否 接口调用成功的回调</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>fail Function 否 接口调用失败的回调函数</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>complete Function 否 接口调用结束的回调函数（调用成功、失败都会执行）</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>userInfo 参数说明</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>参数 类型 说明 平台差异说明</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>nickName String 用户昵称</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>openId String 该服务商唯一用户标识 5+App</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>avatarUrl String 用户头像</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>uni.login({\r\n  <span class=\"hljs-attr\">provider</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'weixin'</span>,\r\n  <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">loginRes</span>) </span>{\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(loginRes.authResult);\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 获取用户信息</span>\r\n    uni.getUserInfo({\r\n      <span class=\"hljs-attr\">provider</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'weixin'</span>,\r\n      <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">infoRes</span>) </span>{\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'用户昵称为：'</span> + infoRes.userInfo.nickName);\r\n      }\r\n    });\r\n  }\r\n});</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>说明：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>调用 wx.login() 获取 临时登录凭证code ，并回传到开发者服务器。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>调用 auth.code2Session 接口，换取 用户唯一标识 OpenID 和 会话密钥 session_key。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>之后开发者服务器可以根据用户标识来生成自定义登录态，用于后续业务逻辑中前后端交互时识别用户身份。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>注意：</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>会话密钥 session_key 是对用户数据进行 加密签名 的密钥。为了应用自身的数据安全，开发者服务器不应该把会话密钥下发到小程序，也不应该对外提供这个密钥。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>临时登录凭证 code 只能使用一次</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>uni.getProvider(OBJECT)</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>获取服务供应商。仅App平台支持。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在App平台，可用的服务商，是打包环境中配置的服务商，与手机端安装了什么app没有关系。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>云打包在manifest中配置相关模块和SDK信息，离线打包在原生工程中配置。某个服务商配置被打包进去，运行时就能得到相应的服务供应商。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>关于目前文章内容即涉及前端，PHP知识点，如果有兴趣即可关注，很荣幸，能被您发现，真是慧眼识英！也感谢您的关注，在未来的日子里，希望能够一直默默的支持我，我也会努力写出更多优秀的作品。我们一起成长，从零基础学编程，将 Web前端领域、数据结构与算法、网络原理等通俗易懂的呈现给小伙伴。分享 Web 前端相关的技术文章、工具资源、精选课程、热点资讯。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>若本号内容有做得不到位的地方（比如：涉及版权或其他问题），请及时联系我们进行整改即可，会在第一时间进行处理。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>请点赞！因为你们的赞同/鼓励是我写作的最大动力！</h2> </td>", "pub_time": "2019-11-25 00:16", "author": "Rolan"}
{"title": "小程序云开发：菜鸟也能全栈做产品 ", "content": "<td id=\"article_content\"> \n                     \n                    <div id=\"cnblogs_post_body\" class=\"blogpost-body cnblogs-markdown\" style='margin: 0px 0px 20px; padding: 0px; word-break: break-word; color: rgb(49, 70, 89); font-family: Lato, \"PingFang SC\", \"Microsoft YaHei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><h2 id=\"1491910951\" style=\"margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">我想独立实现一个全栈产品为什么这么难</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#1491910951\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h2><p style=\"margin: 10px auto; padding: 0px;\">日常生活中，我们会使用很多软件产品。在使用这些产品的时候，我们看得见的东西称为“前端界面”如一个输入框、一个按钮，点击按钮之后发生的一切看不见的东西称为“后端服务”。与之对应的创造者分别称为“前端程序员”、“后端程序员”，然而，一个完整产品的开发不仅仅是只有前端和后端，还有设计师，架构师，运维等。有没有可能这些所有的事情都一个人干呢？有可能，事实上如今就有很多的“全栈工程师”，他们身兼数职，是多面手。能独立完成一个产品的方方面面。这种人固然十分了得，他们通常具有多年的经验，涉猎广泛，是老手，也是高手，当有一个产品想法的时候，他们可以用自己的全面专业技能，尽情的发挥去实现自己的想法。所以，从某种意义上讲“全栈也是一种自由”，你可以自由的实现你的想法，这简直太美妙了！</p><p style=\"margin: 10px auto; padding: 0px;\">然而，很多时候当我们有一个产品想法的时候，我们往往发现，前端写完了，后端怎么搞？数据库怎么搞？域名怎么搞？域名还要备案？应用部署怎么搞？我的买什么样的服务器啊？静态资源 CDN 怎么搞？文件上传服务器怎么搞？万一访问用户多了能撑住吗？等等……问题很多，导致你的一个个想法，都只是在脑海中昙花一现，从来都无法将她们实现，或者说你激情饱满的实现了其中自己最擅长的一部分，当碰到其他难题的时候就止步了。于是仰天长啸：我就想独立做一个完整的产品为什么这么难？年轻人，这一切都不怪你……</p><h2 id=\"2245377245\" style=\"margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">破局：<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>云开发</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#2245377245\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h2><h3 id=\"3145946292\" style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">为什么使用小程序云开发来破局？</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#3145946292\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h3><p style=\"margin: 10px auto; padding: 0px;\">为啥是用“小程序云开发”来破局？首先，我们的目的是全栈实现一个产品。全栈可以有多种技术方案，你可用任何你能会的技能来达到全栈的目的。你可以开发安卓，IOS，或者 PC 站，然而小程序是最实际的！为啥？手机上能做的事情为啥要用 PC 版？OK,既然手机版比较好，那能不能再简单一点？能，就是小程序，不需要开发IOS，安卓两个版本。可以快速产出，快速试错。</p><p style=\"margin: 10px auto; padding: 0px;\">其次，前面说到了，全栈实现一个产品并不容易，对很多人来说甚至是巨难！选择了小程序已经是比较划算的方案。而再集成云开发，全栈立马就有了。这就是为什么选择“小程序云开发”来破局。</p><h3 id=\"3406604185\" style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">小程序云开发是什么?</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#3406604185\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h3><p style=\"margin: 10px auto; padding: 0px;\">小程序云开发是什么？官方文档是这么说的：开发者可以使用云开发开发微信小程序、小游戏，无需搭建服务器，即可使用云端能力。<strong style=\"margin: 0px 3px; padding: 0px;\">云开发为开发者提供完整的原生云端支持和微信服务支持，弱化后端和运维概念，无需搭建服务器，使用平台提供的 API 进行核心业务开发，即可实现快速上线和迭代</strong>，同时这一能力，同开发者已经使用的云服务相互兼容，并不互斥。</p><p style=\"margin: 10px auto; padding: 0px;\">看完上面的描述，也许你仍然无法非常清楚的知道什么是“小程序云开发”，没关系，你只需要注意加粗的部分，大概知道它“无需搭建服务器”，从传统观念将，这个似乎“毁三观”咋可能没服务器啊？是的，可以没有传统意义上的服务器，这种模式是 serveless 的。</p><p style=\"margin: 10px auto; padding: 0px;\">那么，小程序云开发提供了哪些东西来破局呢？且看下面的表格：</p><table style=\"margin: 0px 0px 24px; padding: 0px; border-collapse: collapse; border-spacing: 0px; font-size: 13px; empty-cells: show; border: 1px solid rgb(192, 192, 192); width: 929px; word-break: break-word;\"><thead style=\"margin: 0px; padding: 0px;\"><tr class=\"header\" style=\"margin: 0px; padding: 0px;\"><th style=\"margin: 0px; padding: 8px 14px; font-family: inherit; font-size: inherit; white-space: nowrap; background-color: rgb(250, 250, 250); border: 1px solid rgb(192, 192, 192); border-collapse: collapse; text-align: left; background-image: initial !important; background-position: initial !important; background-size: initial !important; background-repeat: initial !important; background-attachment: initial !important; background-origin: initial !important; background-clip: initial !important;\">能 力</th><th style=\"margin: 0px; padding: 8px 14px; font-family: inherit; font-size: inherit; white-space: nowrap; background-color: rgb(250, 250, 250); border: 1px solid rgb(192, 192, 192); border-collapse: collapse; text-align: left; background-image: initial !important; background-position: initial !important; background-size: initial !important; background-repeat: initial !important; background-attachment: initial !important; background-origin: initial !important; background-clip: initial !important;\">作 用</th><th style=\"margin: 0px; padding: 8px 14px; font-family: inherit; font-size: inherit; white-space: nowrap; background-color: rgb(250, 250, 250); border: 1px solid rgb(192, 192, 192); border-collapse: collapse; text-align: left; background-image: initial !important; background-position: initial !important; background-size: initial !important; background-repeat: initial !important; background-attachment: initial !important; background-origin: initial !important; background-clip: initial !important;\">说 明</th></tr></thead><tbody style=\"margin: 0px; padding: 0px;\"><tr class=\"odd\" style=\"margin: 0px; padding: 0px;\"><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">云函数</td><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">无需自建服务器</td><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">在云端运行的代码，微信私有协议天然鉴权，开发者只需编写自身业务逻辑代码</td></tr><tr class=\"even\" style=\"margin: 0px; padding: 0px;\"><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">数据库</td><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">无需自建数据库</td><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">一个既可在小程序前端操作，也能在云函数中读写的 JSON 数据库</td></tr><tr class=\"odd\" style=\"margin: 0px; padding: 0px;\"><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">存储</td><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">无需自建存储和 CDN</td><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">在小程序前端直接上传/下载云端文件，在云开发控制台可视化管理</td></tr><tr class=\"even\" style=\"margin: 0px; padding: 0px;\"><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">云调用</td><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">原生微信服务集成</td><td style=\"margin: 0px; padding: 8px 14px; border: 1px solid rgb(192, 192, 192); border-collapse: collapse;\">基于云函数免鉴权使用小程序开放接口的能力，包括服务端调用、获取开放数据等能力</td></tr></tbody></table><p style=\"margin: 10px auto; padding: 0px;\">上面的表格中提到了“云开发”中的一些能力：“云函数”，“数据库”，“存储”，“云调用”，我们可以将这些词带入你曾经开发过的应用，看看它们分别代表了哪些部分。对于程序员来说，如果有疑问的话，没有什么是一个 helloword 解决不了的。</p><h2 id=\"3913805243\" style=\"margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">实战：独立开发一个简易的零售小程序</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#3913805243\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h2><p style=\"margin: 10px auto; padding: 0px;\">哆嗦再多，不如实战。下面我们就来使用小程序云开发实现一个简单的零售小程序。</p><h3 id=\"1585142069\" style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">项目构思</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#1585142069\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h3><p style=\"margin: 10px auto; padding: 0px;\">既然是一个零售小程序，那么我们可以思考一下零售小程序的大致业务流程，以及粗略的梳理一下，其功能点。现根据自己的想法，大致画一下草图，如果没有灵感可以参考一下别的 APP 是如何设计的。</p><p style=\"margin: 10px auto; padding: 0px;\">我根据自己的想法设计之后是这样的：</p><p style=\"margin: 10px auto; padding: 0px;\">功能模块：首页，商品列表页，购物车，确认订单，个人中心，个人订单，管你模块（商品添加，分类添加）其中商品需要上传图片。</p><p style=\"margin: 10px auto; padding: 0px;\">梳理完功能之后，我们对于要实现的东西已经有个初步的概念了。接下来，我们需要大概画一下页面设计、及功能流转。初次设计可能没有太多经验，没关系，开始做就行了，做着做着就会想法越来越多，然后优化的越来越好。。我也是经过了多番修改调整，最终找到了一些思路。我的（拙劣）设计如下，图片如果看不清楚可复制图片链接在新窗口打开查看：</p><p><a href=\"data/attachment/portal/201911/25/101654f620xkn1xx9xn9te.png\" target=\"_blank\"><img src=\"data/attachment/portal/201911/25/101654f620xkn1xx9xn9te.png\"></a></p><p style=\"margin: 10px auto; padding: 0px;\">说明，以上图片是根据成品（我真的开发了一个云小程序并上线使用了）截图的，而实际我再设计的时候也是经过几番修改才最终定成这样。</p><p style=\"margin: 10px auto; padding: 0px;\">同时，补充说明一下，这里前端页面使用的是 vant-weapp控件，非常好用。推荐！如果你和我一样是一个纯后端程序员，建议使用 vant-weapp 来作为 ui，非常方便。否则自己写页面样式的话可能就做不出来了。全栈不是那么好干的啊。选择自己能驾驭的，能实现最终功能，就是一个合格的全栈。</p><h3 id=\"373909989\" style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">创建小程序云开发项目</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#373909989\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h3><p style=\"margin: 10px auto; padding: 0px;\">我们先下载微信小程序开发工具，下载地址<a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html\" style=\"margin: 0px; padding: 0px; color: rgb(45, 140, 240); text-decoration-line: none; transition: all 0.3s ease !important;\">在这里</a>,安装好了之后，新建项目，界面如下，APPID 需要你自己去注册一个。然后注意，选择“小程序云开发”，如下图所示：</p><p><a href=\"data/attachment/portal/201911/25/101656ig02z765ok5gi2g6.png\" target=\"_blank\"><img src=\"data/attachment/portal/201911/25/101656ig02z765ok5gi2g6.png\"></a></p><p style=\"margin: 10px auto; padding: 0px;\">创建好了之后，项目目录如下,先看 1 标注的地方：</p><p><a href=\"data/attachment/portal/201911/25/101656ycs9cq3okz9bm9sm.png\" target=\"_blank\"><img src=\"data/attachment/portal/201911/25/101656ycs9cq3okz9bm9sm.png\"></a></p><p style=\"margin: 10px auto; padding: 0px;\">如果你曾经有过小程序的开发经验，那么<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">miniprogram</code>文件夹下面的结构你肯定熟悉了，<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">miniprogram</code>下面的子目录分别是小程序对应的组件、图片、页面、样式以及<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">app.js</code>,<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">app.json</code>,<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">sitemap.json</code>,其中<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">components</code>下面的<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">vant-weapp</code>就是上面提到的 ui 组件。</p><p style=\"margin: 10px auto; padding: 0px;\">最后一个比较重要的文件夹就是<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">cloudfunctions</code>，这个目录是用来存放“云函数的”，云函数就是我们的后端。每一个云函数提供一个服务。一个个的云函数组成了我们整体的后端服务。云函数可以看做是 FaaS（function as a service）。途中，2 标记的位置的“云开发”按钮，我们点进去，就可以看到“云开发的控制台”，如下图所示：</p><p><a href=\"data/attachment/portal/201911/25/101655gpr2m25z2ly1dxpv.png\" target=\"_blank\"><img src=\"data/attachment/portal/201911/25/101655gpr2m25z2ly1dxpv.png\"></a></p><p style=\"margin: 10px auto; padding: 0px;\">如果上图看不清楚，可以复制链接到新的浏览器窗口查看，如图，小程序云开发默认的免费套餐有一定的额度可供使用。首页便是使用统计。然后我们能看到，有“数据库”，“存储”，“云函数”。</p><p style=\"margin: 10px auto; padding: 0px;\">这里的“数据库”其实就是类似于一个 MongoDB，你可以点进去创建一个个的 collection（即：关系型数据库中的table）;这里的“存储”其实就是“文件夹”，我们可以通过微信提供的 api把图片上传到“存储”中；这里的“云函数”就是我们需要实现的后端业务逻辑，他就是一个个的函数（函数由我们自己写好后上传）。一般开发过程中我们在开发者工具中的<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">cloudfunctions</code>目录下创建云函数（比方说是:user-add）开发完成之后在云函数目录点击右键——上传即可。然后就可以在小程序的代码中调用这个<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">user-add</code>云函数。</p><h3 id=\"1659305503\" style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">云开发之——3 分钟实现文件上传</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#1659305503\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h3><p style=\"margin: 10px auto; padding: 0px;\">注意：在开始云开发之前，我们现在 小程序代码的 app.js 中加入<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">wx.cloud.init</code>,如下：</p><pre class=\"javascript\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; word-wrap: break-word; position: relative !important;\"><div class=\"esa-clipboard-button\" data-clipboard-target=\"#copy_target_0\" title=\"复制代码\" style=\"margin: 0px; padding: 0px 6px; font-size: 12px; cursor: pointer; position: absolute; right: 6px; top: 6px; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 15px 0px; color: rgb(94, 102, 135); border-radius: 5px;\">Copy</div><code class=\"hljs\" id=\"copy_target_0\" style='margin: auto; padding: 1em !important; line-height: 1.5 !important; vertical-align: middle; display: block; font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: none !important; border-radius: 3px !important; height: auto; overflow-x: auto; color: rgb(51, 51, 51);'>App({\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">onLaunch</span>: <span class=\"hljs-function\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">function</span> (<span class=\"hljs-params\" style=\"margin: 0px; padding: 0px;\"></span>) </span>{\r\n    <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">if</span> (!wx.cloud) {\r\n      <span class=\"hljs-built_in\" style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255);\">console</span>.error(<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'请使用 2.2.3 或以上的基础库以使用云能力'</span>)\r\n    } <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">else</span> {\r\n      wx.cloud.init({\r\n        <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// env 参数说明：</span>\r\n        <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">//   env 参数决定接下来小程序发起的云开发调用（wx.cloud.xxx）会默认请求到哪个云环境的资源</span>\r\n        <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">//   此处请填入环境 ID, 环境 ID 可打开云控制台查看</span>\r\n        <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">//   如不填则使用默认环境（第一个创建的环境）</span>\r\n        env: <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'your-env-id'</span>,\r\n        <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">traceUser</span>: <span class=\"hljs-literal\" style=\"margin: 0px; padding: 0px; color: rgb(0, 134, 179);\">true</span>,\r\n      })\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">this</span>.globalData = {}\r\n  }\r\n})</code></pre><p style=\"margin: 10px auto; padding: 0px;\">上面的图中，我们已经看到了“商品添加”页面的效果，它需要我们输入商品名称、价格、并上传图片，然后保存。传统架构中，上传图片需要前端页面摆一个控件，然后后端提供一个 api用来接收前端传来的文件，通常来说这个后端 api 接收到图片之后，会将图片文件保存到自己的文件服务器或者是阿里云存储、或者是七牛云存储之类的。然后返回给你一个文件链接地址。非常麻烦，然而，小程序云开发上传文件超级简单，上代码：</p><pre class=\"xml\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; word-wrap: break-word; position: relative !important;\"><div class=\"esa-clipboard-button\" data-clipboard-target=\"#copy_target_1\" title=\"复制代码\" style=\"margin: 0px; padding: 0px 6px; font-size: 12px; cursor: pointer; position: absolute; right: 6px; top: 6px; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 15px 0px; color: rgb(94, 102, 135); border-radius: 5px;\">Copy</div><code class=\"hljs\" id=\"copy_target_1\" style='margin: auto; padding: 1em !important; line-height: 1.5 !important; vertical-align: middle; display: block; font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: none !important; border-radius: 3px !important; height: auto; overflow-x: auto; color: rgb(51, 51, 51);'>页面代码：\r\n<span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-notice-bar</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">scrollable</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"false\"</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">text</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"发布商品\"</span>\r\n/&gt;</span>\r\n  <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-field</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">value</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{ productName }}\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">required</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">clearable</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">label</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"商品名称\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">placeholder</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"请输入商品名称\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">bind:change</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"inputName\"</span>\r\n  /&gt;</span>\r\n    <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-field</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">value</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{ productPrice }}\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">required</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">clearable</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">label</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"价格\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">icon</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"question-o\"</span>\r\n     <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">bind:click-icon</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"onClickPhoneIcon\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">placeholder</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"请输入价格\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">error-message</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{phoneerr}}\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">border</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{ false }}\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">bind:change</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"inputPrice\"</span>\r\n  /&gt;</span>\r\n\r\n<span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-action-sheet</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">required</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">show</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{ showSelect }}\"</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">actions</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{ actions }}\"</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">close-on-click-overlay</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"true\"</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">bind:close</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"toggleSelect\"</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">bind:select</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"onSelect\"</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">cancel-text</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"取消\"</span>\r\n/&gt;</span>\r\n  <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-field</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">value</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{ productCategory }}\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">center</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">readonly</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">label</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"商品分类\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">border</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{ false }}\"</span>\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">use-button-slot</span>\r\n  &gt;</span>\r\n    <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-button</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">slot</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"button\"</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">size</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"small\"</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">plain</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">type</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"primary\"</span>  \r\n     <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">bind:click</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"toggleSelect\"</span>&gt;</span>选择分类<span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;/<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-button</span>&gt;</span>\r\n  <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;/<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-field</span>&gt;</span>\r\n  \r\n  <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-button</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">class</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"rightside\"</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">type</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"default\"</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">bind:click</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"uploadImage\"</span> &gt;</span>上传商品图片<span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;/<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-button</span>&gt;</span>\r\n  <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">view</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">class</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"imagePreview\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">image</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">src</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{productImg}}\"</span> /&gt;</span>\r\n  <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;/<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">view</span>&gt;</span>\r\n <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-submit-bar</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">price</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{ totalShow }}\"</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">button-text</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"提交\"</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">bind:submit</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"onSubmit\"</span>\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">tip</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"{{ false }}\"</span>\r\n &gt;</span>\r\n <span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;/<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-submit-bar</span>&gt;</span> \r\n<span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-toast</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">id</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"van-toast\"</span> /&gt;</span>\r\n<span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">van-dialog</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">id</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"van-dialog\"</span> /&gt;</span></code></pre><p style=\"margin: 10px auto; padding: 0px;\">这里有个控件，绑定了<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">uploadImage</code>方法，其代码为：</p><pre class=\"javascript\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; word-wrap: break-word; position: relative !important;\"><div class=\"esa-clipboard-button\" data-clipboard-target=\"#copy_target_2\" title=\"复制代码\" style=\"margin: 0px; padding: 0px 6px; font-size: 12px; cursor: pointer; position: absolute; right: 6px; top: 6px; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 15px 0px; color: rgb(94, 102, 135); border-radius: 5px;\">Copy</div><code class=\"hljs\" id=\"copy_target_2\" style='margin: auto; padding: 1em !important; line-height: 1.5 !important; vertical-align: middle; display: block; font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: none !important; border-radius: 3px !important; height: auto; overflow-x: auto; color: rgb(51, 51, 51);'>  uploadImage:<span class=\"hljs-function\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">function</span>(<span class=\"hljs-params\" style=\"margin: 0px; padding: 0px;\"></span>)</span>{\r\n    <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">let</span> that = <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">this</span>;\r\n    wx.chooseImage({\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">count</span>: <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">1</span>,\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">sizeType</span>: [<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'compressed'</span>],\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">sourceType</span>: [<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'album'</span>, <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'camera'</span>],\r\n      success(res) {\r\n        wx.showLoading({\r\n          <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">title</span>: <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'上传中...'</span>,\r\n        })\r\n        <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">const</span> tempFilePath = res.tempFilePaths[<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">0</span>]\r\n        <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">const</span> name = <span class=\"hljs-built_in\" style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255);\">Math</span>.random() * <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">1000000</span>;\r\n        <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">const</span> cloudPath = name + tempFilePath.match(<span class=\"hljs-regexp\" style=\"margin: 0px; padding: 0px;\">/\\.[^.]+?$/</span>)[<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">0</span>]\r\n        wx.cloud.uploadFile({\r\n          <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">cloudPath</span>:cloudPath,<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">//云存储图片名字</span>\r\n          filePath: tempFilePath,<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">//临时路径</span>\r\n          success: <span class=\"hljs-function\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-params\" style=\"margin: 0px; padding: 0px;\">res</span> =&gt;</span> {\r\n            <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">let</span> fileID = res.fileID;\r\n            that.setData({\r\n              <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">productImg</span>: res.fileID,\r\n            });\r\n            wx.showToast({\r\n              <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">title</span>: <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'图片上传成功'</span>,\r\n            })\r\n          },\r\n          <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">fail</span>: <span class=\"hljs-function\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-params\" style=\"margin: 0px; padding: 0px;\">e</span> =&gt;</span>{\r\n            wx.showToast({\r\n              <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">title</span>: <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'上传失败'</span>,\r\n            })\r\n          },\r\n          <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">complete</span>:<span class=\"hljs-function\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-params\" style=\"margin: 0px; padding: 0px;\">()</span>=&gt;</span>{\r\n            wx.hideLoading();\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }</code></pre><p style=\"margin: 10px auto; padding: 0px;\">这里，<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">wx.chooseImage</code>用于调起手机选择图片（相册/相机拍照），然后<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">wx.cloud.uploadFile</code>用于上传图片到上面说到的云开发能力之一的“存储”中。上传图片成功之后返回一个文件 ID，类似：</p><pre class=\"html\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; word-wrap: break-word; position: relative !important;\"><div class=\"esa-clipboard-button\" data-clipboard-target=\"#copy_target_3\" title=\"复制代码\" style=\"margin: 0px; padding: 0px 6px; font-size: 12px; cursor: pointer; position: absolute; right: 6px; top: 6px; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 15px 0px; color: rgb(94, 102, 135); border-radius: 5px;\">Copy</div><code class=\"hljs xml\" id=\"copy_target_3\" style='margin: auto; padding: 1em !important; line-height: 1.5 !important; vertical-align: middle; display: block; font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: none !important; border-radius: 3px !important; height: auto; overflow-x: auto; color: rgb(51, 51, 51);'>cloud://release-0kj63.7265-release-0kj63-1300431985/100477.13363146288.jpg  </code></pre><p style=\"margin: 10px auto; padding: 0px;\">这个链接可以直接在小程序页面展示：</p><pre class=\"html\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; word-wrap: break-word; position: relative !important;\"><div class=\"esa-clipboard-button\" data-clipboard-target=\"#copy_target_4\" title=\"复制代码\" style=\"margin: 0px; padding: 0px 6px; font-size: 12px; cursor: pointer; position: absolute; right: 6px; top: 6px; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 15px 0px; color: rgb(94, 102, 135); border-radius: 5px;\">Copy</div><code class=\"hljs xml\" id=\"copy_target_4\" style='margin: auto; padding: 1em !important; line-height: 1.5 !important; vertical-align: middle; display: block; font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: none !important; border-radius: 3px !important; height: auto; overflow-x: auto; color: rgb(51, 51, 51);'><span class=\"hljs-tag\" style=\"margin: 0px; padding: 0px;\">&lt;<span class=\"hljs-name\" style=\"margin: 0px; padding: 0px; color: rgb(99, 163, 92);\">image</span> <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">src</span>=<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"cloud://release-0kj63.7265-release-0kj63-1300431985/100477.13363146288.jpg  \"</span> /&gt;</span></code></pre><p style=\"margin: 10px auto; padding: 0px;\">也可以通过微信 api，装换成 http 形式的图片链接。</p><h3 id=\"470328535\" style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">云开发之——操作数据库，1 分钟写完保存商品到数据库的代码</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#470328535\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h3><p style=\"margin: 10px auto; padding: 0px;\">上面我们实现了商品图片上传，但是，商品图片并没有保存到数据库。正常录入商品的时候，我们会填好商品名称，价格等，然后上传图片，最终点击“保存”按钮，将商品保存到数据库。传统模式下，前端仍然是需要调用一个后端接口，通过 post 提交数据，最终由后端服务（比如 java 服务）将数据保存到数据库。小程序云开发使得操作数据库十分简单，首先我们在云开发控制台创建“商品表”，即一个 <code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">collection</code>,取名为：<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">products</code>。然后我们就可以保存数据到数据库了，代码如下：</p><pre class=\"javascript\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; word-wrap: break-word; position: relative !important;\"><div class=\"esa-clipboard-button\" data-clipboard-target=\"#copy_target_5\" title=\"复制代码\" style=\"margin: 0px; padding: 0px 6px; font-size: 12px; cursor: pointer; position: absolute; right: 6px; top: 6px; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 15px 0px; color: rgb(94, 102, 135); border-radius: 5px;\">Copy</div><code class=\"hljs\" id=\"copy_target_5\" style='margin: auto; padding: 1em !important; line-height: 1.5 !important; vertical-align: middle; display: block; font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: none !important; border-radius: 3px !important; height: auto; overflow-x: auto; color: rgb(51, 51, 51);'>onSubmit:<span class=\"hljs-function\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">function</span>(<span class=\"hljs-params\" style=\"margin: 0px; padding: 0px;\"></span>)</span>{\r\n    <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// 校验代码，略</span>\r\n    <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">let</span> product = {};\r\n    product.imgId = <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">this</span>.data.productImg;\r\n    product.name= <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">this</span>.data.productName;\r\n    product.categoryId = <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">this</span>.data.productCategoryId;\r\n    product.price = <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">this</span>.data.productPrice;\r\n    <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// 其他赋值，略</span>\r\n    <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">const</span> db = wx.cloud.database();\r\n    db.collection(<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'products'</span>).add({\r\n     <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">data</span>: product,\r\n     success(res) {\r\n       wx.showToast({\r\n         <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">title</span>: <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'保存成功'</span>,\r\n       })\r\n     }\r\n   });\r\n  }</code></pre><p style=\"margin: 10px auto; padding: 0px;\">以上就实现了数据入库，就这点代码，超简单，1 分钟写完，诚不欺我。其中这里的<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">products</code>就是我们的“商品表”，之前说过，类似 MongoDB 数据库，这里操作的是<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">db.collection</code>，这和 MongoDB 的语法差不多。</p><h3 id=\"3902800082\" style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">云开发之——使用云函数完成后端业务逻辑，订单创建</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#3902800082\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h3><p style=\"margin: 10px auto; padding: 0px;\">小程序云开发提供了几大能力：“数据库”，“存储”，“云函数”，前两项我们已经有所体会了。下面我们能创建一个云函数来实现订单创建。这里说明，云函数其实就是 一段JavaScript 代码，上传至云服务器之后，最终也是运行在 nodejs 环境的，只是这一切，我们不需要关心。我们只需要关心我们这个云函数提供的功能是什么就可以了。</p><p style=\"margin: 10px auto; padding: 0px;\">创建云函数很简单，直接在开发工具中右键“新建Node.js 云函数”。然后以创建订单为例，假设我们创建一个云函数名为<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">c-order-add</code>,创建好了之后，目录是这样：</p><p><a href=\"data/attachment/portal/201911/25/101654w8cuc1sukdki0gkr.png\" target=\"_blank\"><img src=\"data/attachment/portal/201911/25/101654w8cuc1sukdki0gkr.png\"></a></p><p style=\"margin: 10px auto; padding: 0px;\">云函数的主要代码在 index.js 中，其完整代码是这样：</p><pre class=\"javascript\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; word-wrap: break-word; position: relative !important;\"><div class=\"esa-clipboard-button\" data-clipboard-target=\"#copy_target_6\" title=\"复制代码\" style=\"margin: 0px; padding: 0px 6px; font-size: 12px; cursor: pointer; position: absolute; right: 6px; top: 6px; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 15px 0px; color: rgb(94, 102, 135); border-radius: 5px;\">Copy</div><code class=\"hljs\" id=\"copy_target_6\" style='margin: auto; padding: 1em !important; line-height: 1.5 !important; vertical-align: middle; display: block; font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: none !important; border-radius: 3px !important; height: auto; overflow-x: auto; color: rgb(51, 51, 51);'><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// 云函数入口文件</span>\r\n<span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">const</span> cloud = <span class=\"hljs-built_in\" style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255);\">require</span>(<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'wx-server-sdk'</span>)\r\ncloud.init({\r\n  <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">env</span>: <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'release-xxx'</span><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// your-env-id</span>\r\n})\r\n<span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">const</span> db = cloud.database()\r\n\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// 云函数入口函数</span>\r\nexports.main = <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">async</span> (event, context) =&gt; {\r\n  <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">const</span> wxContext = cloud.getWXContext();\r\n  <span class=\"hljs-built_in\" style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255);\">console</span>.log(<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">\"云函数 c-order-add : \"</span>)  \r\n  <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// 这里是一些逻辑处理...</span>\r\n  \r\n  <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">return</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">await</span> db.collection(<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'uorder'</span>).add({\r\n    <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">data</span>: {\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">openid</span>: event.userInfo.openId,\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">address</span>: event.address,\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">userName</span>: event.userName,\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">phone</span>: event.phone,\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">shoppingInfo</span>: event.shoppingInfo,\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">totlePrice</span>: event.totlePrice,\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">shoppingStr</span>: event.shoppingStr,\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">remark</span>:event.remark,\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">createTime</span>: now,\r\n      <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// ...</span>\r\n    }\r\n  });\r\n}</code></pre><p style=\"margin: 10px auto; padding: 0px;\">这个云函数写好之后，需要上传到服务器，直接在云函数目录点击右键，然后点击“上传并部署”即可，这就相当于部署好了后端服务。前端小程序页面调用的写法是这样的：</p><pre class=\"javascript\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; word-wrap: break-word; position: relative !important;\"><div class=\"esa-clipboard-button\" data-clipboard-target=\"#copy_target_7\" title=\"复制代码\" style=\"margin: 0px; padding: 0px 6px; font-size: 12px; cursor: pointer; position: absolute; right: 6px; top: 6px; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 15px 0px; color: rgb(94, 102, 135); border-radius: 5px;\">Copy</div><code class=\"hljs\" id=\"copy_target_7\" style='margin: auto; padding: 1em !important; line-height: 1.5 !important; vertical-align: middle; display: block; font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: none !important; border-radius: 3px !important; height: auto; overflow-x: auto; color: rgb(51, 51, 51);'><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">let</span> orderData={};\r\norderData.userName = <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">this</span>.data.userName;\r\norderData.phone = <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">this</span>.data.phone;\r\norderData.address = <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(167, 29, 93);\">this</span>.data.address;\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// ....</span>\r\nwx.cloud.callFunction({\r\n      <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// 云函数名称</span>\r\n      name: <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'c-order-add'</span>,\r\n      <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// 传给云函数的参数</span>\r\n      data: orderData,\r\n      <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">complete</span>: <span class=\"hljs-function\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-params\" style=\"margin: 0px; padding: 0px;\">res</span> =&gt;</span> {\r\n        Dialog.alert({\r\n          <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">title</span>: <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'提交成功'</span>,\r\n          <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">message</span>: <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'您的订单成功，即将配送，请保持手机通畅。'</span>\r\n        }).then(<span class=\"hljs-function\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-params\" style=\"margin: 0px; padding: 0px;\">()</span> =&gt;</span> {\r\n          <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(150, 152, 150);\">// ....</span>\r\n          wx.redirectTo({\r\n            <span class=\"hljs-attr\" style=\"margin: 0px; padding: 0px; color: rgb(121, 93, 163);\">url</span>: <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(223, 80, 0);\">'../uorder/uorder'</span>\r\n          });\r\n        });\r\n      }\r\n})</code></pre><p style=\"margin: 10px auto; padding: 0px;\">这里，向程序前端，通过<code style=\"margin: 0px 3px; line-height: 1; vertical-align: middle; display: inline-block; padding: 0.2em 0.3em !important; font-family: consolas !important; font-size: 14px !important; background: rgb(242, 244, 245) !important; border: 1px solid rgb(238, 238, 238) !important; border-radius: 3px !important;\">wx.cloud.callFunction</code>完成了对云函数的调用，也可以理解为对后端服务的调用。至此我们我们介绍完了，小程序云开发的功能。虽然，我只贴出了少量的代码，即保存商品，和提交订单。由于时间和篇幅有限，我不可能把整个完整的程序代码贴出来。但是你可以参照这个用法示例，将剩下的业务逻辑补充完整，最终完成“项目构思”一节中展示的成品截图效果。</p><h3 id=\"2971016200\" style=\"margin: 10px 0px; padding: 0px; font-size: 16px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">小程序审核的一点经验</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#2971016200\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h3><p style=\"margin: 10px auto; padding: 0px;\">我开发的小程序审核在提交审核的时候遭遇了两次退回，第一次是因为：“小程序具备电商性质，个人小程序号不支持”。所以，我只好申请了一个企业小程序号，使用的是超市的营业执照。服务类目的选择也被打回了一次，最后选择了食品还提交了食品经营许可证。第二次打回是因为：“用户体验问题”。其实就是“授权索取”的问题，微信不让打开首页就“要求授权”，同时不能强制用户接受授权，得提供拒绝授权也能使用部分功能。</p><p style=\"margin: 10px auto; padding: 0px;\">上面两条解决之后，更新新了好几版，都没有出现过被拒的情况。并且，有次我是夜晚 10 左右提价的审核，结果10 点多就提示审核通过，当时没看具体时间，就是接盆水泡了个脚的时间审核通过了。所以，我推断小程序审核初次审核会比较严，之后如果改动不大应该直接机审就过了。</p><h2 id=\"3581140188\" style=\"margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px;\">总结及对比</span><a href=\"https://www.cnblogs.com/demingblog/p/11914354.html#3581140188\" class=\"esa-anchor\" style=\"margin: 0px 0px 0px 8px; padding: 0px; transition: opacity 0.3s ease; opacity: 0; color: rgb(45, 140, 240); text-decoration-line: none;\">#</a></h2><p style=\"margin: 10px auto; padding: 0px;\">这里我们可以对小程序云开发和传统模式做一个对比：</p><p><a href=\"data/attachment/portal/201911/25/101653ot603ywxyem4w430.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/25/101653ot603ywxyem4w430.jpg\"></a></p><p style=\"margin: 10px auto; padding: 0px;\">就对比这么多吧，总之，我非常喜欢小程序云开发，小程序真的可以让你轻松干全栈。或者咱们别动不动就提“全栈”，姑且说，小程序云开发可以让你更简单、更快速、更便宜的实现你的产品落地。我自己开发的云小程序上线之后，使用了一两个月，没出现任何问题。我也不用操心服务器什么的。所以，我已经给身边很多人安利了小程序云开发了。这里我就不贴出我的小程序码了，因为已经正式给我同学的超市使用了，所以不方便让别人去产生测试数据。如果你感兴趣想看的话，可以联系我。</p></div><div id=\"MySignature\" style='margin: 0px; padding: 0px; color: rgb(49, 70, 89); font-family: Lato, \"PingFang SC\", \"Microsoft YaHei\", sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);'><div class=\"esa-post-signature\" style=\"margin: 15px 0px 0px 5px; padding: 12px 24px 12px 30px; border-left: 4px solid rgb(45, 140, 240); line-height: 2; background-color: rgb(248, 248, 248); position: relative; border-bottom-right-radius: 2px; border-top-right-radius: 2px; z-index: 1;\"><p style=\"margin: 17px auto; padding: 0px;\">作者：<a href=\"https://www.cnblogs.com/demingblog/\" style=\"margin: 0px; padding: 0px; color: rgb(45, 140, 240); text-decoration-line: none; transition: all 0.3s ease !important;\"> 逃离沙漠</a></p><p style=\"margin: 17px auto; padding: 0px;\">出处：<a href=\"https://www.cnblogs.com/demingblog/p/11914354.html\" style=\"margin: 0px; padding: 0px; color: rgb(45, 140, 240); text-decoration-line: none; transition: all 0.3s ease !important;\">https://www.cnblogs.com/demingblog/p/11914354.html</a></p><p style=\"margin: 17px auto; padding: 0px;\">本站使用「<a href=\"https://creativecommons.org/licenses/by/4.0\" target=\"_blank\" style=\"margin: 0px; padding: 0px; color: rgb(45, 140, 240); text-decoration-line: none; transition: all 0.3s ease !important;\">CC BY 4.0</a>」创作共享协议，转载请在文章明显位置注明作者及出处。</p>如果本文对您有帮助，不妨点个「推荐」及「赞赏」</div></div> </td>", "pub_time": "2019-11-25 00:25", "author": "Rolan"}
{"title": "小程序顶部导航栏，可滑动，可动态选中放大效果 ", "content": "<td id=\"article_content\"> \n                     \n                    <h3 data-anchor-id=\"he9o\" id=\"老规矩先看效果图\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>老规矩，先看效果图</h3><div><p><a href=\"data/attachment/portal/201911/25/102335z79p11pfml11yeep.gif\" target=\"_blank\"><img src=\"data/attachment/portal/201911/25/102335z79p11pfml11yeep.gif\"></a></p></div><p data-anchor-id=\"mqe1\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>可以看到我们实现了如下功能</p><p data-anchor-id=\"gc5a\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>1，顶部导航栏 <br>2，可以左右滑动的导航栏 <br>3，选中条目放大 <br>原理其实很简单，我这里把我研究后的源码发给大家吧。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"8g8o\" id=\"wxml文件如下\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>wxml文件如下</h3><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"2cmq\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">&lt;!-- 导航栏 --&gt;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;scroll-view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">scroll-x</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"navbar\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">scroll-with-animation</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">scroll-left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"{{scrollLeft}}rpx\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"nav-item\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">wx:for</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"{{tabs}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">wx:key</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"id\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">bindtap</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"tabSelect\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">data-id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"{{index}}\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"nav-text {{index==tabCur?'tab-on':''}}\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">{{item.name}}</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/view&gt;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/view&gt;</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/scroll-view&gt;</span></code></li></ol></pre><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"q1ap\" id=\"wxss文件如下\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>wxss文件如下</h3><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"bneo\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/* 导航栏布局相关 */</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">navbar </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  width</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">   height</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">90rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/* 文本不换行 */</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  white</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">space</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> nowrap</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  display</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> flex</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  box</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">sizing</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> border</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">box</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  border</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">bottom</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1rpx</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> solid </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#eee;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  background</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#fff;</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  align</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">items</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> center</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/* 固定在顶部 */</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  position</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">fixed</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  top</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">nav</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">item </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  padding</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">left</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">25rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  padding</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">right</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">25rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  height</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  display</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">inline</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">block</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/* 普通文字大小 */</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  font</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">size</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">28rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">nav</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">text </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  width</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%;</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  height</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  display</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> flex</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  align</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">items</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> center</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  justify</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">content</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> center</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  letter</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">spacing</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">4rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  box</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">sizing</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> border</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">box</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">tab</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">on </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  color</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#fbbd08;</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/* 选中放大 */</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  font</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">size</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">38rpx</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">!</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">important</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  font</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">weight</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">600</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  border</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">bottom</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">4rpx</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> solid </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#fbbd08 !important;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li></ol></pre><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"g0t0\" id=\"js文件如下\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>js文件如下</h3><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"xj2j\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// pages/test2/test2.js</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Page</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  data</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    tabCur</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//默认选中</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    tabs</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[{</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'等待支付'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'待发货'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'待收货'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">2</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'待签字'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">3</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'待评价'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">4</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'五星好评'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">5</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'差评订单'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">6</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'编程小石头'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">8</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        name</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'小石头'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">9</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">]</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//选择条目</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  tabSelect</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">e</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">setData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      tabCur</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> e</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">currentTarget</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">dataset</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      scrollLeft</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">e</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">currentTarget</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">dataset</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">id </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">2</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">200</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li></ol></pre><p data-anchor-id=\"zzkf\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>代码里注释很明白了，大家自己跟着多敲几遍就可以了。后面会更新更多<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>相关的知识，请持续关注。</p> </td>", "pub_time": "2019-11-25 00:36", "author": "Rolan"}
{"title": "浅谈微信小程序流量变现的常见模式 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>什么是<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>，小程序是基于微信平台发展而衍生出的即用即走、无需下载的第三方工具。由于其具有操作简单、使用便捷的天然优势，因而现在使用微信小程序人数的增长速度犹如闪电般一样。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>同时，现在小程序的变现流量也是大幅度的增长，这为商家企业带来了红利期。那么，今天小编将为大家介绍几种常见的小程序流量变现模式，供大家学习与参考。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>模式一 : 电商变现</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在微信社交关系链和微信支付体系里，电商小程序流量变现优势明显。电商类的小程序用户直接完结购买流程，包含产品选购、购买、付出一系列的流程，直接变现。如：拼多多、享物说、每日优鲜等社交电商小程序依靠微信社交关系链裂变传播，日订单数也在千万量级。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>模式二：广告变现</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>广告变现是小游戏、工具类、资讯类小程序变现的主要方式。小程序官方开放了Banner广告，只要活跃用户达到一定量级，可通过广告点击直接变现流量。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>模式三 : 内容付费</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>付费流量变现方式带动了微信小程序内容付费的发展，如Reader、读书知乎live等小程序，都选用的是付费程序。将公众号绑定小程序可以在公众号推文中嵌入付费产品的小程序贴片。小程序不必下载不占内存，界面清新，用小程序付费体验比APP更好，用户形成习惯后，可直接通过内容付费小程序模式完成引流、推广和变现的流量闭环营销操作。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>模式四 : 游戏付费</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信官方发布了小游戏支撑微信交际关系链玩法，小程序游戏中道具、会员等等这些都能成为商家盈利的方法。游戏底部 banner 位、原生广告植入、续命激励来引导用户点击广告、通过设置付费关卡和道具等，都是游戏小程序的付费方式。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>当然，关于小程序的变现模式，不局限于以上四种，例如电商卖货、平台卖货等新型盈利模式，也赢得了强烈的反响度。因此，商家应当根据自己的用户群体和产品属性，来选择合适的流量变现模式。</h4> </td>", "pub_time": "2019-11-26 00:01", "author": "Rolan"}
{"title": "微信小程序——基础知识 ", "content": "<td id=\"article_content\"> \n                     \n                    <figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/26/094136ek3yc6o6fs6vrcof.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/26/094136ek3yc6o6fs6vrcof.jpg\"></a></p></figure><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>目录结构介绍</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>一个<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>至少由俩个文件组成 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>app.js</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>app.json</code> 1. <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>app.js</code> 小程序逻辑 2. <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>app.json</code> 小程序全局配置 3. <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>app.wxss</code> 小程序公共样式表 4. <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>project.config.json</code> 开发项目时工具配置文件。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>一个小程序页面由四个文件组成</h4><table class=\"table table-bordered\" style='max-width: 100%; background-color: rgb(254, 254, 254); border-spacing: 0px; width: 682px; margin-bottom: 1.5em; border-width: 1px 1px 1px 0px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); border-image: initial; border-left-style: initial; border-left-color: initial; border-radius: 4px; font-size: 14px; line-height: 1.3em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif;'><thead><tr style=\"line-height: 1.3em;\"><th width=\"30%\" style=\"padding: 8px; line-height: 1.5em; text-align: left; vertical-align: bottom; border-top: 0px; border-left: 1px solid rgb(221, 221, 221); border-top-left-radius: 4px;\"></th><th width=\"40%\" style=\"padding: 8px; line-height: 1.5em; text-align: left; vertical-align: bottom; border-top: 0px; border-left: 1px solid rgb(221, 221, 221);\">传统web</th><th width=\"30%\" style=\"padding: 8px; line-height: 1.5em; text-align: left; vertical-align: bottom; border-top: 0px; border-left: 1px solid rgb(221, 221, 221); border-top-right-radius: 4px;\">小程序</th></tr></thead><tbody><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">结构</td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>HTML</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>wxml</code></td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">样式表</td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>CSS</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>wxss</code></td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">逻辑</td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>Javascript</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>js</code></td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221); border-bottom-left-radius: 4px;\">配置</td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>无</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221); border-bottom-right-radius: 4px;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>json</code></td></tr></tbody></table><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>初始化页面的俩个警告:warning:</h4><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/26/094137hsmhxqmhq8qj6qr6.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/26/094137hsmhxqmhq8qj6qr6.jpg\"></a></p></figure><span style='color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'>:warning:根据 sitemap 的规则[0]，当前页面 [pages/index/index] 将被索引</span><span style='color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'> 解决方案：小程序项目配置文件 </span><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>project.config.json</code><span style='color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'> 的 setting 中配置字段 </span><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>\"checkSiteMap\": false</code><span style='color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'></span><pre class=\"prettyprint hljs lua\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"setting\"</span>: {\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"checkSiteMap\"</span>: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">false</span>\r\n},\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>:warning:获取 wx.getUserInfo 接口后续将不再出现授权弹窗，请注意升级解决方案：清空 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>App.js</code></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>全局配置路由、导航栏和tabBar</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序根目录下的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>app.json</code> 文件用来对微信小程序进行全局配置，决定页面文件的路径、窗口表现、设置网络超时时间、设置多 tab 等。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>路由 Pages</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#pages\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">路由 Pages | 微信开放文档</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>项目开发目录为：</p><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">app</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.js</span>\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">app</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.json</span>\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">app</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.wxss</span>\r\n├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">pages</span>\r\n│   │── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">index</span>\r\n│   │   ├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">index</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.wxml</span>\r\n│   │   ├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">index</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.js</span>\r\n│   │   ├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">index</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.json</span>\r\n│   │   └── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">index</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.wxss</span>\r\n│   └── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">logs</span>\r\n│       ├── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">logs</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.wxml</span>\r\n│       └── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">logs</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.js</span>\r\n└── <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">utils</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>则需要在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>app.json</code> 中写</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pages\"</span>: [\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pages/index/index\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pages/logs/logs\"</span>\r\n    ],\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>顶部导航 window</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#window\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">顶部导航 window | 微信开放文档</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>用于设置小程序的状态栏、导航条、标题、窗口背景色。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/26/094137veeq26876e3q23qj.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/26/094137veeq26876e3q23qj.jpg\"></a></p></figure><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>window属性说明文档</h4><table class=\"table table-bordered\" style='max-width: 100%; background-color: rgb(254, 254, 254); border-spacing: 0px; width: 682px; margin-bottom: 1.5em; border-width: 1px 1px 1px 0px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); border-image: initial; border-left-style: initial; border-left-color: initial; border-radius: 4px; font-size: 14px; line-height: 1.3em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif;'><thead><tr style=\"line-height: 1.3em;\"><th style=\"padding: 8px; line-height: 1.5em; text-align: left; vertical-align: bottom; border-top: 0px; border-left: 1px solid rgb(221, 221, 221); border-top-left-radius: 4px;\">属性</th><th style=\"padding: 8px; line-height: 1.5em; text-align: left; vertical-align: bottom; border-top: 0px; border-left: 1px solid rgb(221, 221, 221); border-top-right-radius: 4px;\">描述</th></tr></thead><tbody><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>backgroundTextStyle</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">下拉 loading 的样式，仅支持 dark / light</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>navigationBarBackgroundColor</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">导航栏背景颜色，如 #000000</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>navigationBarTitleText</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">导航栏标题文字内容`</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>navigationBarTextStyle</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">导航栏标题颜色，仅支持 black / white</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221); border-bottom-left-radius: 4px;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>enablePullDownRefresh</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221); border-bottom-right-radius: 4px;\">是否开启当前页面的下拉刷新 true / false</td></tr></tbody></table><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>代码实例</h4><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"window\"</span>: {\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"backgroundTextStyle\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"dark\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"navigationBarBackgroundColor\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#0081ff\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"navigationBarTitleText\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"教育Top10\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"navigationBarTextStyle\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"white\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"enablePullDownRefresh\"</span>: true\r\n    },\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>如何设置某个单页面的导航栏？</h4><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/26/094137kzzc17epccxc1ac4.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/26/094137kzzc17epccxc1ac4.jpg\"></a></p></figure><span style='color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'>自定义顶部栏,文字、背景色，在该单页面的 </span><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>json</code><span style='color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'></span><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>里添加如下：</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n\t<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"usingComponents\"</span>: {},\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"navigationBarTitleText\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"课程列表\"</span>,\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"navigationBarBackgroundColor\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#0081ff\"</span>,\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"navigationBarTextStyle\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"white\"</span>\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>隐藏顶部栏，在该单页面的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>json</code> 里添加如下：</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"navigationStyle\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"custom\"</span>\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>底部 tabBar</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#tabBar\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">底部 tabBar | 微信开放文档</a> 小程序是一个多 tab 应用，可以通过 tabBar 配置项指定 tab 栏的表现，及切换时显示的对应页面。</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/26/094137jc8h9ecru9cckhqe.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/26/094137jc8h9ecru9cckhqe.jpg\"></a></p></figure><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>tabBar属性说明文档</h4><table class=\"table table-bordered\" style='max-width: 100%; background-color: rgb(254, 254, 254); border-spacing: 0px; width: 682px; margin-bottom: 1.5em; border-width: 1px 1px 1px 0px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); border-image: initial; border-left-style: initial; border-left-color: initial; border-radius: 4px; font-size: 14px; line-height: 1.3em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif;'><thead><tr style=\"line-height: 1.3em;\"><th style=\"padding: 8px; line-height: 1.5em; text-align: left; vertical-align: bottom; border-top: 0px; border-left: 1px solid rgb(221, 221, 221); border-top-left-radius: 4px;\">属性</th><th style=\"padding: 8px; line-height: 1.5em; text-align: left; vertical-align: bottom; border-top: 0px; border-left: 1px solid rgb(221, 221, 221); border-top-right-radius: 4px;\">描述</th></tr></thead><tbody><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>color</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">tab 上的文字默认颜色，仅支持十六进制颜色</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>selectedColor</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">tab 上的文字选中时的颜色，仅支持十六进制颜色</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>backgroundColor</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">tab 的背景色，仅支持十六进制颜色</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>borderStyle</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">tabbar上边框的颜色， 仅支持 black / white</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>custom</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">自定义 tabBar，见 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/ability/custom-tabbar.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">详情</a></td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221); border-bottom-left-radius: 4px;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>list</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221); border-bottom-right-radius: 4px;\">tab 的列表，详见 list 属性说明</td></tr></tbody></table><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>list 数组，包含 tab <strong style=\"text-indent: 0px;\">最少 2 个、最多 5 个</strong></p><table class=\"table table-bordered\" style='max-width: 100%; background-color: rgb(254, 254, 254); border-spacing: 0px; width: 682px; margin-bottom: 1.5em; border-width: 1px 1px 1px 0px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); border-image: initial; border-left-style: initial; border-left-color: initial; border-radius: 4px; font-size: 14px; line-height: 1.3em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif;'><thead><tr style=\"line-height: 1.3em;\"><th width=\"70%\" style=\"padding: 8px; line-height: 1.5em; text-align: left; vertical-align: bottom; border-top: 0px; border-left: 1px solid rgb(221, 221, 221); border-top-left-radius: 4px;\">list属性</th><th style=\"padding: 8px; line-height: 1.5em; text-align: left; vertical-align: bottom; border-top: 0px; border-left: 1px solid rgb(221, 221, 221); border-top-right-radius: 4px;\">描述</th></tr></thead><tbody><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>pagePath</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">路由：跳转到指定页面</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>text</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">底部导航文字</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>iconPath</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221);\">底部导航图标、未选中状态</td></tr><tr style=\"line-height: 1.3em;\"><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221); border-bottom-left-radius: 4px;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600;'>selectedIconPath</code></td><td style=\"padding: 8px; line-height: 1.3em; vertical-align: top; border-top: 1px solid rgb(221, 221, 221); border-left: 1px solid rgb(221, 221, 221); border-bottom-right-radius: 4px;\">底部导航图标、选中状态</td></tr></tbody></table><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>代码实例</h4><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"tabBar\"</span>: {\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"color\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#333\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"selectedColor\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#0081ff\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"borderStyle\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"black\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"backgroundColor\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#fff\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"list\"</span>: [\r\n            {\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pagePath\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pages/tabBar/tabBar_home/tabBar_home\"</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"text\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"首页\"</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"iconPath\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"images/Tabbar/home.png\"</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"selectedIconPath\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"images/Tabbar/home_cur.png\"</span>,\r\n            },\r\n            {\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"selectedIconPath\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"images/Tabbar/my_cur.png\"</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"iconPath\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"images/Tabbar/my.png\"</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pagePath\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pages/tabBar/tabBar_myCenter/tabBar_myCenter\"</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"text\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"个人中心\"</span>\r\n            }\r\n        ],\r\n    }\r\n}\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>基础组件</h2><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>view 视图容器</h4><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>text 文本</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;text&gt;纯文本&lt;/text&gt;</code> 组件之间只能包含纯文本，在text中写其他标签，将会被忽略掉</p><pre class=\"prettyprint hljs vbnet\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> \r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"info\"</span> \r\n    id=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"zbc\"</span> \r\n    style=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span> \r\n    bindtap=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"_fun\"</span> 点击事件\r\n    hidden=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"true\"</span> 显示隐藏[微信小程序--hidden不生效原因及解决方案?]\r\n    data-user=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"user\"</span> 自定义组件\r\n&gt;\r\n    hello world\r\n&lt;/<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>image 图片</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序 Image 图片实现宽度100%，高度自适应 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>mode=\"widthFix\"</code></p><pre class=\"prettyprint hljs scala\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;image <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span></span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"img\"</span> src=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../../images/hello.png\"</span> mode=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"widthFix\"</span>&gt;\r\n\r\n.img{width: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100</span>vw;}\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Flex 布局</h2><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Flex 布局兼容性</h4><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/26/094137bgv7z6g3n6vg2ihi.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/26/094137bgv7z6g3n6vg2ihi.jpg\"></a></p></figure><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Flex 布局属性</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>要使用弹性布局，通过 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>display: flex</code> 或者 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>display: inline-flex</code> 来将此元素定义为弹性容器。</p><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>flex-direction</code> 决定元素的排列方向</p><pre class=\"hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">row</span>\r\ncolumn\r\n</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>flex-wrap</code> 决定元素如何换行</p><pre class=\"hljs nginx\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">nowrap</span>\r\nwrap\r\n</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>justify-content</code> 定义主轴为水平方向，分布方式。</p><pre class=\"hljs sql\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>flex-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">start</span>\r\nflex-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">end</span>\r\ncenter\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">space</span>-<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">between</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">space</span>-around\r\n</pre></li><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>align-items</code> 定义主轴为垂直方向，分布方式。</p><pre class=\"hljs scss\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">flex</span>-start\r\n<span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">flex</span>-end\r\ncenter\r\n</pre></li><li style=\"line-height: 1.7em;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>flex: 1</code> 权重，分配主轴上剩余的空间（有图）</p></li></ol><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"display:flex;\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"A\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"width: 140rpx;height: 80rpx; flex: 1;\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"B\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"width: 140rpx;height: 80rpx;\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"C\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"width: 140rpx;height: 80rpx;\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"D\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"width: 140rpx;height: 80rpx;\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</pre><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/26/094137kvykikzxsjejcjmu.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/26/094137kvykikzxsjejcjmu.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>数据绑定</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/data.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">数据绑定 | 微信开放文档</a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>简单绑定</h4><pre class=\"hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span> </span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ message }</span><span class=\"xml\">} <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Page</span>({\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">message</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Hello MINA!'</span>\r\n  }\r\n})\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>三元运算</h4><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{flag ? true : false}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span> Hidden <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>算数运算</h4><pre class=\"hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;view&gt; {{a + b}} + {{c}} + d &lt;/view&gt;\r\n复制代码</pre><pre class=\"hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Page</span>({\r\n  <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">a</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">b</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">c</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">3</span>\r\n  }\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>view中的内容为 3 + 3 + d。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>是否同意该协议表单按钮</h4><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">checkbox</span> <span class=\"hljs-attr\">checked</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{false}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">checkbox</span>&gt;</span>\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>特别注意：不要直接写  <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>checked=\"false\"</code> ，其计算结果是一个字符串，转成 boolean 类型后代表真值。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>列表渲染wx:for</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/list.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">列表渲染 | 微信开放文档</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在组件上使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:for</code> 控制属性绑定一个数组，即可使用数组中各项的数据重复渲染该组件。 默认数组的当前项的下标变量名默认为 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>index</code> ，数组当前项的变量名默认为 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>item</code> 数据绑定使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>{{}}</code> 将变量包起来，可以作用于：</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>轮播图wx:for</h4><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper-item</span> <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{banner}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">wx:key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.img}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper-item</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper</span>&gt;</span>\r\n复制代码</span></pre><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Page</span>({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n        banner: [{\r\n            img: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../../images/swiper-1.jpeg'</span>,\r\n        }, {\r\n            <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">img</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../../images/swiper-2.jpeg'</span>,\r\n        }]\r\n    }\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>上述代码的简略版</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper-item</span> <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{2}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">wx:key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../../images/swiper-</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index + 1}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}.jpeg\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper-item</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper</span>&gt;</span>\r\n复制代码</span></pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-size: 14px;'>wx:for-item</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-size: 14px;'>wx:for-index</code></h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用 wx:for-item 可以指定数组当前元素的变量名， 使用 wx:for-index 可以指定数组当前下标的变量名：</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper-item</span> <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{banner}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">wx:for-index</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"idx\"</span> <span class=\"hljs-attr\">wx:for-item</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"itemName\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{itemName.img}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper-item</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">swiper</span>&gt;</span>\r\n复制代码</span></pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>wx:key</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:key</code> 是列表中唯一的字符串或数字，且不能动态改变。例如：</p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">switch</span> wx:for=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{objectArray}}\"</span> wx:key=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"unique\"</span> style=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"display: block;\"</span>&gt; {{item.id}} &lt;/<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">switch</span>&gt;\r\n复制代码</pre><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Page</span>({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n        objectArray: [\r\n            { id: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'时间'</span>, unique: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'unique_5'</span> },\r\n            { <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">id</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'速度'</span>, unique: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'unique_4'</span> },\r\n            { <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">id</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'路程'</span>, unique: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'unique_3'</span> },\r\n            { <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">id</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>, unique: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'unique_2'</span> },\r\n        ],\r\n    },\r\n})\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小鹿咖啡的菜单【实例】</h4><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/26/094137l4464ozm3mm5rpko.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/26/094137l4464ozm3mm5rpko.jpg\"></a></p></figure><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">scroll-view</span> <span class=\"hljs-attr\">scroll-y</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"rightBar\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"rightBar_Item\"</span> <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{foodList}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">wx:key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"series_Title flex\"</span>&gt;</span>\r\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_Title_name\"</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.title}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_Title_line\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_List\"</span>&gt;</span>\r\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_Item flex\"</span> <span class=\"hljs-attr\">wx:for-item</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"it\"</span> <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.food}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">wx:key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_Img\"</span>&gt;</span>\r\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_Img\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{it.img}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"tip\"</span> <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{it.tip}</span><span class=\"xml\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{it.tip}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_Cont\"</span>&gt;</span>\r\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_Title\"</span>&gt;</span>\r\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_Ch_Title\"</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{it.name}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_En_Title\"</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{it.enname}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"ju_between\"</span>&gt;</span>\r\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"drink_price\"</span>&gt;</span>¥</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{it.price}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">scroll-view</span>&gt;</span>\r\n复制代码</span></pre><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>Page({\r\n    data: {\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"foodList\"</span>: [\r\n            {\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"id\"</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"title\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"大师咖啡\"</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"food\"</span>: [\r\n                    {\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"id\"</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"img\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"http://r.photo.store.qq.com/psb?/V12jhopW1tjEiY/SvHL13tH2g5UKUmVrbCjAPs4sLNBvAo7fhdJGpEU1.s!/r/dFQBAAAAAAAA\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"name\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"摩卡\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"enname\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"Mocha\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"price\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"27\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"tip\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"买2增1\"</span>\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"id\"</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"title\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"小鹿茶\"</span>,\r\n                <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"food\"</span>: [\r\n                    {\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"id\"</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"img\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"http://r.photo.store.qq.com/psb?/V12jhopW1tjEiY/VoBwYjGp2dIkV1owMWjVr4rm6Tp3wl8H1Gsa7n5hh08!/r/dFQBAAAAAAAA\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"name\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"活力柠檬红宝石茶\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"enname\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"Lemon Ruby Tea\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"price\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"24\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"tip\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"买2增1\"</span>\r\n                    },\r\n                    {\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"id\"</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"img\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"http://r.photo.store.qq.com/psb?/V12jhopW1tjEiY/o7p7XoYAGaeMH6EtQNPVbU8tHFnKZitOcl9RarOcqNA!/r/dAgBAAAAAAAA\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"name\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"桃桃山雾乌龙茶\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"enname\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"White &amp; Yellow Peach Oolong Tea\"</span>,\r\n                        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"price\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"24\"</span>\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n})\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>条件渲染wx:if</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/conditional.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">条件渲染 | 微信开放文档</a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>wx:if使用方法</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:if=\"{{false}}\"</code> , <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:if=\"{{true}}\"</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在小程序里面识别boolean值时，只要属性的值 不为空时，boolean就判断为真，就算里面随便几个字符，例如 wx:if=\"11223\" ，也判断为真， 如果需要为false,就必须采用数据绑定的方式{{false}},才能被小程序解析为假。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在框架中，使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:if=\"\"</code> 来判断是否需要渲染该代码块： 也可以用  <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:elif</code> 和  <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:else</code> 来添加一个 else 块：</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{length &gt; 85}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>优秀<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">wx:elif</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{length &gt; 60}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>及格<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">wx:else</span>&gt;</span>不及格<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><pre class=\"hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Page</span>({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">length</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">61</span>,\r\n    }\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>结果：及格</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>的使用</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>注意： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;block/&gt;</code> 并不是一个组件，它仅仅是一个包装元素，将多个组件包装起来,不会在页面中做任何渲染，只接受控制属性。 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:if</code> 和 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:for</code> 含有 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;block/&gt;</code> 的写法</p><pre class=\"hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">modalToggle</span>: false,\r\n    },\r\n复制代码</pre><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">block</span> <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{modalToggle}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n    \t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"modalWrap\"</span>&gt;</span>\r\n        \t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"modal\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    \t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">block</span>&gt;</span>\r\n\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>不含有 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;block/&gt;</code> 的写法</p><pre class=\"hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">modalToggle</span>: false,\r\n    },\r\n复制代码</pre><pre class=\"prettyprint hljs scala\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;view <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span></span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"modalWrap\"</span> wx:<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"{{modalToggle}}\"</span>&gt;\r\n    \t&lt;view <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span></span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"modal\"</span>&gt;&lt;/view&gt;\r\n\t&lt;/view&gt;\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>教育Top10收藏列表【实例】</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>页面描述：当有数据时，显示左侧列表。当没有数据时，则显示右侧内容</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/26/094138uq3bos7m13mb7m77.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/26/094138uq3bos7m13mb7m77.jpg\"></a></p></figure><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">block</span> <span class=\"hljs-attr\">wx:if</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{list.length&gt;0}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">block</span> <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{list}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">wx:key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"idx\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">block</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">block</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">block</span> <span class=\"hljs-attr\">wx:else</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>暂时未收藏哦~<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">block</span>&gt;</span>\r\n复制代码</span></pre><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Page</span>({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n        <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">list</span>: [<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'月落乌啼霜满天'</span>,<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'江枫渔火对愁眠'</span>]\r\n    },\r\n})\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-size: 14px;'>wx:if</code> vs  <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-size: 14px;'>hidden</code></h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1. <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:if</code> 在初始渲染条件为  <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>false</code> ，框架什么也不做，在条件第一次变成真的时候才开始局部渲染。所以当  <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:if</code> 的条件值切换时，框架有一个局部渲染的过程，确保条件块在切换时销毁或重新渲染。 2. <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>hidden</code> 就简单的多，组件始终会被渲染，只是简单的控制显示与隐藏。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>总结: <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx:if</code> 有更高的切换消耗，而  <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>hidden</code> 有更高的初始渲染消耗。因此，如果需要频繁切换的情景下，用  <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>hidden</code></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>hidden不生效原因及解决方案?</h4><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"true\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"display:flex;\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>text1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>text2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>你会发现 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>hidden</code> 没生效。经我实验发现 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>hidden</code> 元素对块状布局才生效，所以这段代码里导致 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>hidden</code> 没生效的罪魁祸首是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>display:flex</code> 。把这个去掉就可以了。</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>如果一定要用flex布局怎么办？</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其实这里想用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>hidden</code> 无非就是想影藏这个布局， <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>display:none</code> 也能做到隐藏。这里可以用一个取巧的方法，动态设置 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>display</code> 属性，示例如下：</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"display:</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{hideview ? 'none' : 'flex'}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">};\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>text1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>text2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>hideview</code> 是在对应的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>js</code> 里是一个变量，由 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>js</code> 来动态控制。</p> </td>", "pub_time": "2019-11-26 00:02", "author": "Rolan"}
{"title": "捕获web与小程序JS异常的方法 ", "content": "<td id=\"article_content\"> \n                     \n                    <div><div>前段时间，我们发现<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>异步代码里的错误没有上报到异常监控平台，经过排查这部分小程序没法直接监听到，需要我们手动上报。再者，开发过程中，异常处理一直是不太受重视且容易遗漏的模块。本文总结了JS异常的类型及捕获方法，最后针对小程序给出错误处理经验。</div><p><br></p><h2 data-id=\"heading-0\">JS异常分类</h2><div><ul><li>Error：常规异常，一般为用户自定义的异常，如 <code>new Error(\"error message\")</code>，这类自定义的错误用来统计异常数据，直接上报即可；</li><li>RangeError：数值溢出越界异常，当 Number 类型变量超过指定的范围，如<br><code>var pi = 3.14159;  pi.toFixed(100000);</code>d（<code>toFixed()</code>方法参数只能接受 0~100） ；</li><li>ReferenceError：引用异常，当不存在的变量被使用的时候，这类错误一般在编码检查阶段就会暴露；</li><li>SyntaxError：语法错误，作为解释型语言的 JavaScript 只有到执行的时候才能识别出语法错误，这类错误在编码检查和构建阶段就会暴露；</li><li>TypeError：类型错误，当调用不存在的对象方法或对象不存在时，例如：<code>var foo = {}; foo.bar();</code>为了避免这类错误出现，可使用防御式编程，但如若数据有误则应抛出异常；</li><li>URIError：<code>encodeURI() </code>和 <code>decodeURI()</code> 方法参数不正确抛出的异常，例如：<code>decodeURIComponent(\"%\");</code></li><li>EvalError：<code>eval() </code>方法参数不正确抛出的异常；</li></ul><p><br></p></div><h2 data-id=\"heading-1\">Web端对异常的捕获能力</h2><p>了解了异常的分类后，我们还需要知道浏览器如何捕获到这些异常。</p><h3 data-id=\"heading-2\">1）try-catch</h3><p>JavaScript 里有 try-catch 语法块，可用于异常捕获处理。try-catch 可以成功捕获大部分错误，但对于 SyntaxError 语法错误 和 异步代码中的错误，则无法捕获。</p><p>例如：SyntaxError 语法错误</p><p></p><p></p><p></p><pre code-lang=\"javascript\" class=\"hljs javascript\"><code class=\"hljs javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">try</span> {\r\n    <span class=\"hljs-keyword\">var</span> p = \r\n} <span class=\"hljs-keyword\">catch</span>(e) { \r\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'caught error: '</span>, e.message)\r\n}\r\n\r\n<span class=\"hljs-comment\">// 输出：Uncaught SyntaxError: Unexpected token '}'</span><span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>例如：异步代码中的错误</p><p></p><p></p><p></p><pre code-lang=\"bash\" class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">try {\r\n    <span class=\"hljs-built_in\">set</span>Timeout(<span class=\"hljs-function\"><span class=\"hljs-title\">function</span></span>() {\r\n        var p = error + 1\r\n    }, 0)\r\n} catch(e) {\r\n    console.log(<span class=\"hljs-string\">'caught error:'</span>, e.message)\r\n}\r\n\r\n// 输出：Uncaught ReferenceError: error is not defined<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><h3 data-id=\"heading-3\">2）error 事件</h3><p>try-catch 针对我们预感到可能会有问题的代码，捕获异常进行处理，而对于一些我们未知的错误，可以使用 window 对象的 error 事件进行监听。</p><p>error 事件可以捕获到同步或异步（非 Promise ）代码中的非语法错误。</p><p>例如：异步代码中的错误</p><p></p><p></p><p></p><pre code-lang=\"javascript\" class=\"hljs javascript\"><code class=\"hljs javascript copyable\" lang=\"javascript\"><span class=\"hljs-built_in\">window</span>.addEventListener(<span class=\"hljs-string\">'error'</span>, e =&gt; {\r\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'caught error'</span>, e.message);\r\n  e.preventDefault();\r\n});\r\nsetTimeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\r\n    <span class=\"hljs-keyword\">var</span> p = error + <span class=\"hljs-number\">1</span>\r\n}, <span class=\"hljs-number\">0</span>)\r\n\r\n<span class=\"hljs-comment\">// 输出：caught error Uncaught ReferenceError: error is not defined</span><span class=\"copy-code-btn\">复制代码</span></code></pre><p>需要注意的是：<code>e.preventDefault() </code>在 error 监听事件中调用，可以阻止报告异常给浏览器，别让浏览器默认地在控制台输出错误。</p><p>另外，文档中也提到关于资源加载失败的错误：</p><blockquote>When a resource (such as an &lt;img&gt; or &lt;script&gt;) fails to load, an error event using interface Event is fired at the element that initiated the load, and the onerror() handler on the element is invoked. These error events do not bubble up to window, but (at least in Firefox) can be handled with a window.addEventListener configured with useCapture set to True.<br></blockquote><p></p><p>对于图片或脚本资源加载失败，这类错误不会冒泡给 window，但可以在捕获阶段进行处理，即<code>addEventListener</code> 最后一个参数置为 <code>true</code>：</p><p></p><p></p><p></p><pre code-lang=\"bash\" class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">window.addEventListener(<span class=\"hljs-string\">'error'</span>, e =&gt; {\r\n    console.log(<span class=\"hljs-string\">'资源加载失败'</span>);\r\n}, <span class=\"hljs-literal\">true</span>)<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><h3 data-id=\"heading-4\">3）unhandledRejection 与 rejectionhandled 事件</h3><p>error 事件可以捕获到非 Promise 的异步错误，而针对 Promise，window对象有专门的事件来处理这类错误。</p><p>当异步错误没被 catch 住时，触发 unhandledRejection 事件：</p><p></p><p></p><p></p><pre code-lang=\"javascript\" class=\"hljs javascript\"><code class=\"hljs javascript copyable\" lang=\"javascript\"><span class=\"hljs-built_in\">window</span>.addEventListener(<span class=\"hljs-string\">'unhandledrejection'</span>, e =&gt; {\r\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'caught unhandledrejection'</span>, e.reason);\r\n    e.preventDefault();\r\n})\r\n<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">resolve, reject</span>) </span>{\r\n    tp = error + <span class=\"hljs-number\">1</span>\r\n})\r\n\r\n<span class=\"hljs-comment\">// 输出：caught unhandledrejection ReferenceError: error is not defined</span><span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>而当异步错误一开始未被 catch 住，过后才被 catch 的情况，会先触发 unhandledRejection 事件，当被 catch 的时候，会触发 rejectionhandled 事件：</p><p></p><p></p><p></p><pre code-lang=\"bash\" class=\"hljs bash\"><code class=\"hljs bash copyable\" lang=\"bash\">window.addEventListener(<span class=\"hljs-string\">'unhandledrejection'</span>, e =&gt; {\r\n    console.log(<span class=\"hljs-string\">'caught unhandledrejection'</span>, e.reason);\r\n    e.preventDefault();\r\n})\r\nwindow.addEventListener(<span class=\"hljs-string\">'rejectionhandled'</span>, e =&gt; {\r\n    console.log(<span class=\"hljs-string\">'caught rejectionhandled'</span>, e.reason);\r\n    e.preventDefault();\r\n})\r\nvar p = new Promise(<span class=\"hljs-keyword\">function</span>(resolve, reject) {\r\n    tp = error + 1\r\n})\r\n<span class=\"hljs-built_in\">set</span>Timeout(() =&gt; {\r\n    p.catch(e =&gt; console.log(<span class=\"hljs-string\">'catch'</span>, e.message))\r\n}, 1000)\r\n\r\n// 输出：\r\n// caught unhandledrejection ReferenceError: error is not defined\r\n// （1s后）\r\n// catch error is not defined\r\n// caught rejectionhandled ReferenceError: error is not defined<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p>也就是说未处理的异常增加时会触发 unhandledRejection，而未处理的异常（被处理后）减少时会触发 rejectionhandled，这在上报异常中可以避免上报那些已经被处理过的异常。</p><p>关于兼容性，截止至本文成稿，移动端的支持程度还是可以的，iOS主流版本 和 Chrome 都支持：</p><p><img class=\"lazyload inited loaded\" data-src=\"https://user-gold-cdn.xitu.io/2019/11/22/16e935cb108fe23c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" data-width=\"1280\" data-height=\"282\" src=\"https://user-gold-cdn.xitu.io/2019/11/22/16e935cb108fe23c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\"><br></p><p><a href=\"https://html.spec.whatwg.org/multipage/webappapis.html#unhandled-promise-rejections:event-unhandledrejection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><i></i></a></p><p><i>（图来源：unhandledrejection/rejectionhandled events，</i><a href=\"https://caniuse.com/#search=unhandledrejection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">caniuse.com/#search=unh…</a><i>）</i></p><p><i><br></i></p><h2 data-id=\"heading-5\">小程序端对异常的捕获能力</h2><p>小程序的 App 对象中有 onError 方法，相当于 web 端的 error 事件，可以捕获到同步或异步（非 Promise ）代码中的非语法错误。而对于 Promise，小程序并没有如 window 对象中的 unhandledRejection 与 rejectionhandled 事件，无法像 web 端那样统一处理异常。</p><p>不过，既然都是 Promise 相关的错误，那么，我们可以改写或覆盖 Promise 对象，将其进行封装把所有错误都 catch 住也就可以了。</p><p>推荐 <a href=\"https://www.npmjs.com/package/promise-polyfill\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">promise-polyfill </a>这个轻量级的 promise 实现包，其中提供了 _unhandledRejectionFn 方法，用于捕获那些未被处理的 Promise 异常。</p><p></p><p></p><p></p><pre code-lang=\"javascript\" class=\"hljs javascript\"><code class=\"hljs javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-built_in\">Promise</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'promise-polyfill'</span>;\r\n<span class=\"hljs-built_in\">Promise</span>._unhandledRejectionFn = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">rejectError</span>) </span>{\r\n    <span class=\"hljs-comment\">// 处理异常或上报</span>\r\n}\r\n<span class=\"copy-code-btn\">复制代码</span></code></pre><p></p><p><br></p><h2 data-id=\"heading-6\">总结</h2><p>关于JS的异常总结已经差不多了，之前一直觉得这部分知识不够系统，一来自己重视程度不够，二来也是知识点不多但都较零散。经过这段时间收集资料，捋清思路，编码实现还算有所收获，便总结成文，若有不尽不祥不对之处烦请各位读者多多指点。</p><p><br></p><h2 data-id=\"heading-7\">参考文献</h2><ol><li><a href=\"https://www.sitepoint.com/exceptional-exception-handling-in-javascript/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Exceptional Exception Handling in JavaScript</a><br></li><li><a href=\"https://github.com/happylindz/blog/issues/5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">前端代码异常监控实战</a></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GlobalEventHandlers.onerror</a><br></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises#Promise_rejection_events\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Promise rejection events in Using Promises</a><br></li><li><a href=\"https://www.npmjs.com/package/promise-polyfill\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">promise-polyfill</a></li></ol></div> </td>", "pub_time": "2019-11-26 00:50", "author": "Rolan"}
{"title": "微信小程序：扭蛋抽奖机-css3动画实现 ", "content": "<td id=\"article_content\"> \n                     \n                    <p data-anchor-id=\"v3is\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>最近快速上线一个抽奖活动，又不想用canvas做，思考了很久，还是决定使用css3的动画来做，只要小球动得快，就没人发现我这些个小球的运动路径都是一样的了。先上动图。</p><p><a href=\"data/attachment/portal/201911/26/100242zvvhtevwz33hpr3h.gif\" target=\"_blank\"><img src=\"data/attachment/portal/201911/26/100242zvvhtevwz33hpr3h.gif\"></a></p><p data-anchor-id=\"ego3\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>扭蛋机抽奖.gif</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"k1o5\" id=\"wxml文件\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>wxml文件：</h3><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"3zd0\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball-box\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_1 {{start?'weiyi_1':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball1.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_2 {{start?'weiyi_2':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball1.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_3 {{start?'weiyi_3':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball2.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_4 {{start?'weiyi_4':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball2.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_5 {{start?'weiyi_5':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball1.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_6 {{start?'weiyi_6':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball2.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_7 {{start?'weiyi_7':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball3.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_8 {{start?'weiyi_8':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball3.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_9 {{start?'weiyi_9':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball3.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_10 {{start?'weiyi_10':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball4.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_11 {{start?'weiyi_11':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball4.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/view&gt;</span></code></li></ol></pre><p data-anchor-id=\"t6yp\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>这个做得我头皮发麻，但是写这篇文章时突然想到，为啥不用个for循环来做呢？！</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"bgcz\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;view</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball-box\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;image</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">wx:for</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ballList\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">wx:for-index</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"i\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"ball ball_{{i}} {{start?'weiyi_{{i}}':''}}\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"atn\" style=\"color: rgb(102, 0, 102);\">src</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"atv\" style=\"color: rgb(0, 136, 0);\">\"https://acceleratepic.miniso.com/miniso/ball{{i}}.png\"</span><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&gt;&lt;/image&gt;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"tag\" style=\"color: rgb(0, 0, 136);\">&lt;/view&gt;</span></code></li></ol></pre><p data-anchor-id=\"bc1u\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>这样看起来是不是舒服多了，因为是这段代码现场手写，如果有啥bug也不好说。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"ue9u\" id=\"wxss文件\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>wxss文件：</h3><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"3q72\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">weiyi_1 </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  animation</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> around1 </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1.5s</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> linear infinite</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">animation</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> around1 </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1.5s</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> linear infinite</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li></ol></pre><p data-anchor-id=\"q7wt\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>简单的动画</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"2275\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"com\" style=\"color: rgb(136, 0, 0);\">/* 位移 */</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">@-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">keyframes around1 </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">20</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">250rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">40</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">200rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">60</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">50rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">230rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">80</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">300rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">50rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">webkit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">@keyframes</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> around1 </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">20</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">250rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">40</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">200rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">60</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">50rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">230rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">80</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">300rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">50rpx</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    transform</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> translate</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></code></li></ol></pre><p data-anchor-id=\"quo6\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>简单的位移 <br>其他就不一一列出来了，反正都差不多，改变一下运动轨迹就行了。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"n5s1\" id=\"js文件\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>js文件：</h3><p data-anchor-id=\"f57w\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>相比丧病的样式，js文件就简单多了。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><pre class=\"prettyprint linenums prettyprinted\" data-anchor-id=\"mtpf\" style='padding: 9.5px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: rgb(51, 51, 51); border-radius: 4px; margin-top: 0px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background: none 0px 0px repeat scroll rgba(102, 128, 153, 0.05); border: 0px solid rgba(0, 0, 0, 0.15); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 2px inset, rgba(102, 128, 153, 0.05) 45px 0px 0px inset, rgba(102, 128, 153, 0.05) 0px 1px 0px;'><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 35px; color: rgba(102, 128, 153, 0.4);\"><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">_this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">setData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  start</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">true</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L3\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">控制抽奖开始</span></code></li><li class=\"L4\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'></code></li><li class=\"L5\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">setTimeout</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></code></li><li class=\"L6\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        _this</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">setData</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span></code></li><li class=\"L7\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          start</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">false</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></code></li><li class=\"L8\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">          </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">end</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">true</span></code></li><li class=\"L9\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></code></li><li class=\"L0\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//其他代码部分</span></code></li><li class=\"L1\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">      </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">//time是接口请求开始到结束的时间</span></code></li><li class=\"L2\" style=\"line-height: 20px; padding-left: 15px;\"><code style='padding: 0px; font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace; color: inherit; border-radius: 4px; background-color: transparent; border: 0px;'><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Math</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">ceil</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">time </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1500</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1500</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> time</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></code></li></ol></pre><p data-anchor-id=\"gkrq\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>这里用了一个setTimeout，用于设置动画结束时间，优化一下动画，不让结束看起来太突兀。 <br>1500是wxss里这是的动画时间。</p><div class=\"md-section-divider\" style='color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'></div><h3 data-anchor-id=\"1t3j\" id=\"总结\" style='margin: 20px 0px; font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-weight: 500; line-height: 40px; color: rgb(44, 62, 80); text-rendering: optimizeLegibility; font-size: 21px; background-color: rgb(249, 249, 245);'>总结：</h3><p data-anchor-id=\"x5li\" style='margin: 0px 0px 20px; color: rgb(44, 62, 80); font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"Helvetica Neue\", \"Microsoft Yahei\", \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; background-color: rgb(249, 249, 245);'>简单的扭蛋机，有时间用canvas来做做。</p> </td>", "pub_time": "2019-11-26 00:59", "author": "Rolan"}
{"title": "Taro+react自定义导航条/Tabbar菜单 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>基于taro自定义导航栏Navbar|仿微信顶部导航|taro自定义tabbar</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这几天研究taro发现，官网提供的都是H5、<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>案例，至于RN案例甚少。恰好之前有过react及react-native项目经验，经过一番探究，终于实现能编译到多端，不过采坑不少，尤其是在RN环境下的样式问题。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>react仿微信web版聊天室： <a href=\"https://blog.csdn.net/yanxinyun1990/article/details/94143575\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">blog.csdn.net/yanxinyun19…</a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><b>如下图：在H5/小程序/RN效果均测试通过</b></p><p><a href=\"data/attachment/portal/201911/27/104107d56rrarhdmije3j2.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/27/104107d56rrarhdmije3j2.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>项目中用到的图标都是阿里iconfont字体图标，下载好后将fonts文件夹拷贝到项目目录下。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>import './styles/fonts/iconfont.scss'</code> <br>在h5、小程序下 这种写法即可： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;Text className=\"iconfont icon-back\"&gt;&lt;/Text&gt;</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>不过为了兼容RN，只能通过Unicode方式这样写： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>&lt;Text className=\"iconfont\"&gt;&amp;#xe84c;&lt;/Text&gt;</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果是通过变量传递： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>let back = '\\ue84c' &lt;Text&gt;{back}&lt;/Text&gt;</code></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Taro自定义导航栏</h3><p><a href=\"data/attachment/portal/201911/27/104015fpc0jr99m9g707kk.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/27/104015fpc0jr99m9g707kk.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在App.js配置navigationStyle，将设置为custom，就可以自定义导航栏</p><pre class=\"prettyprint hljs scala\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">App</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">extends</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Component</span> </span>{\r\n    config = {\r\n        pages: \r\n            <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'pages</span>/index/index',\r\n            ...\r\n        ],\r\n        window: {\r\n            backgroundTextStyle: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'ligh</span>t',\r\n            navigationBarBackgroundColor: '#fff',\r\n            navigationBarTitleText: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'Tar</span>o',\r\n            navigationBarTextStyle: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'blac</span>k',\r\n            navigationStyle: <span class=\"hljs-symbol\" style=\"color: rgb(188, 96, 96);\">'custo</span>m'\r\n        },\r\n        ...\r\n    }\r\n    \r\n    ...\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>components目录下新建导航栏Navbar组件</p><pre class=\"prettyprint hljs dart\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/*\r\n * @desc   Taro自定义导航条navbar组件\r\n * @about  Q：282310962  wx：xy190310\r\n */</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> Taro from <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'@tarojs/taro'</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> { View, Text, Input, Image } from <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'@tarojs/components'</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> classNames from <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"classnames\"</span>;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'./index.scss'</span>\r\n \r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">NavBar</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">extends</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Taro</span>.<span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Component</span> </span>{\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 默认配置</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> defaultProps = {\r\n        isBack: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">false</span>,\r\n        leftIcon: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'\\ue84c'</span>,\r\n        title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">' '</span>,\r\n        background: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#6190e8'</span>,\r\n        color: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#fff'</span>,\r\n        center: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">false</span>,\r\n        search: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">false</span>,\r\n        searchStyle: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>,\r\n        fixed: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">false</span>,\r\n        headerRight: [],\r\n    }\r\n    constructor(props) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">super</span>(props)\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.state = {\r\n            searchText: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>,\r\n        }\r\n    }\r\n\t\r\n\t...\r\n \r\n    render() {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> { isBack, leftIcon, title, background, color, center, search, searchStyle, fixed, height, headerRight } = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.props\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> { searchText } = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.state\r\n        \r\n        let weapp = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">false</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (process.env.TARO_ENV === <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'weapp'</span>) {\r\n            weapp = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">true</span>\r\n        }\r\n \r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> (\r\n            &lt;View className={classNames(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'taro__navbar'</span>, fixed &amp;&amp; <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'taro__navbar--fixed'</span>, fixed &amp;&amp; weapp &amp;&amp; <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'taro__navbar-weapp--fixed'</span>)}&gt;\r\n                &lt;View className={classNames(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'taro__navbar-wrap'</span>, fixed &amp;&amp; <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'taro__navbar-wrap--fixed'</span>, weapp &amp;&amp; <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'taro__navbar-wrap__weapp'</span>)} style={{backgroundColor: background}}&gt;\r\n                    {<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* 返回 */</span>}\r\n                    &lt;View className={classNames(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'taro__navbar-left__view'</span>, isBack &amp;&amp; <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'taro__navbar-left__view--isback'</span>)}&gt;\r\n                    {isBack &amp;&amp;\r\n                        &lt;TouchView activeOpacity={<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">.5</span>} onClick={<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.handleNavigateBack}&gt;\r\n                            &lt;View className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__navbar-icon__item\"</span>&gt;&lt;Text className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"iconfont taro__navbar-iconfont\"</span> style={{color: color}}&gt;{leftIcon}&lt;/Text&gt;&lt;/View&gt;\r\n                        &lt;/TouchView&gt;\r\n                    }\r\n                    &lt;/View&gt;\r\n                    \r\n                    {<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* 标题 */</span>}\r\n                    {!search &amp;&amp; center &amp;&amp; !weapp ? &lt;View className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"flex1\"</span> /&gt; : <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">null</span>}\r\n                    {search ? \r\n                    (\r\n                        &lt;View className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__navbar-search flex1\"</span>&gt;\r\n                            &lt;Input className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__navbar-search__input\"</span> placeholder=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"搜索...\"</span> onInput={<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.updateInputText} style={{color: color, ...searchStyle}} /&gt;\r\n                        &lt;/View&gt;\r\n                    )\r\n                    :\r\n                    (\r\n                        &lt;View className={classNames(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'taro__navbar-title flex1'</span>, center &amp;&amp; !weapp &amp;&amp; <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'taro__navbar-title--center'</span>)}&gt;\r\n                            {title &amp;&amp; &lt;Text className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__navbar-title__text\"</span> style={{color: color}}&gt;{title}&lt;/Text&gt;}\r\n                        &lt;/View&gt;\r\n                    )\r\n                    }\r\n \r\n                    {<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* 右侧 */</span>}\r\n                    &lt;View className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__navbar-right__view\"</span>&gt;\r\n                    {headerRight.map((item, index) =&gt; (\r\n                        &lt;TouchView activeOpacity={<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">.5</span>} key={index} onClick={()=&gt;item.onClick &amp;&amp; item.onClick(searchText)}&gt;\r\n                            &lt;View className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__navbar-icon__item\"</span>&gt;\r\n                                {item.icon &amp;&amp; &lt;Text className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"iconfont taro__navbar-iconfont\"</span> style={{color: color, ...item.style}}&gt;{item.icon}&lt;/Text&gt;}\r\n                                {item.text &amp;&amp; &lt;Text className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__navbar-iconfont__text\"</span> style={{color: color, ...item.style}}&gt;{item.text}&lt;/Text&gt;}\r\n                                {item.img &amp;&amp; &lt;Image className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__navbar-iconfont__img\"</span> src={item.img} mode=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'aspectFit'</span> /&gt;}\r\n                                {<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* 圆点 */</span>}\r\n                                {!!item.badge &amp;&amp; &lt;Text className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__badge taro__navbar-badge\"</span>&gt;{item.badge}&lt;/Text&gt;}\r\n                                {!!item.dot &amp;&amp; &lt;Text className=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__badge-dot taro__navbar-badge--dot\"</span>&gt;&lt;/Text&gt;}\r\n                            &lt;/View&gt;\r\n                        &lt;/TouchView&gt;\r\n                    ))\r\n                    }\r\n                    &lt;/View&gt;\r\n                &lt;/View&gt;\r\n            &lt;/View&gt;\r\n        );\r\n    }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在页面引入组件即可： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>import NavBar from '@components/navbar'</code></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>支持自定义背景、颜色、左侧图标、标题居中、搜索框，右侧按钮支持图标/文字/图片，还可以设置样式，红点提示、事件处理</p><p><a href=\"data/attachment/portal/201911/27/104010wcv149cg97r4o4x7.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/27/104010wcv149cg97r4o4x7.jpg\"></a></p><pre class=\"prettyprint hljs groovy\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;NavBar title=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'Taro标题栏'</span> fixed\r\n    headerRight={[\r\n        {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">icon:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'\\ue614'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">style:</span> {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">color:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#e93b3d'</span>}},\r\n        {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">img:</span> require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../../assets/taro.png'</span>), <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">dot:</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">onClick:</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.handleCallback},\r\n        {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">icon:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'\\ue600'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">style:</span> {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">marginRight:</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>}},\r\n    ]} \r\n/&gt;复制代码</pre><p><a href=\"data/attachment/portal/201911/27/104017cqfa1sfvmyaf33m6.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/27/104017cqfa1sfvmyaf33m6.jpg\"></a></p><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;NavBar isBack leftIcon={<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'\\ue69f'</span>} title=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'搜索栏'</span> background=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#42b983'</span> color=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#fcc'</span> search\r\n    searchStyle={{\r\n        backgroundColor:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'rgba(255,255,255,.6)'</span>, borderRadius: Taro.pxTransform(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50</span>), color: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#333'</span>\r\n    }}\r\n    headerRight={[\r\n        {icon: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'\\ue622'</span>, style: {color: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#6afff9'</span>}},\r\n        {icon: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'\\ue63a'</span>},\r\n    ]} \r\n/&gt;复制代码</pre><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>Taro自定义底部Tabbar</h3><p><a href=\"data/attachment/portal/201911/27/104013iijrrhnzeiaa5kza.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/27/104013iijrrhnzeiaa5kza.jpg\"></a></p><p><a href=\"data/attachment/portal/201911/27/104016kz5bb34nwypry4z0.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/27/104016kz5bb34nwypry4z0.jpg\"></a></p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> Taro <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'@tarojs/taro'</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> { View, Text } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'@tarojs/components'</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> classNames <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'classnames'</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'./index.scss'</span>\r\n \r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">TabBar</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">extends</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Taro</span>.<span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Component</span> </span>{\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 默认参数配置</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> defaultProps = {\r\n        <span class=\"hljs-attr\">current</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>,\r\n        <span class=\"hljs-attr\">background</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#fff'</span>,\r\n        <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#999'</span>,\r\n        <span class=\"hljs-attr\">tintColor</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#6190e8'</span>,\r\n        <span class=\"hljs-attr\">fixed</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>,\r\n        <span class=\"hljs-attr\">onClick</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {},\r\n        <span class=\"hljs-attr\">tabList</span>: []\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">constructor</span>(props) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">super</span>(props)\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.state = {\r\n            <span class=\"hljs-attr\">updateCurrent</span>: props.current\r\n        }\r\n    }\r\n    ...\r\n \r\n    render() {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> { background, color, tintColor, fixed } = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.props\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> { updateCurrent } = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.state\r\n        \r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> (\r\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">View</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">{classNames(</span>'<span class=\"hljs-attr\">taro__tabbar</span>', <span class=\"hljs-attr\">fixed</span> &amp;&amp; '<span class=\"hljs-attr\">taro__tabbar--fixed</span>')}&gt;</span>\r\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">View</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">{classNames(</span>'<span class=\"hljs-attr\">taro__tabbar-list</span>', <span class=\"hljs-attr\">fixed</span> &amp;&amp; '<span class=\"hljs-attr\">taro__tabbar-list--fixed</span>')} <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">{{backgroundColor:</span> <span class=\"hljs-attr\">background</span>}}&gt;</span>\r\n                    {this.props.tabList.map((item, index) =&gt; (\r\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">View</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__tabbar-item taro__tabbar-item--active\"</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">{index}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">{this.updateTabbar.bind(this,</span> <span class=\"hljs-attr\">index</span>)}&gt;</span>\r\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">View</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__tabbar-icon\"</span>&gt;</span>\r\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"iconfont taro__tabbar-iconfont\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">{{color:</span> <span class=\"hljs-attr\">updateCurrent</span> == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">index</span> ? <span class=\"hljs-attr\">tintColor</span> <span class=\"hljs-attr\">:</span> <span class=\"hljs-attr\">color</span>}}&gt;</span>{item.icon}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span>&gt;</span>\r\n                                {/* 圆点 */}\r\n                                {!!item.badge &amp;&amp; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__badge taro__tabbar-badge\"</span>&gt;</span>{item.badge}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span>&gt;</span>}\r\n                                {!!item.dot &amp;&amp; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__badge-dot taro__tabbar-badge--dot\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span>&gt;</span>}\r\n                            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">View</span>&gt;</span>\r\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"taro__tabbar-title\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">{{color:</span> <span class=\"hljs-attr\">updateCurrent</span> == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">index</span> ? <span class=\"hljs-attr\">tintColor</span> <span class=\"hljs-attr\">:</span> <span class=\"hljs-attr\">color</span>}}&gt;</span>{item.title}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">Text</span>&gt;</span>\r\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">View</span>&gt;</span>\r\n                    ))}\r\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">View</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">View</span>&gt;</span></span>\r\n        );\r\n    }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>自定义tabbar也支持自定义背景、颜色、图标，点击选项事件返回索引值</p><pre class=\"prettyprint hljs groovy\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>&lt;TabBar current={currentTabIndex} background=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#f8f8f8'</span> color=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#999'</span> tintColor=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'#6190e8'</span> fixed onClick={<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.handleTabbar}\r\n    tabList={[\r\n        {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">icon:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'\\ue627'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">title:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'首页'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">badge:</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">8</span>},\r\n        {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">icon:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'\\ue61e'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">title:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'商品'</span>},\r\n        {<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">icon:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'\\ue605'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">title:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'个人中心'</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">dot:</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>},\r\n    ]}\r\n/&gt;\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>好了，今天就介绍到这里，后续会考虑使用Taro技术开发个多端实战项目。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a href=\"https://blog.csdn.net/yanxinyun1990/article/details/100573360\" target=\"_blank\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">ReactNative聊天APP实战|仿微信聊天/朋友圈/红包界面</a></p><div><br></div><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'></p> </td>", "pub_time": "2019-11-27 00:38", "author": "Rolan"}
{"title": "微信小程序推送消息简单Demo ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在开始前，你需要准备：</p><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">注册微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a></li><li style=\"line-height: 1.7em; list-style-type: disc;\">一个简单的springBoot 项目</li><li style=\"line-height: 1.7em; list-style-type: disc;\">微信开发者工具</li></ul><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>正式</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>微信小程序发送消息主要通过WxMaTemplateMessage 类来推送</p><pre class=\"prettyprint hljs typescript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> WxMaTemplateMessage <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">implements</span> Serializable {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> toUser;       <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 给谁推送(用户openId)</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> templateId;  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 消息ID</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> page;    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 用户点开消息跳转到对应的小程序界面</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> formId;  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 表单formId</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> List&lt;WxMaTemplateData&gt; data; <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 消息的数据列表</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> emphasisKeyword;  \r\n...\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>所以我们在推送前需要构造这些信息，formId 和toUser(openId) 是从前端传过来的。formId 可以通过表单或者支付来获取，表单比较简单，只需要把report-submit 设置为true 就可以获得。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>简单通过微信开发者工具来获取formId(openId 数据库存了)</p><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">先建立一个前端项目，AppID 就是小程序的id，在微信公众号后台可以看到。</p><figure style=\"margin: 0px 0px 1em;\"><p><a href=\"data/attachment/portal/201911/27/103654i1zmqnn2btlu728g.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/27/103654i1zmqnn2btlu728g.jpg\"></a></p></figure></li><li style=\"line-height: 1.7em;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">修改index/index.js 和index.wxml (百度某位同学的)，通过表单来获取formId ，并发送到后台。</p></li></ol><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\">// index.wxml\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">form</span> <span class=\"hljs-attr\">bindsubmit</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'registerFormSubmit'</span> <span class=\"hljs-attr\">report-submit</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'true'</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'buttons'</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'confirmbtn'</span> <span class=\"hljs-attr\">form-type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'submit'</span>&gt;</span>确定<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">form</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>formid： </span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{formid}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'push'</span>&gt;</span>\r\n    发送\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n\r\n复制代码</span></pre><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//index.js</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取应用实例</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> app = getApp()\r\n\r\nPage({\r\n  \r\n  <span class=\"hljs-attr\">data</span>: {\r\n    <span class=\"hljs-attr\">formid</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>\r\n  },\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//事件处理函数</span>\r\n  registerFormSubmit: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span> (<span class=\"hljs-params\">e</span>) </span>{\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//    打印formId</span>\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(e.detail.formId);\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n      <span class=\"hljs-attr\">formid</span>: e.detail.formId\r\n    })\r\n   },\r\n  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//测试推送</span>\r\n push() {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> formid = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.formid;\r\n   <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> openid = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'oT-H-40ZHdRX1REZFKQhPg3jJZoQ'</span>;\r\n    wx.request({\r\n      <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'http://localhost:8080/push?openId='</span> + openid + <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"&amp;formId=\"</span> + formid,\r\n      success(res) {\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"推送结果：\"</span>, res)\r\n      },\r\n      fail(err) {\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"推送失败：\"</span>, err)\r\n      }\r\n    })\r\n  }\r\n})\r\n\r\n复制代码</pre><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/27/103652fbe9n569fqfnyhnh.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/27/103652fbe9n569fqfnyhnh.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这里formid 在测试的时候获取不到，调到真机调试，或者用预览就行了。</p><ol start=\"3\" style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\">请求后台接口来发送消息（ctrl c v 百度某同学）</li></ol><pre class=\"prettyprint hljs dart\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> cn.binarywang.wx.miniapp.api.WxMaService;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> cn.binarywang.wx.miniapp.api.impl.WxMaServiceImpl;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> cn.binarywang.wx.miniapp.bean.WxMaTemplateData;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> cn.binarywang.wx.miniapp.bean.WxMaTemplateMessage;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> cn.binarywang.wx.miniapp.config.WxMaInMemoryConfig;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> me.chanjar.weixin.common.error.WxErrorException;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> org.springframework.web.bind.annotation.GetMapping;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> org.springframework.web.bind.annotation.RestController;\r\n\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> java.util.ArrayList;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> java.util.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">List</span>;\r\n\r\n<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@RestController</span>\r\npublic <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">PushController</span> </span>{\r\n\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@GetMapping</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"/push\"</span>)\r\n    public <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> push(<span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@RequestParam</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> openId, <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@RequestParam</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> formId) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//1,配置小程序信息</span>\r\n        WxMaInMemoryConfig wxConfig = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> WxMaInMemoryConfig();\r\n        wxConfig.setAppid(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"你的appId\"</span>);\r\n        wxConfig.setSecret(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"你的secret\"</span>);\r\n\r\n        WxMaService wxMaService = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> WxMaServiceImpl();\r\n        wxMaService.setWxMaConfig(wxConfig);\r\n\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//2,设置模版信息（keyword1：类型，keyword2：内容）</span>\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">List</span>&lt;WxMaTemplateData&gt; templateDataList = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> ArrayList&lt;&gt;(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>);\r\n        WxMaTemplateData data1 = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> WxMaTemplateData(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"keyword1\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"获取老师微信\"</span>);\r\n        WxMaTemplateData data2 = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> WxMaTemplateData(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"keyword2\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"2501902696\"</span>);\r\n        WxMaTemplateData data3 = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> WxMaTemplateData(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"keyword3\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"2501902696\"</span>);\r\n        WxMaTemplateData data4 = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> WxMaTemplateData(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"keyword4\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"2501902696\"</span>);\r\n        templateDataList.add(data1);\r\n        templateDataList.add(data2);\r\n        templateDataList.add(data3);\r\n        templateDataList.add(data4);\r\n\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//3，设置推送消息</span>\r\n        WxMaTemplateMessage templateMessage = WxMaTemplateMessage.builder()\r\n                                                  .toUser(openId)\r\n                                                  .formId(formId)\r\n                                                  .templateId(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"你的消息id\"</span>) <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 在微信公众号后台可以申请消息模版</span>\r\n                                                  .data(templateDataList)\r\n                                                  .page(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pages/index/index\"</span>)\r\n                                                  .build();\r\n\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//4，发起推送</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n            wxMaService.getMsgService().sendTemplateMsg(templateMessage);\r\n        } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (WxErrorException e) {\r\n            System.out.println(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"推送失败：\"</span> + e.getMessage());\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> e.getMessage();\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"推送成功\"</span>;\r\n    }\r\n\r\n}\r\n复制代码</pre><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/27/103656fbzo4io21lo4mm01.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/27/103656fbzo4io21lo4mm01.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'> </p> </td>", "pub_time": "2019-11-27 00:45", "author": "Rolan"}
{"title": "记《高校考勤系统》小程序（1） ", "content": "<td id=\"article_content\"> \n                     \n                    <h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>引言</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这是我自学<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>并上线的第一个算是完整的项目(其实是♀朋友的毕业设计需求 )，前端萌新一枚.其中肯定会有许多不合理或需要改进的地方请大家指出，谢谢！:sunglasses::sunglasses:(前期准备工作就不介绍啦，我们直接进入正题)</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/28/110031rnkkmqkkif7qnewp.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/110031rnkkmqkkif7qnewp.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>一.功能需求整理，思路规划</h2><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">1.用户注册登录.</li><li style=\"line-height: 1.7em; list-style-type: disc;\">2.教师及学生课程表信息关联、课程表信息查看.</li><li style=\"line-height: 1.7em; list-style-type: disc;\">3.校园信息发布、签到任务发布、请假管理、用户管理.</li><li style=\"line-height: 1.7em; list-style-type: disc;\">4.自己顺手加的天气，海报生成功能.</li></ul><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>拿到需求想了想除了注册登录，主要划分两大块，一为普通学生用户功能，二为管理员教师功能.因为要在一个小程序中全部展示，所以思考在用户注册时添加‘status’字段作为后续用户权限判断依据来展示相对应的页面及功能。(也不知道这样做对不对:cry:，头大)</p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>根据理解画了流程图</h4><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/28/110031c9x6md6n4kxmsrvx.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/110031c9x6md6n4kxmsrvx.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>二.项目整体布局搭建</h2><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>小程序主要划分为四块，所以首先我们在app.json中创建对应的tabbar.</h3><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">其中素材用到了阿里巴巴图标库 <strong>( <a target=\"_blank\" href=\"https://www.iconfont.cn/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic;\">www.iconfont.cn</a> )</strong></li></ul><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/28/110032dzwl8rzebrhleye1.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/110032dzwl8rzebrhleye1.jpg\"></a></p></figure><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现效果：</h3><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/28/110032ie021mq2qqc6g6qq.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/110032ie021mq2qqc6g6qq.jpg\"></a></p></figure><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>三.用户注册登录</h2><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">在此前我们需要开通云开发并在数据库中创建存储用户信息的集合.</li><li style=\"line-height: 1.7em; list-style-type: disc;\">引入Vant Weapp 和ColorUI组件库（组件丰富，上手方便，色彩搭配beautiful:+1:） <br><strong><a target=\"_blank\" href=\"https://youzan.github.io/vant-weapp/#/intro\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic;\">youzan.github.io/vant-weapp/…</a> </strong><br><strong><a target=\"_blank\" href=\"https://www.color-ui.com/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic;\">www.color-ui.com/</a></strong></li></ul><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>这里我新建了三张页面分别为启动动画过渡页、登录页、注册页.</h3><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>启动动画过渡页:</h3><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/28/110032l4cydgjmjojpk4m0.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/110032l4cydgjmjojpk4m0.jpg\"></a></p></figure><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\">点击查看js代码</div><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>Page({\r\n    <span class=\"hljs-attr\">data</span>: {\r\n            <span class=\"hljs-attr\">openid</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取用户_openid</span>\r\n            panduan: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//判断用是否存在</span>\r\n            arr: []\r\n    },\r\n    <span class=\"hljs-attr\">onLoad</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">options</span>) </span>{\r\n            wx.cloud.callFunction({ <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取用户openid</span>\r\n            name: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'login'</span>,\r\n            <span class=\"hljs-attr\">data</span>: {},\r\n        }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.openid = res.result.openid\r\n        }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> db = wx.cloud.database({ \r\n                <span class=\"hljs-attr\">env</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'env-urae8'</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//数据库环境名</span>\r\n            })\r\n            db.collection(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'users'</span>).get().then(<span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取用户数据</span>\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.arr = res.data\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> i = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>; i &lt; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.arr.length; i++) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//循环判断用户数据中是否存在用户</span>\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.openid == <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.arr[i]._openid) {\r\n                        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.panduan = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'true'</span>\r\n                    }\r\n                }\r\n            }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.panduan == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'true'</span>) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//存在用户跳转登录页面</span>\r\n                    wx.reLaunch({\r\n                        <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/pages/index/index'</span>,\r\n                    })\r\n                } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.data.panduan == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>) {\r\n                    wx.redirectTo({\r\n                        <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/pages/login/login'</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//不存在用户跳转登录页</span>\r\n                    })\r\n                }\r\n            })\r\n            }).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> {\r\n                wx.showToast({\r\n                    <span class=\"hljs-attr\">icon</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n                    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'用户信息获取失败，请检查网络'</span>,\r\n                })\r\n            })\r\n    }\r\n})\r\n复制代码</pre></div><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>用户登录页:</h3><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/28/110032z71bf4bapd5bo5y7.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/110032z71bf4bapd5bo5y7.jpg\"></a></p></figure><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\">点击查看js代码</div><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>Page({\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n        userid:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>,\r\n        haveuserid:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'no'</span>,\r\n        openid: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>,\r\n        errMsg:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>\r\n    },\r\n    onGotUserInfo(e){\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.errMsg = e.detail.errMsg\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (e.detail.errMsg == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'getUserInfo:ok'</span>){\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n            userBtn: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n            trueBtn:<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>\r\n        })\r\n    }\r\n    },\r\n    useridInput(e){\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userid = e.detail.value\r\n    },\r\n    loginBtn(){\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.haveuserid = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'no'</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//清除判断是否存在用户名</span>\r\n        const db = wx.cloud.database({   <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//数据库新增用户注册信息</span>\r\n            env: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'env-urae8'</span>\r\n        })\r\n        db.collection(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'users'</span>).<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>().then(res =&gt; {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (let i = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>; i &lt; res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.length; i++) {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>[i].userid === <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userid &amp;&amp; res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>[i]._openid == <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.openid) {\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.haveuserid = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'yes'</span>\r\n                }\r\n            }\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> pattern = /^\\d{<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12</span>}$/\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userid == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'000001'</span>){\r\n                wx.switchTab({\r\n                    url: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/pages/index/index'</span>\r\n                })\r\n            }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (pattern.test(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userid) &amp;&amp; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.haveuserid == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'yes'</span> &amp;&amp; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.errMsg == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'getUserInfo:ok'</span>){\r\n                wx.switchTab({\r\n                    url: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/pages/index/index'</span>\r\n                })\r\n            }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.errMsg == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'getUserInfo:fail auth deny'</span> || <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.errMsg == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>) {\r\n                wx.showToast({\r\n                    title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'请授权后再登录'</span>,\r\n                    icon: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n                    duration: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2000</span>\r\n                })\r\n            }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!pattern.test(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userid)) {  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//判断是否符合用户名</span>\r\n                wx.showToast({\r\n                    title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'请输入6-12位数字'</span>,\r\n                    icon: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n                    duration: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1500</span>\r\n                })\r\n            }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.haveuserid == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'no'</span>) {\r\n                wx.showToast({\r\n                    title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'学号或工号错误或不存在,请重新输入或注册'</span>,\r\n                    icon: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n                    duration: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2000</span>\r\n                })\r\n            } \r\n        })\r\n    },\r\n    registerBtn(){\r\n        wx.redirectTo({\r\n            url: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/pages/register/register'</span>\r\n        })\r\n    },\r\n    onLoad: function (options) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n            trueBtn:<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//用户授权框样式</span>\r\n        })\r\n        wx.cloud.callFunction({ <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取用户openid</span>\r\n            name: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'login'</span>,\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {},\r\n            success: res =&gt; {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.openid = res.result.openid\r\n            },\r\n            fail: err =&gt; {\r\n                wx.showToast({\r\n                    icon: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n                    title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'用户信息获取失败，请检查网络'</span>,\r\n                })\r\n            }\r\n        })\r\n    }\r\n})\r\n复制代码</pre></div><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"title\"</span>&gt;</span>登录<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"input\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../../images/userimg.png\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"inputBtn\"</span> <span class=\"hljs-attr\">bindinput</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"useridInput\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"请输入学号或工号\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"userBtn\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ userBtn }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">open-type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getUserInfo\"</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"zh_CN\"</span> <span class=\"hljs-attr\">bindgetuserinfo</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onGotUserInfo\"</span>\r\n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onGotUserInfo\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ trueBtn }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"true\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../../images/true.png\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"userTit\"</span>&gt;</span>用户授权<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"loginBtn shadow bg-blue\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"loginBtn\"</span>&gt;</span>登 录<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"registerBtn shadow bg-blue\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"registerBtn\"</span>&gt;</span>注 册<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\">点击查看wxss代码</div><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">page</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: relative;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: white;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.title</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">200</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-align</span>: center;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">40</span>rpx;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.input</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span> auto;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">120</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">padding</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-radius</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#f6f6f6</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: start;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.input</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: block;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.inputBtn</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">40</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>rpx;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.loginBtn</span>, <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.registerBtn</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">400</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span> auto;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#07c160</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: white;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-weight</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">600</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.loginBtn</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60</span>rpx;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.userBtn</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">160</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">190</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: flex-start;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.onGotUserInfo</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">44</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">44</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-radius</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">padding</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>rpx solid <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#07c160</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.true</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">44</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">44</span>rpx;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.userTit</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12</span>rpx;\r\n}\r\n复制代码</pre></div><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>用户注册页:</h3><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/28/110031c94l730xzim4ik3o.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/110031c94l730xzim4ik3o.jpg\"></a></p></figure><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\">点击查看js代码</div><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>const app = getApp()\r\nwx.cloud.init();\r\nPage({\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n        steps: [{\r\n                text: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'第一步'</span>,\r\n                desc: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'授权登录'</span>\r\n            },\r\n            {\r\n                text: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'第二步'</span>,\r\n                desc: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'输入信息'</span>\r\n            },\r\n            {\r\n                text: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'第三步'</span>,\r\n                desc: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'完成注册'</span>\r\n            }\r\n        ],\r\n        active: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>,\r\n        nextOne: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//第一个下一步</span>\r\n        hiddenName: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//授权登录</span>\r\n        userid: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 用户学号或者工号</span>\r\n        nickName: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//用户名</span>\r\n        avatarUrl: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//用户头像</span>\r\n        userStatus: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'0'</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//用户注册状态</span>\r\n        step: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>,\r\n        openid: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>,\r\n        haveuserid:<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'no'</span><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//判断是否存在用户名</span>\r\n    },\r\n    nextOne() {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n            active: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//状态为步骤2</span>\r\n            firstBoxHide: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//隐藏步骤1框</span>\r\n            secondBoxHide: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//显示步骤2框</span>\r\n        })\r\n    },\r\n    onGotUserInfo(e) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n            nickName: e.detail.userInfo.nickName, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取用户名</span>\r\n            avatarUrl: e.detail.userInfo.avatarUrl, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取头像</span>\r\n            nextOne: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//下一步按钮显示</span>\r\n            hiddenName: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//授权按钮隐藏</span>\r\n            firstHide: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//显示用户信息</span>\r\n        })\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.nickName = e.detail.userInfo.nickName\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.avatarUrl = e.detail.userInfo.avatarUrl\r\n    },\r\n    useridInput(e) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userid = e.detail.value\r\n    },\r\n    secondBtn() {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.haveuserid = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'no'</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//清除判断是否存在用户名</span>\r\n        const db = wx.cloud.database({   <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//数据库新增用户注册信息</span>\r\n            env: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'env-urae8'</span>\r\n        })\r\n        db.collection(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'users'</span>).<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>().then(res =&gt; {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> i = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;i &lt; res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.length ; i++){\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>[i].userid === <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userid || res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>[i]._openid == <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.openid){\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.haveuserid = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'yes'</span>\r\n                }\r\n            }   \r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">var</span> pattern = /^\\d{<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>,<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12</span>}$/\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!pattern.test(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userid)) {  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//判断是否符合用户名</span>\r\n                wx.showToast({\r\n                    title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'请输入6-12位数字'</span>,\r\n                    icon: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n                    duration: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1500</span>\r\n                })\r\n            } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.haveuserid == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'yes'</span>) {  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//判断数据库是否存在用户名</span>\r\n                wx.showToast({\r\n                    title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'用户已存在,请直接登录'</span>,\r\n                    icon: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n                    duration: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1500</span>\r\n                })\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n                    backBtn: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//显示返回登录按钮</span>\r\n                })\r\n            } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n                    secondBtn: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//隐藏确定按钮</span>\r\n                    nextTwo: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//显示second框下一步按钮</span>\r\n                })\r\n            }\r\n        })\r\n    },\r\n    backBtn(){ <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//返回登录页面</span>\r\n        wx.redirectTo({\r\n            url: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/pages/login/login'</span>\r\n        })\r\n    },\r\n    nextTwo() {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n            userid: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userid,\r\n            nickName: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.nickName,\r\n            avatarUrl: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.avatarUrl,\r\n            secondBoxHide: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//隐藏second框</span>\r\n            thirdBoxHide: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//显示third框</span>\r\n            nextTwo: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//隐藏下一步2按钮</span>\r\n            active: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">3</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//初始状态为步骤3</span>\r\n        })\r\n    },\r\n    thirdBtn() { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//完成注册按钮</span>\r\n        const db = wx.cloud.database({   <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//数据库新增用户注册信息</span>\r\n            env: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'env-urae8'</span>\r\n        })\r\n        db.collection(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'users'</span>).add({\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n                userid: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.userid,\r\n                nickName: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.nickName,\r\n                userStatus: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.userStatus\r\n            },\r\n            success: res =&gt; {\r\n                wx.switchTab({\r\n                    url: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'/pages/index/index'</span>\r\n                })\r\n            }\r\n        })\r\n    },\r\n    onLoad: function(options) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n            active: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//初始状态为步骤1</span>\r\n            nextOne: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//隐藏下一步按钮</span>\r\n            firstHide: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//隐藏用户框信息</span>\r\n            firstBoxHide: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//</span>\r\n            secondBoxHide: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//隐藏步骤2框</span>\r\n            nextTwo: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//隐藏second框下一步按钮</span>\r\n            thirdBoxHide: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>, <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//显示third框</span>\r\n            backBtn:<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//隐藏返回登录按钮</span>\r\n        })\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取用户openid</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.step === <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span> &amp;&amp; !<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.openid) {\r\n            wx.cloud.callFunction({\r\n                name: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'login'</span>,\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {},\r\n                success: res =&gt; {\r\n                    app.globalData.openid = res.result.openid\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.step = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>,\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.openid = res.result.openid\r\n                },\r\n                fail: err =&gt; {\r\n                    wx.showToast({\r\n                        icon: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>,\r\n                        title: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'用户信息获取失败，请检查网络'</span>,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n复制代码</pre></div><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"cont\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"title\"</span>&gt;</span>注册<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"cont_box\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-steps</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"van-steps\"</span> <span class=\"hljs-attr\">steps</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ steps }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">active</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ active }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">active-color</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#07c160\"</span>\r\n            <span class=\"hljs-attr\">inactive-icon</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"../../images/true.png\"</span> /&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"first\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ firstBoxHide }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"user_box\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ firstHide }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"avatarUrl\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ avatarUrl }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"nickName\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ firstHide }</span><span class=\"xml\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ nickName }</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{hiddenName}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">open-type</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getUserInfo\"</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"zh_CN\"</span>\r\n            <span class=\"hljs-attr\">bindgetuserinfo</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"onGotUserInfo\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"loginBtn shadow bg-blue\"</span>&gt;</span>微信授权<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"nextOne shadow bg-blue\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"nextOne\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ nextOne }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>下一步<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"second\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ secondBoxHide }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"useridInput\"</span> <span class=\"hljs-attr\">bindinput</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"useridInput\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"请输入学号或工号\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"secondBtn shadow bg-blue\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"secondBtn\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ secondBtn }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>确定<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"nextTwo shadow bg-blue\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"nextTwo\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ nextTwo }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>下一步<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"backBtn shadow bg-blue\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"backBtn\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ backBtn }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>返回登录<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"third\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ thirdBoxHide }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"user_box\"</span> &gt;</span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"avatarUrl\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ avatarUrl }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">image</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"nickName\"</span>&gt;</span>微信名：</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ nickName }</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"userid\"</span>&gt;</span>学号：</span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ userid }</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"thirdBtn shadow bg-blue\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"thirdBtn\"</span>&gt;</span>完成注册<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><div style=\"line-height: 1.7em;\">点击查看wxss代码</div><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">page</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: relative;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: white;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.register_bg</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.cont</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">200</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: black;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">z-index</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: start;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">flex-direction</span>: column;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.cont</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.title</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">46</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-align</span>: center;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60</span>rpx;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.van-steps</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">82%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span> auto;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.first</span>, <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.second</span>, <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.third</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">500</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: relative;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-align</span>: center;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.first</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.user_box</span>, <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.third</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.user_box</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">160</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">160</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-radius</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">80</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span> auto;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: relative;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">overflow</span>: hidden;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">box-shadow</span>:<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span> <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>rpx <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">4</span>rpx <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">rgba</span>(0, 0, 0, .3);\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.nickName</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">40</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">line-height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">40</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">26</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30</span>rpx;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.first</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.avatarUrl</span>, <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.third</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.avatarUrl</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">160</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">160</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.first</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.success</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>rpx;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.loginBtn</span>, <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.nextOne</span>, <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.nextTwo</span>, <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.backBtn</span>,<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.secondBtn</span>,<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.thirdBtn</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">240</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">80</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#07c160</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: white;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">line-height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">80</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-align</span>: center;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-weight</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">600</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border</span>: none;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">left</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">calc</span>(50% - 120rpx);\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.secondBtn</span>{\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">260</span>rpx;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.backBtn</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">130</span>rpx;\r\n}\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/* 清除button样式 */</span>\r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">28</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: transparent;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border</span>: none;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">padding</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">line-height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>;\r\n}\r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">button</span><span class=\"hljs-selector-pseudo\" style=\"color: rgb(188, 96, 96);\">::after</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border</span>: none;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: transparent;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.button-hover</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">rgba</span>(0, 0, 0, 0.8);\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: transparent;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.second</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.useridInput</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">60%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">40</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">padding</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-radius</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50</span>rpx auto;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-align</span>: left;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">background-color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#f6f6f6</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.third</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.userid</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">30</span>rpx;\r\n}\r\n复制代码</pre></div><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>三.首页页面搭建</h2><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">天气数据来自阿凡达数据，也是比较了许多接口，这个相对返回数据比较可观且收费也在承受范围之内 <strong><a target=\"_blank\" href=\"https://www.avatardata.cn/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic;\">www.avatardata.cn/</a> </strong>.</li><li style=\"line-height: 1.7em; list-style-type: disc;\">UI样式参考了许多其他小程序（墨迹天气、小天气等）; <br>天气小模块参考 <strong><a target=\"_blank\" href=\"https://juejin.im/post/5d2f3f3351882556c3186f57\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic;\">juejin.im/post/5d2f3f…</a> </strong>; <br>腾讯地图api <strong><a target=\"_blank\" href=\"https://lbs.qq.com/qqmap_wx_jssdk/index.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic;\">lbs.qq.com/qqmap_wx_js…</a> </strong>; <br>感谢他们给予的帮助及参考:+1::+1::+1:</li></ul><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>先来看看完成后的效果图</h4><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/28/110033wl55131vhdb7zccc.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/110033wl55131vhdb7zccc.jpg\"></a></p></figure><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.5em;\">1.获取当前定位城市信息.</li><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">前期需要注册腾讯地图并认证，获取key，在项目中引入微信小程序JavaScript SDK，具体步骤可以参考腾讯地图api:point_up_2:（链接见上）</li></ul><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>getUserLocation() {\r\n    var qqmapsdk;\r\n    var _this = this;\r\n    wx.getSetting({ //判断是否授权\r\n    success(res) {\r\n    wx.getLocation({\r\n      type: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'gcj02'</span>, //返回可以用于wx.openLocation的经纬度\r\n      success(res) {\r\n        // console.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'已授权'</span>)\r\n        qqmapsdk = new QQMapWX({\r\n          key: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"****\"</span>, //自己申请的key\r\n        })\r\n        qqmapsdk.reverseGeocoder({\r\n          location: {\r\n            latitude: res.latitude,\r\n            longitude: res.longitude\r\n          },\r\n          success(addressRes) {\r\n            // console.log(addressRes) //这里就可以获取到当前经纬度所在城市的详细信息\r\n            _this.city = addressRes.result.ad_info.city; //获取当前所在城市\r\n            })\r\n          },\r\n          fail(res) {\r\n            console.log(res)\r\n          }\r\n        })\r\n      },\r\n      fail(res) {\r\n        // console.log(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'未授权'</span>)\r\n      }\r\n    })\r\n  }\r\n})\r\n},\r\n复制代码</pre><li style=\"line-height: 1.5em;\">2.根据定位获取到的城市信息，调用天气接口获取当前城市天气数据.</li><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">wx</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.request</span>({\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">url</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'https://api.avatardata.cn/Weather/Query?key=你注册后的key值&amp;cityname='</span> + 定位获取到的城市名,\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">header</span>: {\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'content-type'</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'application/json'</span> <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 默认值</span>\r\n    },\r\n    <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">success</span>(res) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//返回城市天气数据</span>\r\n    }\r\n})\r\n复制代码</pre><li style=\"line-height: 1.5em;\">3.根据当前天气状况判断天气模块的显示隐藏. 例如：</li><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.result.weather[i].info.day[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>].indexOf(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'晴'</span>) &gt;= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//判断条件为接口返回数据</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//晴天天气模块显示其他隐藏</span>\r\n    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.result.weather[i].info.day[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>].indexOf(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'阴'</span>) &gt;= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span> || \r\n    res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.result.weather[i].info.day[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>].indexOf(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'云'</span>) &gt;= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//多云或阴天天气模块显示其他隐藏</span>\r\n    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.result.weather[i].info.day[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>].indexOf(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'小雨'</span>) &gt;= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//小雨气模块显示其他隐藏 </span>\r\n    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.result.weather[i].info.day[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>].indexOf(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'大雨'</span>) &gt;= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//大雨气模块显示其他隐藏           </span>\r\n    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.result.weather[i].info.day[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>].indexOf(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'雪'</span>) &gt;= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//下雪天气模块显示其他隐藏            </span>\r\n    }\r\n复制代码</pre><li style=\"line-height: 1.5em;\">4.因为返回的接口数据有些是自己不想要的，或者想自己添加一些新的图片文字，所以将数据重新编写成对象数组的形式，最后渲染出来就可以了.例如下面这个模块</li><figure style=\"margin: 0px 0px 1em;\"><p><a href=\"data/attachment/portal/201911/28/110033qwmuvu0zcuzmlz0c.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/110033qwmuvu0zcuzmlz0c.jpg\"></a></p></figure><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> weather = []\r\nweather.push({\r\n    date: date,\r\n    week: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data.result.weather[i].week, //星期\r\n    daywe<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">a:</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data.result.weather[i].info.day[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>], //白天天气\r\n    daytemp: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data.result.weather[i].info.day[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>], //白天温度\r\n    daywind: daywind, //风向\r\n    daywindli: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data.result.weather[i].info.day[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">4</span>], //风力\r\n    nightwe<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">a:</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data.result.weather[i].info.night[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>], //晚上天气\r\n    nighttemp: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.data.result.weather[i].info.night[<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>], //晚上温度\r\n})\r\nconsloe.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(weather)//打印结果\r\n//(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">5</span>) [{…}, {…}, {…}, {…}, {…}]\r\n//<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>: {date: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"11-27\"</span>, week: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"三\"</span>, daywe<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">a:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"小雨\"</span>, daytemp: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"10\"</span>, daywind: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"西风\"</span>,\r\n        daywindli: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"4-5级\"</span>，nighttemp: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"8\"</span>，nightwe<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">a:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"小雨\"</span>，week: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"三\"</span>}\r\n//<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>: {date: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"11-28\"</span>, week: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"四\"</span>, daywe<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">a:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"多云\"</span>, daytemp: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"10\"</span>, daywind: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"西风\"</span>, …}\r\n//<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>: {date: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"11-29\"</span>, week: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"五\"</span>, daywe<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">a:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"阴\"</span>, daytemp: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"11\"</span>, daywind: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"东北风\"</span>, …}\r\n//<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">3</span>: {date: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"11-30\"</span>, week: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"六\"</span>, daywe<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">a:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"小雨\"</span>, daytemp: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"13\"</span>, daywind: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"无风\"</span>, …}\r\n//<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">4</span>: {date: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"12-01\"</span>, week: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"日\"</span>, daywe<span class=\"hljs-variable\" style=\"color: rgb(188, 96, 96);\">a:</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"阴\"</span>, daytemp: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"11\"</span>, daywind: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"西风\"</span>, …}\r\n复制代码</pre></div><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/28/110033uq0t0kymu360zm52.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/110033uq0t0kymu360zm52.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>先写到这里，如果有什么写的不好的地方，请大家多多包涵，之后会继续分享后面的内容。大家也可以提前扫码查看小程序，欢迎指出不足，谢谢 </p> </td>", "pub_time": "2019-11-28 00:03", "author": "Rolan"}
{"title": "小程序包大小优化(uni-app) ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在开发微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>的过程中，随着业务逻辑日渐庞大之后，突显了一些问题。</p><p><a href=\"data/attachment/portal/201911/28/112638qe6tzc8emnt1nttp.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/28/112638qe6tzc8emnt1nttp.jpg\"></a></p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先我们发现在 dev mode 时，本地包大小已经达到了 4m+，这种情况下，已经无法在 dev mode 使用真机调试了。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其次此时，小程序 build 后也有 1.8M 左右。而且后续还有相当多的业务需求需要开发，包大小肯定会更大。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这时候就想要优化小程序包大小。下面分享一下我的定位过程和解决思路。尽管我们使用 uni-app 开发，但思路是通用的，希望能给大家一些帮助吧。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>如何减小包大小</h2><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>代码分析</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先分析包大在哪儿了。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>打开本地代码目录查看文件大小。可以发现 common/vendor.js 和 page,components 中 js 占了大部分。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在 build 编译模式下，代码压缩已经启用了，需要思考别的优化方式。这时候可以使用\t<a target=\"_blank\" href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-size: 14px; color: rgb(51, 51, 51) !important;'>webpack-bundle-analyzer</code> 插件\t</a>。它可以帮助分析 vendor.js 中都有哪些 js 模块，哪些模块比较大，以便我们进一步优化代码</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过这个插件，发现了下面两个问题。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>问题一: uni-app 自定义组件模式编译 tree shaking 无效</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果不是使用 uni-app 开发可以跳过这一段</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过代码分析发现有些模块应该被 tree shaking 但却被打包进来了。基本确定是 tree shaking 没有生效。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>同样是 webpack4 + babel7。在不使用 uni-app，直接使用 vue-cli create 项目的前提下，tree shaking 是没有问题的。而使用 uni-app 去新建项目，tree shaking 却无效。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>排查 babel 配置时发现是由于 uni-app 在创建项目的时候，设置了 modules: 'commonjs'导致。修改后，demo 的 tree shaking ok。但是回到项目里一编译，又出错了。继续定位发现是\t<strong style=\"text-indent: 0px;\">uni-app 自定义组件模式编译问题</strong> 。目前uni-app\t<a target=\"_blank\" href=\"https://github.com/dcloudio/uni-app/commit/08fabd9e310f1a2689eee20384482c72fec9c422#diff-ce9dfc9a8e9bc08c00f103033de3dba3\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">已经修复</a> 了我提的bug，虽然还未正式发布。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>当然你不使用 uni-app 自定义组件模式编译也可以解决，uni-app 还支持\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>template模板模式</code> ，但是会有一些开发差异和性能差距，有兴趣可以看下\t<a target=\"_blank\" href=\"https://ask.dcloud.net.cn/article/35843\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">这篇文章</a></p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>问题二：部分库不支持 tree shaking</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>有些库(比如 lodash)本身并没有使用 import/export，所以 webpack 并不能对它们 tree shaking。这些库我们可以分情况优化。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先可以找下网上是否有库对应的 esm 版本可以替代，如 lodash-es。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>其次可以从代码分析中看出，如果库的每个模块都在不同文件中，入口文件只是一个统一入口，那么我们就可以通过修改写法按需加载，如</p><pre class=\"prettyprint hljs python\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> add <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"lodash/add\"</span>;\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">import</span> Button <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'ant-design-vue/lib/button'</span>;\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们也可以使用\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>babel-plugin-import</code> 插件针对那些库统一实现按需加载，它的本质是在编译时统一按配置修改加载路径，不需要自己手动去修改代码。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最后如果都不行，那要么接受，要么自己重写为社区做贡献~</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>规范模块开发</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为了免除无法 tree shaking 的烦恼，我们在开发 npm 模块的时候也需要遵循一定的规范，从而减少模块打包后的大小。</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>同时支持 commonjs 和 es module</h3><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我们的模块需要同时支持 commonjs 和 es module。这样才能既满足 commonjs 开发的用户，又支持 tree shaking。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如何实现呢？如果你的代码是 typescript,以@sentry/browser 为例，可以在编译时编译 cjs 和 esm 两种规范代码，如下</p><pre class=\"prettyprint hljs lua\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>// <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">package</span>.json\r\n<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"build\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"run-s build:dist build:esm build:bundle\"</span>,\r\n<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"build:bundle\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"rollup --config\"</span>,\r\n<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"build:dist\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"tsc -p tsconfig.build.json\"</span>,\r\n<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"build:esm\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"tsc -p tsconfig.esm.json\"</span>,\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>然后在 package.json 中指定两个入口以及无副作用标识</p><pre class=\"prettyprint hljs lua\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"main\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"dist/index.js\"</span>,\r\n  <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"module\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"esm/index.js\"</span>,\r\n  <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"sideEffects\"</span>: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">false</span>,\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这样当 webpack 解析模块(\t<a target=\"_blank\" href=\"https://www.webpackjs.com/configuration/resolve/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">解析规则</a> )，就会按需优先解析 esm 目录。并且当识别到无副作用时进行 tree shaking。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果你的代码本身就是 es6，你也可以这样</p><pre class=\"prettyprint hljs lua\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"module\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"src/index.js\"</span>,\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>第三方自定义组件</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>如果使用了第三方\t<a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">微信自定义组件</a> ，由于引用是在 json 文件，所以 webpack 在编译时并不能通过 entry 分析到相关文件，因此不会对其进行编译、压缩等。这时候就需要我们自己处理。而且由于 webpack 不处理，tree shaking 自然也无法支持，因此建议\t<strong style=\"text-indent: 0px;\">尽量避免</strong> 这种方式引用组件。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>分包</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/subpackages.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">小程序分包</a> 也是一种常规的优化方案。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过分析后，可以将一些较大的页面划分为子包。如果有单页依赖第三方自定义组件，而且第三方组件还挺大，也可以考虑将该页面划分为子包。也因此\t<strong style=\"text-indent: 0px;\">尽量避免将第三方自定义组件放在 globalStyle</strong> ，不然没法将它放到子包去。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>大图不要打包</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序中的大图，尽量避免打包进来，应该放到 CDN 通过 url 加载。我们的做法是在开发时加载本地图片，在 CI/CD 环节自动化发布图片，并改写地址。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>如何解决真机调试问题</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>首先还是查看编译后的文件，发现\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>common/vendor.js</code> 巨大，足有 1.5M。其次\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>pages</code> 和\t<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>components</code> 也有 1.4M，而这其中占了 js 的大小又占了绝大部分。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>为什么 js 文件这么大呢？主要是因为在 dev mode 默认并没有压缩，当然也没有 tree shaking。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>我的选择是\t<strong style=\"text-indent: 0px;\">修改编译配置，在 dev mode 压缩 js 代码</strong> 。本地代码减少到了 2M。预览大小则是减少到了 1.4M。参考配置如下：</p><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// vue.config.js</span>\r\n    configureWebpack: <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (isDev &amp;&amp; isMp) {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n                <span class=\"hljs-attr\">optimization</span>: {\r\n                    <span class=\"hljs-attr\">minimize</span>: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n                },\r\n            }\r\n        }\r\n    }\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这看上去并不是个好方案，但确实简单有效。也考虑过分包，但分包并不能解决 common/vendor.js 巨大的问题，预览时包还是很大。如果有其它好的办法也欢迎留言~</p> </td>", "pub_time": "2019-11-28 00:24", "author": "Rolan"}
{"title": "记《高校考勤系统》小程序（2） ", "content": "<td id=\"article_content\"> \n                     \n                    <div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">这是其他几篇的地址：</p><a target=\"_blank\" href=\"https://juejin.im/post/5dddd7bbe51d4532c21fac19\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">记《高校考勤系统》小程序（1）</a></div><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>前面讲了用户注册和首页天气功能，下面讲讲课程表页的实现.</h4><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>五.课程表页</h2><ul style='padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em; list-style-type: disc;\">这里参考了简书上面 <a target=\"_blank\" href=\"https://www.jianshu.com/p/b21febd722c6\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">轩辕夜空</a> 位作者的案例,以及其参考 <a target=\"_blank\" href=\"https://blog.csdn.net/rolan1993/article/details/78709602\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">极乐叔</a> 的课程表的思路.</li><li style=\"line-height: 1.7em; list-style-type: disc;\">同样制作课程表需要用到云开发来存储数据，以及结合云函数对数据的修改，后面会讲到为什么要用到云函数.</li></ul><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>先来看看完成后的效果图</h4><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/29/095025hsb52gf52ta9g4ws.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/095025hsb52gf52ta9g4ws.jpg\"></a></p></figure><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.5em;\">1.先搭建整体结构</li><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">头部和左侧因为样式是一样的，可以将数据写入data中，再通过for循环渲染出来，这里就直接展示了.（偷个懒:blush::blush:）</li></ul><pre class=\"prettyprint hljs xml\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 星期 --&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"top\"</span>&gt;</span>  \r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"top-text\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>节\\日<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"top-text\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"top-text\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"top-text\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"top-text\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"top-text\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"top-text\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"top-text\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>日<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 课程 --&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"cont\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"cont-left\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"left\"</span>&gt;</span> 1 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"left\"</span>&gt;</span> 2 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"left\"</span>&gt;</span> 3 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"left\"</span>&gt;</span> 4 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"left\"</span>&gt;</span> 5 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"left\"</span>&gt;</span> 6 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"left\"</span>&gt;</span> 7 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"left\"</span>&gt;</span> 8 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"cont-right\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"bottom\"</span>&gt;</span>\r\n    ————<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>读万卷书 行万里路<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>————\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</pre><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\">点击查看wxss代码</div><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">page</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: relative;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.top</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">padding</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">16</span>rpx <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-top</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1px</span> solid <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#e9e9e9</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1px</span> dashed <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#d3d3d3</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: flex-start;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.top-text</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">12.5%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-align</span>: center;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">32</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-weight</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">600</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">align-items</span>: center;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.top</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.top-text</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1px</span> dashed <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#d3d3d3</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.top</span> <span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.top-text</span><span class=\"hljs-selector-pseudo\" style=\"color: rgb(188, 96, 96);\">:nth-child(1)</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">24</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-left</span>: none;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">line-height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">46</span>rpx;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.cont</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: start;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.cont-left</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: inline-block;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.left</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">90</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">120</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: center;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">align-items</span>: center;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1px</span> dashed <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#d3d3d3</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">box-sizing</span>: border-box;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#666</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">28</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-weight</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">600</span>;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.cont-right</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">calc</span>(100% - 90rpx);\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.bottom</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">100%</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-align</span>: center;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">position</span>: absolute;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">24</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#ddd</span>;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: inline-block;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.bottom</span> <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-left</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-right</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">20</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">#9b9b9b</span>;\r\n}\r\n复制代码</pre></div><figure style=\"margin: 0px 0px 1em;\"><p><a href=\"data/attachment/portal/201911/29/095025lbxjtgneu0tjkqiz.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/095025lbxjtgneu0tjkqiz.jpg\"></a></p></figure><li style=\"line-height: 1.5em;\">2.结合云开发编写课程表.</li><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">这里需要考虑到云开发中单次获取数据上限是20条，所以我将课程表数据分为两部分（上午和下午），当然你可以直接使用云函数来提高获取数据的上限，在后面会有介绍，这里就先不做过多的解释了，上代码.</li></ul><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">单个数据结构</p><pre class=\"prettyprint hljs awk\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n    <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"_id\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"296065c95da529b2055b57301b5afa75\"</span>,  云开发导入数据会直接生成_id,这里不用自己编写\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"data_name\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"Java高级开发技术(JavaEE)\"</span>,  <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span>课程名\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"address\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"@康庄行知楼301\"</span>,              <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span>地点\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"weekNum\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"10-15周\"</span>,                     <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span>周数\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"pitchNum\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"3-4\"</span>,                        <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span>节数\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"teacher\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"赵老师\"</span>,                      <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span>任课老师\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"_openid\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"oQnNa5NJfKqSZntKFLGZWnZuXNbo\"</span>  <span class=\"hljs-regexp\" style=\"color: rgb(188, 96, 96);\">//</span>修改者的openid,本来是想做判断，后面使用了云函数，发现可有可无\r\n}\r\n复制代码</pre><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">下面是从云开发数据库中获取我们编写好的课程表数据,如果对操作不熟悉可以查看 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/getting-started.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">官方文档</a>. <br>1.打开云开发控制台. <br>2.创建两个集合对应上午下午课程表. <br>3.导入我们已经编写好的数据 (一个星期早上和下午的课程分别为14节，所以导入数据时需要注意，如果想要当前课程没有信息，也是需要导入空的字段数据来占一格) . <br>4.打开权限管理. <br>5.选中第一个.</li><li style=\"line-height: 1.7em; list-style-type: disc;\"><strong>其中最后两个步骤一定不能忘记！</strong></li></ul><figure style=\"margin: 0px 0px 1em;\"><p><a href=\"data/attachment/portal/201911/29/095025pfjj6dwde556jjud.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/095025pfjj6dwde556jjud.jpg\"></a></p></figure><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\">点击查看js代码</div><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n    colorArr: [<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"rgb(229,188,76, 0.8)\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"rgb(104,172,246, 0.8)\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"rgb(183,135,242, 0.8)\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"rgb(149,226,48, 0.8)\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#ff7070\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#e54d42\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#0081ff\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#7DC67D\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#E17572\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#C35CFF\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#33BCBA\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#FF8533\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#6E6E6E\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#ebd4ef\"</span>,\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#428BCA\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#39b54a\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#FF674F\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#e03997\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#00CED1\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#9F79EE\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#FFC125\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#32CD32\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#00BFFF\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#8799a3\"</span>,<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"#FF69B4\"</span>\r\n    ],\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 存储随机颜色</span>\r\n    randomColorArr: [],\r\n    randomColorArr2: [],\r\n    i: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">25</span>,\r\n    random: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>,\r\n    random2: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>,\r\n},\r\nonLoad: function(options) {\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.randomColorArr = [] <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 重置颜色数组1为空</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.randomColorArr2 = [] <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 重置颜色数组2为空</span>\r\n    const db = wx.cloud.database({\r\n        env: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'*****'</span>  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//你的云开发环境名</span>\r\n    })\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取课程表上午数据</span>\r\n    db.collection(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'数据集合中你的表名'</span>).<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>().then((res) =&gt; {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.kechengbiao = res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (let j = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>; j &lt;= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">13</span>; j++) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//for循环判断课名和地名为空则不加颜色</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.kechengbiao[j].data_name == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span> &amp;&amp; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.kechengbiao[j].address == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>) {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.random = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.randomColorArr.push(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.random)\r\n            } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.random = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.colorArr[Math.floor(Math.random() * <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.i)] <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//随机颜色</span>\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.randomColorArr.push(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.random)\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n            loding: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>,\r\n            kechengbiao: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.kechengbiao,\r\n            randomColorArr: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.randomColorArr\r\n        })\r\n    })\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取课程表下午</span>\r\n    db.collection(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'数据集合中你的表名'</span>).<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>().then((res) =&gt; {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.kechengbiao2 = res.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (let j = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>; j &lt;= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">13</span>; j++) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//for循环判断课名和地名为空则不加颜色</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.kechengbiao2[j].data_name == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span> &amp;&amp; <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.kechengbiao2[j].address == <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">''</span>) {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.random2 = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'none'</span>\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.randomColorArr2.push(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.random2)\r\n            } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.random2 = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.colorArr[Math.floor(Math.random() * <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.i)] <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//随机颜色</span>\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.randomColorArr2.push(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.random2)\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.setData({\r\n            kechengbiao2: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.kechengbiao2,\r\n            randomColorArr2: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>.randomColorArr2\r\n        })\r\n    })\r\n},\r\n复制代码</pre></div><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"cont-right\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'appointent-date'</span>&gt;</span>  //上午\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"appointent-date-div\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"select_date\"</span> <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{kechengbiao}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">wx:key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">data-key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}'</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"background-color:</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{randomColorArr[index]}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"flex-item\"</span> &gt;</span>\r\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'data_name'</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.data_name}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'address'</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.address}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'appointent-date'</span>&gt;</span>  //下午\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"appointent-date-div\"</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"select_date2\"</span> <span class=\"hljs-attr\">wx:for</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{kechengbiao2}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">wx:key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">data-key</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{index}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}'</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"background-color:</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{randomColorArr2[index]}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"flex-item\"</span>&gt;</span>\r\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'data_name'</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.data_name}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'address'</span>&gt;</span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{item.address}</span><span class=\"xml\">}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><div style=\"line-height: 1.7em;\"><div style=\"line-height: 1.7em;\">点击查看wxss代码</div><pre class=\"prettyprint hljs css\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.appointent-date</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: space-around;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">flex-wrap</span>: wrap;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.appointent-date-div</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">236</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-radius</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">margin-bottom</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">color</span>: white;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.flex-item</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: flex;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">justify-content</span>: flex-start;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">flex-direction</span>: column;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">width</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">76</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">height</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">212</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">font-size</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">24</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">padding</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">6</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>rpx solid transparent;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text-align</span>: left;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">border-radius</span>: <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10</span>rpx;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">cursor</span>: pointer;\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">overflow</span>: hidden;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.data_name</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: inline-block;\r\n}\r\n<span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.address</span> {\r\n    <span class=\"hljs-attribute\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">display</span>: inline-block;\r\n}\r\n复制代码</pre></div><figure style=\"margin: 0px 0px 1em;\"><p><a href=\"data/attachment/portal/201911/29/095149ha4yl0y7p49kq4qz.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/095149ha4yl0y7p49kq4qz.jpg\"></a></p></figure><li style=\"line-height: 1.5em;\">3.对课程实现增删改查</li><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">首先来做最简单的 <strong>查</strong> 吧，我们需要在for循环中加入 data-='{{index}}' ，如上代码所示:point_up_2:我加了data-key='{{index}}'，其中key可以自定义，目的是为了在点击课程时，可以获取相循环中对应的下标，这样我就可以在数据库中搜索到当前点击的数据并渲染出来.</li></ul><h3 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.6em; color: inherit; text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em;\">查</h3><pre class=\"prettyprint hljs javascript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//点击课程内容弹出详细框</span>\r\nselect_date: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span>(<span class=\"hljs-params\">e</span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.id = e.currentTarget.dataset.key <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取当前点击课程的下标</span>\r\n  <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> db = wx.cloud.database({\r\n    <span class=\"hljs-attr\">env</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'****'</span>\r\n  })\r\n  db.collection(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'***'</span>).get().then(<span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">console</span>.log(res.data[<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.id])   <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取点击时课程表数据</span>\r\n  })\r\n},\r\n复制代码</pre><figure style=\"margin: 0px 0px 1em;\"><p><a href=\"data/attachment/portal/201911/29/095026nzuizjpp6wjzfyzw.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/095026nzuizjpp6wjzfyzw.jpg\"></a></p></figure><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">获取到数据后我们可以根据自己的需求渲染在页面上，这里我结合了vant的tab组件，左上角为返回，右上角为删除课程表信息，下面就讲 <strong>删</strong> 除课程信息.</li><li style=\"line-height: 1.7em; list-style-type: disc;\">这里的删除不是说真的将数据从我们的数据库中删除，而是将数据赋值为“”也就是空值，这样就做到了删除的功能，在此结合 <strong>云函数</strong> 来实现，因为云开发中的操作权限无法满足我们对数据操作的要求.</li></ul><h3 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.6em; color: inherit; text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em;\">删</h3><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">首先我们在云函数中创建一个新的 <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/functions/getting-started.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">云函数</a> ，修改index.js文件</p><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">这里会有一个问题也就是为什么我们要使用云函数，而不直接用云开发对数据进行处理，是因为云开发中的操作权限只能对自己提交到数据库中的数据进行修改，如果是别人那么就无法修改.正常情况下，管理员肯定不止一位，所以对数据操作不能只限定一个人.</li></ul><pre class=\"prettyprint hljs cs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//修改课程表</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> cloud = require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx-server-sdk'</span>)\r\ncloud.init({\r\n    env: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'***'</span>,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//你的开发环境</span>\r\n    traceUser: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n})\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> db = cloud.database();\r\nexports.main = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>, context) =&gt; { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 云函数入口函数</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> db.collection(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'***'</span>).doc(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.id).update({  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//需要修改的数据库</span>\r\n            data: {\r\n                data_name: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.data_name,\r\n                address: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.address,\r\n                weekNum: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.weekNum,\r\n                pitchNum: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.pitchNum,\r\n                teacher: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.teacher\r\n          },\r\n        })\r\n    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (e) {\r\n        console.error(e)\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>,\r\n        openid: wxContext.OPENID,\r\n        appid: wxContext.APPID,\r\n        unionid: wxContext.UNIONID,\r\n    }\r\n}\r\n复制代码</pre><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">然后在js文件中编写对应的代码</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>tapDialogButton(e) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//从课表删除课程</span>\r\n    wx.cloud.callFunction({\r\n        name: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'***'</span>,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 你的云函数名称</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n          id: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._id,  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//将数据进行空值赋值</span>\r\n          data_name: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>,\r\n          address: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>,\r\n          weekNum: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>,\r\n          pitchNum: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>,\r\n          teacher: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>\r\n        },\r\n        success: res =&gt; {\r\n          <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 关闭当前点击课程详情</span>\r\n        }\r\n    })\r\n},\r\n复制代码</pre><h3 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.6em; color: inherit; text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em;\">改，增</h3><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; line-height: 1.7em;\"><li style=\"line-height: 1.7em; list-style-type: disc;\">做完了删其实对改和增的实现应该也变得相对简单，这里也是需要用到云函数，道理和上面讲的一致.</li><li style=\"line-height: 1.7em; list-style-type: disc;\">在获取当前点击的数据时先将此条数据存储在data中，需要修改时，可以将数据赋值给input的value,在通过云函数来修改数据库中对应的数据.增也是同样的道理.这里就拿改为例.</li></ul><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">wxml</p><pre class=\"prettyprint hljs dust\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"xml\"><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">&lt;!-- 编辑页 --&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"edit\"</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ editShow }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">van-nav-bar</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"编辑课程\"</span> <span class=\"hljs-attr\">right-text</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"完成\"</span> <span class=\"hljs-attr\">left-arrow</span> <span class=\"hljs-attr\">bind:click-left</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"editLeft\"</span> <span class=\"hljs-attr\">bind:click-right</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"editRight\"</span> /&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"label className\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>课名<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ nowClass.data_name }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">bindinput</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"bindKeyInput1\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"label\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>教室<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ nowClass.address }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">bindinput</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"bindKeyInput2\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"label\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>周数<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ nowClass.weekNum }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">bindinput</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"bindKeyInput3\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"label\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>节数<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ nowClass.pitchNum }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">bindinput</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"bindKeyInput4\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"label\"</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>老师<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">text</span>&gt;</span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>  <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"</span></span></span><span class=\"hljs-template-variable\" style=\"color: rgb(188, 96, 96);\">{{ nowClass.teacher }</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">}\"</span> <span class=\"hljs-attr\">bindinput</span>=<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"bindKeyInput5\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">input</span>&gt;</span>\r\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">view</span>&gt;</span>\r\n复制代码</span></pre><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">新建修改课程表数据的云函数</p><pre class=\"prettyprint hljs cs\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//修改课程表</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> cloud = require(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'wx-server-sdk'</span>)\r\ncloud.init({\r\n    env: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'***'</span>,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//你的开发环境</span>\r\n    traceUser: <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">true</span>\r\n})\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> db = cloud.database();\r\nexports.main = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">async</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>, context) =&gt; { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 云函数入口函数</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">await</span> db.collection(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'***'</span>).doc(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.id).update({  <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//你要操作的数据库</span>\r\n            data: {\r\n                data_name: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.data_name,\r\n                address: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.address,\r\n                weekNum: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.weekNum,\r\n                pitchNum: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.pitchNum,\r\n                teacher: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>.teacher\r\n            },\r\n        })\r\n    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (e) {\r\n        console.error(e)\r\n    }\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">event</span>,\r\n        openid: wxContext.OPENID,\r\n        appid: wxContext.APPID,\r\n        unionid: wxContext.UNIONID,\r\n    }\r\n}\r\n复制代码</pre><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">js</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//  1.首先获取输入框的值，存在data中</span>\r\nbindKeyInput1(e) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//课名</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.editClassName = e.detail.value\r\n},\r\nbindKeyInput2(e) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//教室</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.editAddress = e.detail.value\r\n},\r\nbindKeyInput3(e) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//周数</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.editWeekNum = e.detail.value\r\n},\r\nbindKeyInput4(e) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//节数</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.editPitchNum = e.detail.value\r\n},\r\nbindKeyInput5(e) { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//老师</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.editTeacher = e.detail.value\r\n},\r\neditRight() { <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//  2.编辑完成，点击提交按钮时将输入框的值赋值给对应的字段名</span>\r\n  wx.cloud.callFunction({\r\n    name: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'***'</span>,<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 修改课程表数据的云函数名称</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">data</span>: {\r\n      id: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>._id,\r\n      data_name: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.editClassName,\r\n      address: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.editAddress,\r\n      weekNum: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.editWeekNum,\r\n      pitchNum: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.editPitchNum,\r\n      teacher: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.editTeacher\r\n    },\r\n    success: res =&gt; {\r\n    },\r\n    fail: console.error\r\n  })\r\n\r\n},\r\n复制代码</pre></div><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/29/095025t78epyeerdm8cepp.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/095025t78epyeerdm8cepp.jpg\"></a></p></figure><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>到这里课程表功能就做完了，如果有什么不懂得地方欢迎留言，或者写的不好的地方，请大家指出一起探讨，之后会继续分享后面的内容。大家也可以提前扫码查看<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>，欢迎指出不足，谢谢</p> </td>", "pub_time": "2019-11-29 00:12", "author": "Rolan"}
{"title": "最近很火的 倒放挑战 - ReverseVoice (微信小程序版 前后端源码) Ts Node Taro ... ... ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>项目地址: <a href=\"https://github.com/smackgg/reversevoice\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">https://github.com/smackgg/reversevoice</a></p><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>整个项目其实很简单，从本人在抖音和 B 站看到火起来到最终<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>上线也就几天的下班时间就搞定了，11月16日上线至今用户量还是蛮多的(主要当时做的快此类 app 比较少)，现在已经出现了大量的更简约更好的倒放挑战 app，本项目开源仅供大家学习~</p><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>拥抱 TypeScript ~</p><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>顺便小声吐槽一下 Taro 对 Ts 的支持还是不够啊，希望大家多去给 Taro 提 dts 的 PR ~</p><h1 id=\"item-1\" style='box-sizing: border-box; margin: 2.75rem 0px 1rem; line-height: 1.2; font-size: 2rem; padding-bottom: 0.5rem; border-bottom: 3px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>体验</h1><h2 id=\"item-1-1\" style='box-sizing: border-box; margin: 2.5rem 0px 1rem; line-height: 1.2; font-size: 1.75rem; padding-bottom: 0.5rem; border-bottom: 1px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>小程序二维码</h2><h2 id=\"item-1-2\" style='box-sizing: border-box; margin: 2.5rem 0px 1rem; line-height: 1.2; font-size: 1.75rem; padding-bottom: 0.5rem; border-bottom: 1px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>挑战分享海报 (这个海报暂时有问题，修复代码因为资质问题还没有提交审核)</h2><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><span class=\"img-wrap\" style=\"box-sizing: border-box; display: block; text-align: center;\"></span></p><p><a href=\"data/attachment/portal/201911/29/095539auyb9vifi7wq7gpd.png\" target=\"_blank\"><img src=\"data/attachment/portal/201911/29/095539auyb9vifi7wq7gpd.png\"></a></p><h1 id=\"item-2\" style='box-sizing: border-box; margin: 2.75rem 0px 1rem; line-height: 1.2; font-size: 2rem; padding-bottom: 0.5rem; border-bottom: 3px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>功能介绍/实现原理</h1><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">功能及实现原理简述</li></ul><ol style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">小程序端用户录音并保存本地</li><li style=\"box-sizing: border-box;\">录音后将录音文件上传至后端进行倒放处理，并返回处理后的音频 url</li><li style=\"box-sizing: border-box;\">小程序端下载 url 文件，提示用户反转成功，将数据做本地 map</li><li style=\"box-sizing: border-box;\">用户点击分享，生成分享链接，并将该分享正放、倒放视频均传至后端保存至七牛云</li><li style=\"box-sizing: border-box;\">同时新建分享 room 保存用户信息，返回 roomId</li><li style=\"box-sizing: border-box;\">用户分享（海报分享 canvas 动态生成分享码海报）</li><li style=\"box-sizing: border-box;\">其它用户参加挑战，存储原理同 4，只是增加将挑战者信息了存入 room 的逻辑</li></ol><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">音频倒放</li></ul><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>使用 ffmpeg 进行音频倒放，核心代码：</p><pre class=\"javascript hljs\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code class=\"js\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: normal; overflow-wrap: normal; white-space: inherit;'><span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 详见 ./server/src/controllers/file.ts =&gt; function reverseVoice</span>\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">import</span> ffmpegPath <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'@ffmpeg-installer/ffmpeg'</span>\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">import</span> ffprobePath <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'@ffprobe-installer/ffprobe'</span>\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">import</span> ffmpeg <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'fluent-ffmpeg'</span>\r\nffmpeg.setFfprobePath(ffprobePath.path)\r\nffmpeg.setFfmpegPath(ffmpegPath.path)\r\n\r\nffmpeg(filepath)\r\n    .format(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'mp4'</span>)\r\n    <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 反转</span>\r\n    .outputOptions([\r\n      <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'-vf reverse'</span>,\r\n      <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'-af areverse'</span>,\r\n      <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'-preset'</span>,\r\n      <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'superfast'</span>,\r\n      <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'-y'</span>,\r\n    ])\r\n    .on(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'progress'</span>, (progress) =&gt; {\r\n      <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// send upload progress</span>\r\n      <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'upload-file-progress'</span>, progress.percent)\r\n    })\r\n    .on(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'error'</span>, (err) =&gt; {\r\n      <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">`Ffmpeg has been killed<span class=\"hljs-subst\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">${err.message}</span>`</span>)\r\n    })\r\n    .toFormat(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'mp3'</span>)\r\n    <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 保存</span>\r\n    .save(publicPath + saveFilePath)\r\n    .on(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'end'</span>, () =&gt; {\r\n      <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 获取音频信息（时长等）</span>\r\n      ffmpeg.ffprobe(publicPath + saveFilePath, (err, metadata) =&gt; {\r\n        <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">console</span>.log(metadata.format.duration)\r\n      })\r\n    })</code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">小程序录音</li></ul><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>小程序录音使用官方 api，详细逻辑见 <a href=\"https://github.com/smackgg/reversevoice/blob/master/wechatapp/src/pages/index/index.tsx#L136\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">./wechatapp/pages/index/index.tsx</a></p><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/InnerAudioContext.html\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">录音</a></p><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">海报生成</li></ul><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>利用 canvas 动态合成分享海报 <a href=\"https://github.com/smackgg/reversevoice/blob/master/wechatapp/pages/sharePoster\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">/wechatapp/pages/sharePoster</a><br style=\"box-sizing: border-box;\">需要动态请求页面小程序码，涉及微信AccessToken鉴权等，详见 <a href=\"https://github.com/smackgg/reversevoice/blob/master/server/src/controllers/wechat.ts\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">/server/src/controllers/wechat.ts</a>, 下面贴出部分核心代码</p><pre class=\"javascript hljs\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code class=\"js\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: normal; overflow-wrap: normal; white-space: inherit;'><span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 画图</span>\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">const</span> draw = <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">async</span> () =&gt; {\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 绘制之前 loading</span>\r\n  Taro.showLoading({\r\n    <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">title</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'海报生成中...'</span>,\r\n    <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">mask</span>: <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: teal;\">true</span>,\r\n  })\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 获取图片信息</span>\r\n  <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">const</span> [productImgInfo, qrcodeImgInfo] = <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">await</span> <span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">Promise</span>.all([\r\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">this</span>.getImageInfo(sharePoster), <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 获取主图</span>\r\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">this</span>.getQrImgInfo(), <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 获取二维码图片</span>\r\n  ])\r\n\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// product image 宽高</span>\r\n  <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">const</span> pW = CANVAS_WIDTH\r\n  <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">const</span> pH = (pW / productImgInfo.width) * productImgInfo.height\r\n\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// canvas 高度</span>\r\n  <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">let</span> canvasHeight = pH\r\n\r\n  <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">const</span> ctx = Taro.createCanvasContext(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'canvas'</span>, <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: teal;\">null</span>)\r\n\r\n  ctx.fillStyle = <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'#fff'</span>\r\n  ctx.fillRect(<span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">0</span>, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">0</span>, CANVAS_WIDTH, canvasHeight)\r\n\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 绘制背景图片</span>\r\n  ctx.drawImage(sharePoster, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">0</span>, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">0</span>, pW, pH)\r\n\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 绘制二维码 （因为有角度，需要旋转画布，再旋转回来）</span>\r\n  ctx.rotate(-<span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">Math</span>.PI / <span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">32</span>)\r\n  ctx.translate(<span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">-25</span> * ratio, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">10</span> * ratio)\r\n  ctx.drawImage(qrcodeImgInfo.path, QR_LEFT, QR_TOP, QR_WIDTH, QR_WIDTH)\r\n  ctx.rotate(<span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">Math</span>.PI / <span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">32</span>)\r\n  <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">this</span>.setState({\r\n    <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">canvasStyle</span>: {\r\n      ...this.state.canvasStyle,\r\n      <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">height</span>: canvasHeight,\r\n    },\r\n  })\r\n  ctx.stroke()\r\n  setTimeout(<span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-params\" style=\"box-sizing: border-box;\">()</span> =&gt;</span> {\r\n    Taro.hideLoading()\r\n    ctx.draw()\r\n  }, <span class=\"hljs-number\" style=\"box-sizing: border-box; color: teal;\">500</span>)\r\n}</code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">微信分享 HOC 函数 <a href=\"https://github.com/smackgg/reversevoice/blob/master/wechatapp/src/components/%40withShare/index.tsx\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">./wechatapp/components/@withShare</a></li></ul><pre class=\"javascript hljs\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code class=\"js\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: normal; overflow-wrap: normal; white-space: inherit;'><span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 微信小程序每个页面几乎都需要配置分享的参数，并且需要动态更改分享参数</span>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 所以抽离 HOC 组件，方便页面使用</span>\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">import</span> { ComponentClass } <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'react'</span>\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">import</span> Taro <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'@tarojs/taro'</span>\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">import</span> { connect } <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'@tarojs/redux'</span>;\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">import</span> defaultShareImg <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">from</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'@/assets/images/share.png'</span>\r\n\r\ntype Options = {\r\n  title?: string\r\n  imageUrl?: string\r\n  path?: string\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">const</span> defalutOptions: Options = {\r\n  <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">title</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'你能听懂我说啥么？最近很火的反转录音来啦~'</span>,\r\n  <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">imageUrl</span>: defaultShareImg,\r\n  <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">path</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'pages/index/index'</span>,\r\n}\r\n\r\n<span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; color: rgb(153, 0, 0); font-weight: 700;\">withShare</span>(<span class=\"hljs-params\" style=\"box-sizing: border-box;\"></span>) </span>{\r\n  <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">return</span> <span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">function</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; color: rgb(153, 0, 0); font-weight: 700;\">demoComponent</span>(<span class=\"hljs-params\" style=\"box-sizing: border-box;\">Component: ComponentClass</span>) </span>{\r\n    @connect(<span class=\"hljs-function\" style=\"box-sizing: border-box;\">(<span class=\"hljs-params\" style=\"box-sizing: border-box;\">{ user }</span>) =&gt;</span> ({\r\n      <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">userInfo</span>: user.userInfo\r\n    }))\r\n    <span class=\"hljs-class\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; color: rgb(68, 85, 136); font-weight: 700;\">WithShare</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">extends</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; color: rgb(68, 85, 136); font-weight: 700;\">Component</span> </span>{\r\n      $shareOptions?: Options\r\n      <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">async</span> componentWillMount() {\r\n        Taro.showShareMenu({\r\n          <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">withShareTicket</span>: <span class=\"hljs-literal\" style=\"box-sizing: border-box; color: teal;\">true</span>,\r\n        })\r\n\r\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">super</span>.componentWillMount) {\r\n          <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">super</span>.componentWillMount()\r\n        }\r\n      }\r\n\r\n      <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// 点击分享的那一刻会进行调用</span>\r\n      onShareAppMessage() {\r\n        <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">// const sharePath = `${path}&amp;shareFromUser=${userInfo.shareId}`</span>\r\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">let</span> options = defalutOptions\r\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">this</span>.$shareOptions) {\r\n          options = {\r\n            ...defalutOptions,\r\n            ...this.$shareOptions,\r\n          }\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">return</span> options\r\n      }\r\n\r\n      render() {\r\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">super</span>.render()\r\n      }\r\n    }\r\n\r\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">return</span> WithShare\r\n  }\r\n}\r\n\r\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">export</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">default</span> withShare</code></pre><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><a href=\"https://github.com/smackgg/reversevoice/blob/master/wechatapp/src/pages/index/index.tsx#L53\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">使用</a></p><pre class=\"javascript hljs\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code class=\"js\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: normal; overflow-wrap: normal; white-space: inherit;'>@withShare()\r\n<span class=\"hljs-class\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; color: rgb(68, 85, 136); font-weight: 700;\">Room</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">extends</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; color: rgb(68, 85, 136); font-weight: 700;\">Component</span> </span>{\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">/**\r\n * 指定config的类型声明为: Taro.Config\r\n *\r\n * 由于 typescript 对于 object 类型推导只能推出 Key 的基本类型\r\n * 对于像 navigationBarTextStyle: 'black' 这样的推导出的类型是 string\r\n * 提示和声明 navigationBarTextStyle: 'black' | 'white' 类型冲突, 需要显示声明类型\r\n */</span>\r\n  config: Config = {\r\n    <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">navigationBarTitleText</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'首页'</span>,\r\n  }\r\n\r\n  $shareOptions = {\r\n    <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">title</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'倒放挑战！你能听懂我倒立洗头~'</span>,\r\n    <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">path</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">'pages/index/index'</span>,\r\n    <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">imageUrl</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(221, 17, 68);\">''</span>,\r\n  }\r\n\r\n  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\">/**\r\n    ....\r\n  */</span>\r\n}\r\n</code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">微信用户登录流程</li></ul><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">微信官方文档登录流程</a><br style=\"box-sizing: border-box;\">具体实现可以去看源码</p><h1 id=\"item-3\" style='box-sizing: border-box; margin: 2.75rem 0px 1rem; line-height: 1.2; font-size: 2rem; padding-bottom: 0.5rem; border-bottom: 3px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>项目运行 - 后端</h1><h2 id=\"item-3-3\" style='box-sizing: border-box; margin: 2.5rem 0px 1rem; line-height: 1.2; font-size: 1.75rem; padding-bottom: 0.5rem; border-bottom: 1px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>准备</h2><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>需要提前安装:</p><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">Install <a href=\"https://nodejs.org/en/\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">Node.js</a></li><li style=\"box-sizing: border-box;\">Install <a href=\"https://docs.mongodb.com/manual/installation/\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">MongoDB</a></li></ul><h2 id=\"item-3-4\" style='box-sizing: border-box; margin: 2.5rem 0px 1rem; line-height: 1.2; font-size: 1.75rem; padding-bottom: 0.5rem; border-bottom: 1px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>开始</h2><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">克隆项目并进入后端目录</li></ul><pre class=\"hljs axapta\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: break-word; overflow-wrap: normal; white-space: initial;'>cd <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">server</span></code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">安装依赖</li></ul><pre class=\"hljs cmake\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: break-word; overflow-wrap: normal; white-space: initial;'>npm <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">install</span></code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">设置 mongoDB</li></ul><pre class=\"bash hljs\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code class=\"bash\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: normal; overflow-wrap: normal; white-space: inherit;'><span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\"># create the db directory</span>\r\nsudo mkdir -p /data/db\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\"># give the db correct read/write permissions</span>\r\nsudo chmod 777 /data/db\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\"># starting from macOS 10.15 even the admin cannot create directory at root</span>\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\"># so lets create the db diretory under the home directory.</span>\r\nmkdir -p ~/data/db\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\"># user account has automatically read and write permissions for ~/data/db.</span></code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">启动 mongoDB (Start your mongoDB server (you'll probably want another command prompt)</li></ul><pre class=\"bash hljs\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code class=\"bash\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: normal; overflow-wrap: normal; white-space: inherit;'>mongod\r\n\r\n<span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(153, 153, 136); font-style: italic;\"># on macOS 10.15 or above the db directory is under home directory</span>\r\nmongod --dbpath ~/data/db</code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">打包并运行项目</li></ul><pre class=\"hljs dockerfile\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: normal; overflow-wrap: normal; white-space: inherit;'>npm <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">run</span><span class=\"bash\" style=\"box-sizing: border-box;\"> build\r\n</span>npm start</code></pre><h1 id=\"item-4\" style='box-sizing: border-box; margin: 2.75rem 0px 1rem; line-height: 1.2; font-size: 2rem; padding-bottom: 0.5rem; border-bottom: 3px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>项目运行 - 小程序端</h1><h2 id=\"item-4-5\" style='box-sizing: border-box; margin: 2.5rem 0px 1rem; line-height: 1.2; font-size: 1.75rem; padding-bottom: 0.5rem; border-bottom: 1px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>准备</h2><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>需要提前安装:</p><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">Install <a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html\" rel=\"nofollow noreferrer\" style=\"box-sizing: border-box; color: rgb(0, 150, 94); background-color: transparent; text-decoration-line: none;\">微信开发者工具</a></li></ul><h2 id=\"item-4-6\" style='box-sizing: border-box; margin: 2.5rem 0px 1rem; line-height: 1.2; font-size: 1.75rem; padding-bottom: 0.5rem; border-bottom: 1px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>开始</h2><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">克隆项目并进入小程序目录</li></ul><pre class=\"hljs bash\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: break-word; overflow-wrap: normal; white-space: initial;'><span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">cd</span> wechatapp</code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">安装依赖</li></ul><pre class=\"hljs cmake\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: break-word; overflow-wrap: normal; white-space: initial;'>npm <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">install</span></code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">新建 .env 文件</li></ul><pre class=\"hljs stylus\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: normal; overflow-wrap: normal; white-space: inherit;'>在 wechatapp/src/utils 目录下克隆 env<span class=\"hljs-selector-class\" style=\"box-sizing: border-box;\">.example</span><span class=\"hljs-selector-class\" style=\"box-sizing: border-box;\">.ts</span> 文件至同目录命名为 <span class=\"hljs-selector-class\" style=\"box-sizing: border-box;\">.env</span><span class=\"hljs-selector-class\" style=\"box-sizing: border-box;\">.ts</span> 文件\r\n此文件两个参数分别代表本地开发和线上部署的请求地址</code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">运行项目</li></ul><pre class=\"hljs dockerfile\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: normal; overflow-wrap: normal; white-space: inherit;'>npm <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">run</span><span class=\"bash\" style=\"box-sizing: border-box;\"> dev:weapp // development mode\r\n</span>或者 npm <span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: 700;\">run</span><span class=\"bash\" style=\"box-sizing: border-box;\"> build:weapp // production mode</span></code></pre><ul style='box-sizing: border-box; margin-bottom: 1.25rem; margin-top: 0px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'><li style=\"box-sizing: border-box;\">微信开发者工具</li></ul><pre class=\"hljs processing\" style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; margin-top: 0px; margin-bottom: 1.25rem; overflow: auto; color: rgb(51, 51, 51); padding: 0.5rem; background: rgb(233, 236, 239); max-height: 35rem; line-height: 1.5;'><code style='box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; font-size: inherit; color: inherit; word-break: normal; overflow-wrap: normal; white-space: inherit;'>选择导入项目，并选择 wechatapp/<span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(0, 134, 179);\">dist</span> 目录\r\n若本地开发，需要在开发者工具中设置开启“不校验合法域名“</code></pre><h1 id=\"item-5\" style='box-sizing: border-box; margin: 2.75rem 0px 1rem; line-height: 1.2; font-size: 2rem; padding-bottom: 0.5rem; border-bottom: 3px double rgba(0, 0, 0, 0.1); color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; background-color: rgb(255, 255, 255);'>License</h1><p style='box-sizing: border-box; margin-top: 0px; margin-bottom: 1.25rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; background-color: rgb(255, 255, 255);'>MIT</p> </td>", "pub_time": "2019-11-29 00:21", "author": "Rolan"}
{"title": "微信小程序后端开发流程 ", "content": "<td id=\"article_content\"> \n                     \n                    <p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>1、前端调用 wx.login 返回了code，然后调用wx.getUserInfo获取到用户的昵称 头像 2、服务端根据code去微信获取openid， 接口地址： <a target=\"_blank\" href=\"https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html%EF%BC%9B%E5%90%8C%E6%97%B6%EF%BC%8C%E6%9B%B4%E6%96%B0%E7%94%A8%E6%88%B7%E6%98%B5%E7%A7%B0%E5%A4%B4%E5%83%8F%E7%AD%89%E8%B5%84%E6%96%99\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">developers.weixin.qq.com/miniprogram…</a></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>后端接口开发</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>controller层</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">OauthController</span> </span>{\r\n\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@Autowired</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> WeChatService weChatService;\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 微信授权用js_code换取openId\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@param</span> code\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@return</span>\r\n     */</span>\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@GetMapping(<span class=\"hljs-meta-string\" style=\"color: rgb(77, 153, 191);\">\"/code2Session\"</span>)</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> BaseResponse code2Session(String code) {\r\n        log.info(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"code2Session,code={}\"</span>, code);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (StringUtil.isEmpty(code)) {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> BaseResponse.buildFail(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"参数异常\"</span>);\r\n        }\r\n        Code2SessionResponse res = weChatService.code2Session(code);\r\n        log.info(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"code2Session,res={}\"</span>, res);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!res.isSuccess()) {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> BaseResponse.buildFail(res.getErrCode(), res.getErrMsg());\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> BaseResponse.buildSuccess(res);\r\n    }\r\n\r\n\r\n <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 解密获取手机号\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@param</span> request\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@param</span> response\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@param</span> param\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@return</span>\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> BaseResponse decryptGetPhone(HttpServletRequest request, HttpServletResponse response,\r\n                                    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@RequestBody</span> OauthParam param) {\r\n   \r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!StringUtil.isEmpty(param.getOpenId())) {<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//微信授权登录</span>\r\n                String sessionKey = weChatService.getSessionKey(param.getOpenId());\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (StringUtil.isEmpty(sessionKey)) {\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> BaseResponse.buildFail(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"会话不存在\"</span>);\r\n                }\r\n                Sha1Utils sha = new Sha1Utils();\r\n                <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 获取用户信息</span>\r\n                log.debug(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"微信登陆 sessionKey = {}\"</span>, sessionKey);\r\n                String userInfoStr = sha.decryptWXAppletInfo(sessionKey, param.getEncryptedData(), param.getIv());\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (StringUtil.isEmpty(userInfoStr)) {\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> BaseResponse.buildFail(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"无法获取用户信息\"</span>);\r\n                }\r\n                JSONObject json = JSONObject.parseObject(userInfoStr);\r\n                <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//绑定微信的手机号</span>\r\n                String tel = json.getString(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"purePhoneNumber\"</span>);\r\n                Assert.isTrue(!StringUtils.isEmpty(tel), <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"无法获取用户手机号\"</span>);\r\n                BaseResponse baseResponse=new BaseResponse();\r\n                baseResponse.setResultInfo(tel);\r\n                baseResponse.setState(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>);\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> baseResponse;\r\n            }\r\n\r\n    }\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>接口</h4><pre class=\"prettyprint hljs java\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">interface</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">WeChatService</span> </span>{\r\n\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 用code换取openid\r\n     *\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@param</span> code\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@return</span>\r\n     */</span>\r\n    <span class=\"hljs-function\">Code2SessionResponse <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">code2Session</span><span class=\"hljs-params\">(String code)</span></span>;\r\n\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 获取凭证\r\n     *\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@return</span>\r\n     */</span>\r\n    <span class=\"hljs-function\">String <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">getAccessToken</span><span class=\"hljs-params\">()</span></span>;\r\n\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 获取凭证\r\n     *\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@param</span> isForce\r\n     * <span class=\"hljs-doctag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">@return</span>\r\n     */</span>\r\n    <span class=\"hljs-function\">String <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">getAccessToken</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">boolean</span> isForce)</span></span>;\r\n\r\n\r\n    <span class=\"hljs-function\">String <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">getSessionKey</span><span class=\"hljs-params\">(String openId)</span></span>;\r\n\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>实现类</h4><pre class=\"prettyprint hljs dart\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>public <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">WeChatServiceImpl</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">implements</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">WeChatService</span> </span>{\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//获取配置文件数据</span>\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@Value</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${wechat.miniprogram.id}</span>\"</span>)\r\n    private <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> appId;\r\n\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@Value</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"<span class=\"hljs-subst\" style=\"color: rgb(68, 68, 68);\">${wechat.miniprogram.secret}</span>\"</span>)\r\n    private <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> appSecret;\r\n\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@Reference</span>\r\n    private SysUserService sysUserService;\r\n\r\n\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@Override</span>\r\n    public Code2SessionResponse code2Session(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> code) {\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> rawResponse = HttpClientUtil\r\n                .<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>.format(WechatConstant.URL_CODE2SESSION, appId, appSecret, code));\r\n        log.info(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"rawResponse====={}\"</span>, rawResponse);\r\n        Code2SessionResponse response = JSON.parseObject(rawResponse, Code2SessionResponse.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (response.isSuccess()) {\r\n            cacheSessionKey(response);\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> response;\r\n    }\r\n\r\n    private <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">void</span> cacheSessionKey(Code2SessionResponse response) {\r\n        RedisCache redisCache = RedisCache.getInstance();\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> key = RedisCacheKeys.getWxSessionKeyKey(response.getOpenId());\r\n        redisCache.setCache(key, <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2147483647</span>, response.getSessionKey());\r\n    }\r\n\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@Override</span>\r\n    public <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> getAccessToken() {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> getAccessToken(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">false</span>);\r\n    }\r\n\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@Override</span>\r\n    public <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> getAccessToken(boolean isForce) {\r\n        RedisCache redisCache = RedisCache.getInstance();\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> accessToken = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">null</span>;\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (!isForce) {\r\n            accessToken = redisCache.getCache(RedisCacheKeys.getWxAccessTokenKey(appId));\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (StringUtil.isNotEmpty(accessToken)) {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> accessToken;\r\n        }\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> rawResponse = HttpClientUtil\r\n                .<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>.format(WechatConstant.URL_GET_ACCESS_TOKEN, appId, appSecret));\r\n        AccessTokenResponse response = JSON.parseObject(rawResponse, AccessTokenResponse.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span>);\r\n        log.info(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"getAccessToken:response={}\"</span>, response);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (response.isSuccess()) {\r\n            redisCache.setCache(RedisCacheKeys.getWxAccessTokenKey(appId), <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">7000</span>, response.getAcessToken());\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> response.getAcessToken();\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">null</span>;\r\n    }\r\n\r\n\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@Override</span>\r\n    public <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> getSessionKey(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> openId) {\r\n        RedisCache redisCache = RedisCache.getInstance();\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> key = RedisCacheKeys.getWxSessionKeyKey(openId);\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> sessionKey = redisCache.getCache(key);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> sessionKey;\r\n    }\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>用到的解密工具类</h4><pre class=\"prettyprint hljs java\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Sha1Utils</span> </span>{\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> String <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">decryptWXAppletInfo</span><span class=\"hljs-params\">(String sessionKey, String encryptedData, String iv)</span> </span>{\r\n        String result = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">null</span>;\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">byte</span>[] encrypData = Base64.decodeBase64(encryptedData);\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">byte</span>[] ivData = Base64.decodeBase64(iv);\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">byte</span>[] sessionKeyB = Base64.decodeBase64(sessionKey);\r\n\r\n            AlgorithmParameterSpec ivSpec = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> IvParameterSpec(ivData);\r\n            Cipher cipher = Cipher.getInstance(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"AES/CBC/PKCS5Padding\"</span>);\r\n            SecretKeySpec keySpec = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> SecretKeySpec(sessionKeyB, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"AES\"</span>);\r\n            cipher.init(Cipher.DECRYPT_MODE, keySpec, ivSpec);\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">byte</span>[] doFinal = cipher.doFinal(encrypData);\r\n            result = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> String(doFinal);\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> result;\r\n        } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (Exception e) {\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//e.printStackTrace();</span>\r\n            log.error(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"decryptWXAppletInfo error\"</span>,e);\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">null</span>;\r\n    }\r\n\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>网络请求工具类</h4><pre class=\"prettyprint hljs typescript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> HttpClientUtil {\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// utf-8字符编码</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> final <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>                        CHARSET_UTF_8          = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"utf-8\"</span>;\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// HTTP内容类型。</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> final <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>                        CONTENT_TYPE_TEXT_HTML = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"text/xml\"</span>;\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// HTTP内容类型。相当于form表单的形式，提交数据</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> final <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>                        CONTENT_TYPE_FORM_URL  = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"application/x-www-form-urlencoded\"</span>;\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// HTTP内容类型。相当于form表单的形式，提交数据</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> final <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>                        CONTENT_TYPE_JSON_URL  = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"application/json;charset=utf-8\"</span>;\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 连接管理器</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> PoolingHttpClientConnectionManager pool;\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 请求配置</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> volatile RequestConfig requestConfig;\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> CloseableHttpClient getNewHttpClient() {\r\n\r\n        CloseableHttpClient httpClient = HttpClients.custom()\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 设置连接池管理</span>\r\n            .setConnectionManager(pool)\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 设置请求配置</span>\r\n            .setDefaultRequestConfig(getRequestConfig())\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 设置重试次数</span>\r\n            .setRetryHandler(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> DefaultHttpRequestRetryHandler(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>, <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">false</span>)).build();\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> httpClient;\r\n    }\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 发送 post请求\r\n     *\r\n     * @param httpUrl\r\n     *            地址\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> post(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 创建httpPost</span>\r\n        HttpPost httpPost = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> HttpPost(httpUrl);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> request(httpPost);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> byte[] postRaw(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 创建httpPost</span>\r\n        HttpPost httpPost = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> HttpPost(httpUrl);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> requestRaw(httpPost);\r\n    }\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 发送 get请求\r\n     *\r\n     * @param httpUrl\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">get</span>(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 创建get请求</span>\r\n        HttpGet httpGet = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> HttpGet(httpUrl);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> request(httpGet);\r\n    }\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 发送 post请求（带文件）\r\n     *\r\n     * @param httpUrl\r\n     *            地址\r\n     * @param maps\r\n     *            参数\r\n     * @param fileLists\r\n     *            附件\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> post(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl, Map&lt;<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>&gt; maps, List&lt;File&gt; fileLists,\r\n                              <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> fileName) {\r\n        HttpPost httpPost = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> HttpPost(httpUrl);<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 创建httpPost</span>\r\n        MultipartEntityBuilder meBuilder = MultipartEntityBuilder.create();\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (maps != <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>) {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> key : maps.keySet()) {\r\n                meBuilder.addPart(key, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> StringBody(maps.get(key), ContentType.TEXT_PLAIN));\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (fileLists != <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>) {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">for</span> (File file : fileLists) {\r\n                FileBody fileBody = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> FileBody(file);\r\n                meBuilder.addPart(fileName, fileBody);\r\n            }\r\n        }\r\n        HttpEntity reqEntity = meBuilder.build();\r\n        httpPost.setEntity(reqEntity);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> request(httpPost);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> post(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl, Map&lt;<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>&gt; maps, List&lt;File&gt; fileLists) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> post(httpUrl, maps, fileLists, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"file\"</span>);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> post(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl, List&lt;File&gt; fileLists) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> post(httpUrl, Collections.emptyMap(), fileLists, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"file\"</span>);\r\n    }\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 发送 post请求\r\n     *\r\n     * @param httpUrl\r\n     *            地址\r\n     * @param params\r\n     *            参数(格式:key1=value1&amp;key2=value2)\r\n     *\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> post(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> params) {\r\n        HttpPost httpPost = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> HttpPost(httpUrl);<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 创建httpPost</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 设置参数</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (params != <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span> &amp;&amp; params.trim().length() &gt; <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>) {\r\n                StringEntity stringEntity = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> StringEntity(params, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"UTF-8\"</span>);\r\n                stringEntity.setContentType(CONTENT_TYPE_FORM_URL);\r\n                httpPost.setEntity(stringEntity);\r\n            }\r\n        } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> request(httpPost);\r\n    }\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 发送 post请求\r\n     *\r\n     * @param maps\r\n     *            参数\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> post(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl, Map&lt;<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>&gt; maps) {\r\n        <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> param = convertStringParamter(maps);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> post(httpUrl, param);\r\n    }\r\n\r\n\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 发送 post请求 发送json数据\r\n     *\r\n     * @param httpUrl\r\n     *            地址\r\n     * @param content\r\n     *\r\n     *\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> post(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> content, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> contentType) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//        HttpPost httpPost = new HttpPost(httpUrl);// 创建httpPost</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//        try {</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//            // 设置参数</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//            if (StringUtils.isNotEmpty(content)) {</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//                StringEntity stringEntity = new StringEntity(content, \"UTF-8\");</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//                stringEntity.setContentType(contentType);</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//                httpPost.setEntity(stringEntity);</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//            }</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//        } catch (Exception e) {</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//            e.printStackTrace();</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//        }</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//        return request(httpPost);</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>(postRaw(httpUrl, content, contentType), StandardCharsets.UTF_8);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> byte[] postRaw(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> content, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> contentType) {\r\n        HttpPost httpPost = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> HttpPost(httpUrl);<span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 创建httpPost</span>\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 设置参数</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (StringUtils.isNotEmpty(content)) {\r\n                StringEntity stringEntity = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> StringEntity(content, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"UTF-8\"</span>);\r\n                stringEntity.setContentType(contentType);\r\n                httpPost.setEntity(stringEntity);\r\n            }\r\n        } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> requestRaw(httpPost);\r\n    }\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 发送 post请求 发送json数据\r\n     *\r\n     * @param httpUrl\r\n     *            地址\r\n     * @param paramsJson\r\n     *            参数(格式 json)\r\n     *\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> postJson(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> paramsJson) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> post(httpUrl, paramsJson, CONTENT_TYPE_JSON_URL);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> byte[] postJsonRaw(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> httpUrl, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> paramsJson) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> postRaw(httpUrl, paramsJson, CONTENT_TYPE_JSON_URL);\r\n    }\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 发送 post请求 发送xml数据\r\n     *\r\n     * @param url   地址\r\n     * @param paramsXml  参数(格式 Xml)\r\n     *\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> postXml(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> url, <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> paramsXml) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> post(url, paramsXml, CONTENT_TYPE_TEXT_HTML);\r\n    }\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 将map集合的键值对转化成：key1=value1&amp;key2=value2 的形式\r\n     *\r\n     * @param parameterMap\r\n     *            需要转化的键值对集合\r\n     * @return 字符串\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> convertStringParamter(Map parameterMap) {\r\n        StringBuilder parameterBuffer = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> StringBuilder();\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (parameterMap != <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>) {\r\n            Iterator iterator = parameterMap.keySet().iterator();\r\n            <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> key = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>;\r\n            <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> value = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>;\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">while</span> (iterator.hasNext()) {\r\n                key = (<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>) iterator.next();\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (parameterMap.get(key) != <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>) {\r\n                    value = (<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>) parameterMap.get(key);\r\n                } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n                    value = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"\"</span>;\r\n                }\r\n                parameterBuffer.append(key).append(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"=\"</span>).append(value);\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (iterator.hasNext()) {\r\n                    parameterBuffer.append(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"&amp;\"</span>);\r\n                }\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> parameterBuffer.toString();\r\n    }\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 发送请求\r\n     *\r\n     * @param request\r\n     * @return\r\n     */</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> byte[] requestRaw(HttpRequestBase request) {\r\n\r\n        CloseableHttpClient httpClient;\r\n        CloseableHttpResponse response = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>;\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 响应内容</span>\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//        String responseContent = null;</span>\r\n        byte[] rawResponse = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>;\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 创建默认的httpClient实例.</span>\r\n            httpClient = getNewHttpClient();\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 配置请求信息</span>\r\n            request.setConfig(requestConfig);\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 执行请求</span>\r\n            response = httpClient.execute(request);\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 得到响应实例</span>\r\n            HttpEntity entity = response.getEntity();\r\n\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 可以获得响应头</span>\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// Header[] headers = response.getHeaders(HttpHeaders.CONTENT_TYPE);</span>\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// for (Header header : headers) {</span>\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// System.out.println(header.getName());</span>\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// }</span>\r\n\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 得到响应类型</span>\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// System.out.println(ContentType.getOrDefault(response.getEntity()).getMimeType());</span>\r\n\r\n            <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 判断响应状态</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (response.getStatusLine().getStatusCode() &gt;= <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">300</span>) {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">throw</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> Exception(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"HTTP Request is not success, Response code is \"</span>\r\n                                    + response.getStatusLine().getStatusCode());\r\n            }\r\n\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (HttpStatus.SC_OK == response.getStatusLine().getStatusCode()) {\r\n                rawResponse = EntityUtils.toByteArray(entity);\r\n                <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//                responseContent = EntityUtils.toString(entity, CHARSET_UTF_8);</span>\r\n                EntityUtils.consume(entity);\r\n            }\r\n\r\n        } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (Exception e) {\r\n            e.printStackTrace();\r\n        } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">finally</span> {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n                <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 释放资源</span>\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (response != <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>) {\r\n                    response.close();\r\n                }\r\n            } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> rawResponse;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> request(HttpRequestBase req) {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>(requestRaw(req), StandardCharsets.UTF_8);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">static</span> RequestConfig getRequestConfig() {\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (requestConfig == <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>) {\r\n            synchronized (HttpClientUtil.class) {\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (requestConfig == <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>) {\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n                        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//System.out.println(\"初始化HttpClientTest~~~开始\");</span>\r\n                        SSLContextBuilder builder = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> SSLContextBuilder();\r\n                        builder.loadTrustMaterial(<span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> TrustSelfSignedStrategy());\r\n                        SSLConnectionSocketFactory sslsf = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> SSLConnectionSocketFactory(\r\n                            builder.build());\r\n                        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 配置同时支持 HTTP 和 HTPPS</span>\r\n                        Registry&lt;ConnectionSocketFactory&gt; socketFactoryRegistry = RegistryBuilder\r\n                            .&lt;ConnectionSocketFactory&gt; create()\r\n                            .register(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"http\"</span>, PlainConnectionSocketFactory.getSocketFactory())\r\n                            .register(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https\"</span>, sslsf).build();\r\n                        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 初始化连接管理器</span>\r\n                        pool = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> PoolingHttpClientConnectionManager(socketFactoryRegistry);\r\n                        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 将最大连接数增加到200，实际项目最好从配置文件中读取这个值</span>\r\n                        pool.setMaxTotal(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">200</span>);\r\n                        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 设置最大路由</span>\r\n                        pool.setDefaultMaxPerRoute(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>);\r\n                        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 根据默认超时限制初始化requestConfig</span>\r\n                        int socketTimeout = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10000</span>;\r\n                        int connectTimeout = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10000</span>;\r\n                        int connectionRequestTimeout = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">10000</span>;\r\n                        requestConfig = RequestConfig.custom()\r\n                            .setConnectionRequestTimeout(connectionRequestTimeout)\r\n                            .setSocketTimeout(socketTimeout).setConnectTimeout(connectTimeout)\r\n                            .build();\r\n\r\n                    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (NoSuchAlgorithmException e) {\r\n                        e.printStackTrace();\r\n                    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (KeyStoreException e) {\r\n                        e.printStackTrace();\r\n                    } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (KeyManagementException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 设置请求超时时间</span>\r\n                    requestConfig = RequestConfig.custom().setSocketTimeout(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50000</span>)\r\n                        .setConnectTimeout(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50000</span>).setConnectionRequestTimeout(<span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">50000</span>).build();\r\n                }\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> requestConfig;\r\n    }\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>常量</h4><pre class=\"prettyprint hljs typescript\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">interface</span> WechatConstant {\r\n    Integer OK_STATUS            = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>  URL_CODE2SESSION     = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://api.weixin.qq.com/sns/jscode2session?appid=%s&amp;secret=%s&amp;js_code=%s&amp;grant_type=authorization_code\"</span>;\r\n\r\n\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>  URL_GET_ACCESS_TOKEN     = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=%s&amp;secret=%s\"</span>;\r\n\r\n\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> URL_GET_IMAGE = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"http://file.api.weixin.qq.com/cgi-bin/media/get?access_token=%s&amp;media_id=%s\"</span>;\r\n    \r\n    \r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 给公众号发送信息。参考https://mp.weixin.qq.com/advanced/tmplmsg?action=faq&amp;token=708366329⟨=zh_CN\r\n     */</span>\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>  URL_SEND_TO_CHANNEL  = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=%s\"</span>;\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>  URL_SEND_MESSAGE     = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=%s\"</span>;\r\n    \r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 发送模板消息。参考https://developers.weixin.qq.com/miniprogram/dev/api-backend/sendMiniTemplateMessage.html\r\n     */</span>\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> URL_SEND_TEMPLATE_MESSAGE = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=%s\"</span>;\r\n\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>  URL_QR_CODE_UNLIMTED = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=%s\"</span>;\r\n    \r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span>  URL_QR_CODE = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://api.weixin.qq.com/wxa/getwxacode?access_token=%s\"</span>;\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 获取标签下粉丝列表\r\n     */</span>\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> URL_ALL_FANS_OPENID = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://api.weixin.qq.com/cgi-bin/user/tag/get?access_token=%s\"</span>;\r\n    <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">/**\r\n     * 获取公众号已创建的标签\r\n     */</span>\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">String</span> URL_ALL_TAGS = <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"https://api.weixin.qq.com/cgi-bin/tags/get?access_token=%s\"</span>;\r\n\r\n}\r\n复制代码</pre><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>使用到的实体类</h4><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Code2SessionResponse</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">implements</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">Serializable</span> </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> static Integer RESPONSE_OK = <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">0</span>;\r\n\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@JSONField(name = <span class=\"hljs-meta-string\" style=\"color: rgb(77, 153, 191);\">\"openid\"</span>)</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> String       openId;\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@JSONField(name = <span class=\"hljs-meta-string\" style=\"color: rgb(77, 153, 191);\">\"session_key\"</span>)</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> String       sessionKey;\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@JSONField(name = <span class=\"hljs-meta-string\" style=\"color: rgb(77, 153, 191);\">\"unionid\"</span>)</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> String       unionId;\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@JSONField(name = <span class=\"hljs-meta-string\" style=\"color: rgb(77, 153, 191);\">\"errcode\"</span>)</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> Integer      errCode;\r\n    <span class=\"hljs-meta\" style=\"color: rgb(31, 113, 153);\">@JSONField(name = <span class=\"hljs-meta-string\" style=\"color: rgb(77, 153, 191);\">\"errmsg\"</span>)</span>\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">private</span> String      errMsg;\r\n\r\n\r\n\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> boolean isSuccess() {\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.errCode == <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span> || RESPONSE_OK.equals(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">this</span>.errCode);\r\n    }\r\n}\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>总结：微信小程序的后端开发主要就是对用户进行授权 ， 1、前端调用 wx.login 返回了code，然后调用wx.getUserInfo获取到用户的昵称 头像 2.首先通过微信授权用js_code换取openId，来获取openId，前端传微信的参数 code字段 3.然后解密获取手机号 前端需要传openId encryptedData iv 等字段来获取用户的的授权手机号</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>这些信息都获取后 接着就是调用后端的登陆接口，登陆接口如果只有授权登录就是我们将接口参数为下图最后三个字段为前端必填字段</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/13/100809tve3uszjapjzr3q3.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/13/100809tve3uszjapjzr3q3.jpg\"></a></p></figure><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>主要步骤是根据前端的openId获取sessionKey 然后根据sessionKey 和其他参数进行解密获取用户手机号</h4><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>通过解密获取授权登录的手机号，然后根据自己的业务逻辑处理即可，这样我们就可以根据授权的手机号进行授权登录</p><figure style='margin: 0px 0px 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-size: 16px; background-color: rgb(254, 254, 254);'><p><a href=\"data/attachment/portal/201911/13/100808t9rj2lrbgzyghjhl.jpg\" target=\"_blank\"><img src=\"data/attachment/portal/201911/13/100808t9rj2lrbgzyghjhl.jpg\"></a></p></figure> </td>", "pub_time": "2019-11-13 00:42", "author": "Rolan"}
